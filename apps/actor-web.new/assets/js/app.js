angular.module('actorWeb', ['ui.router', 'ngMaterial']);

var config;

config = function($stateProvider, $urlRouterProvider) {
  $stateProvider.state('home', {
    url: '/',
    views: {
      'toolbar': {
        templateUrl: 'app/shared/toolbar/toolbarDefaultView.html'
      },
      'sidebar': {
        templateUrl: 'app/shared/sidebar/sidebarDefaultView.html'
      }
    }
  }).state('login', {
    url: '/login',
    views: {
      'toolbar': {
        templateUrl: 'app/shared/toolbar/toolbarLoginView.html'
      },
      'login': {
        templateUrl: 'app/components/login/loginView.html'
      }
    }
  });
  return $urlRouterProvider.otherwise('/');
};

angular.module('actorWeb').config(config).run(function($rootScope, $state, $stateParams) {
  $rootScope.$state = $state;
  return $rootScope.$stateParams = $stateParams;
});

var MainController;

MainController = (function() {
  function MainController($mdSidenav, $mdMedia, $mdBottomSheet) {
    this.$mdSidenav = $mdSidenav;
    this.$mdMedia = $mdMedia;
    this.$mdBottomSheet = $mdBottomSheet;
    console.log('MainController');
    console.log('openBottomSheet');
    this.$mdBottomSheet.show({
      templateUrl: 'app/shared/bottomSheet/bottomSheetView.html',
      parent: '#content'
    });
  }

  MainController.prototype.openSidebar = function() {
    console.log('openSidebar');
    return this.$mdSidenav('left').toggle();
  };

  return MainController;

})();

MainController.$inject = ['$mdSidenav', '$mdMedia', '$mdBottomSheet'];

angular.module('actorWeb').controller('mainController', MainController);

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFwcC5jb2ZmZWUiLCJjb25maWcuY29mZmVlIiwiY29tcG9uZW50cy9tYWluL21haW5Db250cm9sbGVyLmNvZmZlZSJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUNFLENBQUMsTUFESCxDQUNVLFVBRFYsRUFDc0IsQ0FDbEIsV0FEa0IsRUFFbEIsWUFGa0IsQ0FEdEIsQ0FBQSxDQUFBOztBQ0FBLElBQUEsTUFBQTs7QUFBQSxNQUFBLEdBQVMsU0FBQyxjQUFELEVBQWlCLGtCQUFqQixHQUFBO0FBRVAsRUFBQSxjQUNFLENBQUMsS0FESCxDQUNTLE1BRFQsRUFFSTtBQUFBLElBQUEsR0FBQSxFQUFLLEdBQUw7QUFBQSxJQUNBLEtBQUEsRUFDRTtBQUFBLE1BQUEsU0FBQSxFQUFXO0FBQUEsUUFBQSxXQUFBLEVBQWEsNENBQWI7T0FBWDtBQUFBLE1BQ0EsU0FBQSxFQUFXO0FBQUEsUUFBQSxXQUFBLEVBQWEsNENBQWI7T0FEWDtLQUZGO0dBRkosQ0FPRSxDQUFDLEtBUEgsQ0FPUyxPQVBULEVBUUk7QUFBQSxJQUFBLEdBQUEsRUFBSyxRQUFMO0FBQUEsSUFDQSxLQUFBLEVBQ0U7QUFBQSxNQUFBLFNBQUEsRUFBVztBQUFBLFFBQUEsV0FBQSxFQUFhLDBDQUFiO09BQVg7QUFBQSxNQUNBLE9BQUEsRUFBUztBQUFBLFFBQUEsV0FBQSxFQUFhLHFDQUFiO09BRFQ7S0FGRjtHQVJKLENBQUEsQ0FBQTtTQWFBLGtCQUNFLENBQUMsU0FESCxDQUNhLEdBRGIsRUFmTztBQUFBLENBQVQsQ0FBQTs7QUFBQSxPQW1CRSxDQUFDLE1BREgsQ0FDVSxVQURWLENBRUUsQ0FBQyxNQUZILENBRVUsTUFGVixDQUdFLENBQUMsR0FISCxDQUdPLFNBQUMsVUFBRCxFQUFhLE1BQWIsRUFBcUIsWUFBckIsR0FBQTtBQUNILEVBQUEsVUFBVSxDQUFDLE1BQVgsR0FBb0IsTUFBcEIsQ0FBQTtTQUNBLFVBQVUsQ0FBQyxZQUFYLEdBQTBCLGFBRnZCO0FBQUEsQ0FIUCxDQWxCQSxDQUFBOztBQ0FBLElBQUEsY0FBQTs7QUFBQTtBQUNlLEVBQUEsd0JBQUMsVUFBRCxFQUFjLFFBQWQsRUFBeUIsY0FBekIsR0FBQTtBQUNYLElBRFksSUFBQyxDQUFBLGFBQUQsVUFDWixDQUFBO0FBQUEsSUFEeUIsSUFBQyxDQUFBLFdBQUQsUUFDekIsQ0FBQTtBQUFBLElBRG9DLElBQUMsQ0FBQSxpQkFBRCxjQUNwQyxDQUFBO0FBQUEsSUFBQSxPQUFPLENBQUMsR0FBUixDQUFZLGdCQUFaLENBQUEsQ0FBQTtBQUFBLElBQ0EsT0FBTyxDQUFDLEdBQVIsQ0FBWSxpQkFBWixDQURBLENBQUE7QUFBQSxJQUVBLElBQUMsQ0FBQSxjQUFjLENBQUMsSUFBaEIsQ0FDRTtBQUFBLE1BQUEsV0FBQSxFQUFhLDZDQUFiO0FBQUEsTUFDQSxNQUFBLEVBQVEsVUFEUjtLQURGLENBRkEsQ0FEVztFQUFBLENBQWI7O0FBQUEsMkJBT0EsV0FBQSxHQUFhLFNBQUEsR0FBQTtBQUNYLElBQUEsT0FBTyxDQUFDLEdBQVIsQ0FBWSxhQUFaLENBQUEsQ0FBQTtXQUNBLElBQUMsQ0FBQSxVQUFELENBQVksTUFBWixDQUFtQixDQUFDLE1BQXBCLENBQUEsRUFGVztFQUFBLENBUGIsQ0FBQTs7d0JBQUE7O0lBREYsQ0FBQTs7QUFBQSxjQVljLENBQUMsT0FBZixHQUF5QixDQUFDLFlBQUQsRUFBZSxVQUFmLEVBQTJCLGdCQUEzQixDQVp6QixDQUFBOztBQUFBLE9BZUUsQ0FBQyxNQURILENBQ1UsVUFEVixDQUVFLENBQUMsVUFGSCxDQUVjLGdCQUZkLEVBRWdDLGNBRmhDLENBZEEsQ0FBQSIsImZpbGUiOiJhcHAuanMiLCJzb3VyY2VzQ29udGVudCI6WyJhbmd1bGFyXG4gIC5tb2R1bGUgJ2FjdG9yV2ViJywgW1xuICAgICd1aS5yb3V0ZXInXG4gICAgJ25nTWF0ZXJpYWwnXG4jICAgICduZ1N0b3JhZ2UnXG4gIF1cbiIsImNvbmZpZyA9ICgkc3RhdGVQcm92aWRlciwgJHVybFJvdXRlclByb3ZpZGVyKSAtPlxuXG4gICRzdGF0ZVByb3ZpZGVyXG4gICAgLnN0YXRlICdob21lJyxcbiAgICAgIHVybDogJy8nXG4gICAgICB2aWV3czpcbiAgICAgICAgJ3Rvb2xiYXInOiB0ZW1wbGF0ZVVybDogJ2FwcC9zaGFyZWQvdG9vbGJhci90b29sYmFyRGVmYXVsdFZpZXcuaHRtbCdcbiAgICAgICAgJ3NpZGViYXInOiB0ZW1wbGF0ZVVybDogJ2FwcC9zaGFyZWQvc2lkZWJhci9zaWRlYmFyRGVmYXVsdFZpZXcuaHRtbCdcblxuICAgIC5zdGF0ZSAnbG9naW4nLFxuICAgICAgdXJsOiAnL2xvZ2luJ1xuICAgICAgdmlld3M6XG4gICAgICAgICd0b29sYmFyJzogdGVtcGxhdGVVcmw6ICdhcHAvc2hhcmVkL3Rvb2xiYXIvdG9vbGJhckxvZ2luVmlldy5odG1sJ1xuICAgICAgICAnbG9naW4nOiB0ZW1wbGF0ZVVybDogJ2FwcC9jb21wb25lbnRzL2xvZ2luL2xvZ2luVmlldy5odG1sJ1xuXG4gICR1cmxSb3V0ZXJQcm92aWRlclxuICAgIC5vdGhlcndpc2UgJy8nXG5cbmFuZ3VsYXJcbiAgLm1vZHVsZSAnYWN0b3JXZWInXG4gIC5jb25maWcgY29uZmlnXG4gIC5ydW4gKCRyb290U2NvcGUsICRzdGF0ZSwgJHN0YXRlUGFyYW1zKSAtPlxuICAgICRyb290U2NvcGUuJHN0YXRlID0gJHN0YXRlXG4gICAgJHJvb3RTY29wZS4kc3RhdGVQYXJhbXMgPSAkc3RhdGVQYXJhbXNcbiIsImNsYXNzIE1haW5Db250cm9sbGVyXG4gIGNvbnN0cnVjdG9yOiAoQCRtZFNpZGVuYXYsIEAkbWRNZWRpYSwgQCRtZEJvdHRvbVNoZWV0KSAtPlxuICAgIGNvbnNvbGUubG9nICdNYWluQ29udHJvbGxlcidcbiAgICBjb25zb2xlLmxvZyAnb3BlbkJvdHRvbVNoZWV0J1xuICAgIEAkbWRCb3R0b21TaGVldC5zaG93XG4gICAgICB0ZW1wbGF0ZVVybDogJ2FwcC9zaGFyZWQvYm90dG9tU2hlZXQvYm90dG9tU2hlZXRWaWV3Lmh0bWwnXG4gICAgICBwYXJlbnQ6ICcjY29udGVudCdcblxuICBvcGVuU2lkZWJhcjogLT5cbiAgICBjb25zb2xlLmxvZyAnb3BlblNpZGViYXInXG4gICAgQCRtZFNpZGVuYXYoJ2xlZnQnKS50b2dnbGUoKVxuXG5NYWluQ29udHJvbGxlci4kaW5qZWN0ID0gWyckbWRTaWRlbmF2JywgJyRtZE1lZGlhJywgJyRtZEJvdHRvbVNoZWV0J11cblxuYW5ndWxhclxuICAubW9kdWxlICdhY3RvcldlYidcbiAgLmNvbnRyb2xsZXIgJ21haW5Db250cm9sbGVyJywgTWFpbkNvbnRyb2xsZXJcbiJdLCJzb3VyY2VSb290IjoiL3NvdXJjZS8ifQ==