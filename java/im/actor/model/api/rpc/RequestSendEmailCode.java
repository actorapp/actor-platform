package im.actor.model.api.rpc;
/*
 *  Generated by the Actor API Scheme generator.  DO NOT EDIT!
 */

import im.actor.model.droidkit.bser.Bser;
import im.actor.model.droidkit.bser.BserParser;
import im.actor.model.droidkit.bser.BserObject;
import im.actor.model.droidkit.bser.BserValues;
import im.actor.model.droidkit.bser.BserWriter;
import im.actor.model.droidkit.bser.DataInput;
import im.actor.model.droidkit.bser.DataOutput;
import static im.actor.model.droidkit.bser.Utils.*;
import java.io.IOException;
import im.actor.model.network.parser.*;
import java.util.List;
import java.util.ArrayList;
import im.actor.model.api.*;

public class RequestSendEmailCode extends Request<ResponseVoid> {

    public static final int HEADER = 0x78;
    public static RequestSendEmailCode fromBytes(byte[] data) throws IOException {
        return Bser.parse(new RequestSendEmailCode(), data);
    }

    private String email;
    private String description;

    public RequestSendEmailCode(String email, String description) {
        this.email = email;
        this.description = description;
    }

    public RequestSendEmailCode() {

    }

    public String getEmail() {
        return this.email;
    }

    public String getDescription() {
        return this.description;
    }

    @Override
    public void parse(BserValues values) throws IOException {
        this.email = values.getString(1);
        this.description = values.optString(2);
    }

    @Override
    public void serialize(BserWriter writer) throws IOException {
        if (this.email == null) {
            throw new IOException();
        }
        writer.writeString(1, this.email);
        if (this.description != null) {
            writer.writeString(2, this.description);
        }
    }

    @Override
    public String toString() {
        String res = "rpc SendEmailCode{";
        res += "email=" + this.email;
        res += ", description=" + this.description;
        res += "}";
        return res;
    }

    @Override
    public int getHeaderKey() {
        return HEADER;
    }
}
