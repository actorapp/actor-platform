package im.actor.model.api.updates;
/*
 *  Generated by the Actor API Scheme generator.  DO NOT EDIT!
 */

import im.actor.model.droidkit.bser.Bser;
import im.actor.model.droidkit.bser.BserParser;
import im.actor.model.droidkit.bser.BserObject;
import im.actor.model.droidkit.bser.BserValues;
import im.actor.model.droidkit.bser.BserWriter;
import im.actor.model.droidkit.bser.DataInput;
import im.actor.model.droidkit.bser.DataOutput;
import static im.actor.model.droidkit.bser.Utils.*;
import java.io.IOException;
import im.actor.model.network.parser.*;
import java.util.List;
import java.util.ArrayList;
import im.actor.model.api.*;

public class UpdateUserContactsChanged extends Update {

    public static final int HEADER = 0x56;
    public static UpdateUserContactsChanged fromBytes(byte[] data) throws IOException {
        return Bser.parse(new UpdateUserContactsChanged(), data);
    }

    private int uid;
    private List<Integer> phones;
    private List<Integer> emails;

    public UpdateUserContactsChanged(int uid, List<Integer> phones, List<Integer> emails) {
        this.uid = uid;
        this.phones = phones;
        this.emails = emails;
    }

    public UpdateUserContactsChanged() {

    }

    public int getUid() {
        return this.uid;
    }

    public List<Integer> getPhones() {
        return this.phones;
    }

    public List<Integer> getEmails() {
        return this.emails;
    }

    @Override
    public void parse(BserValues values) throws IOException {
        this.uid = values.getInt(1);
        this.phones = values.getRepeatedInt(2);
        this.emails = values.getRepeatedInt(3);
    }

    @Override
    public void serialize(BserWriter writer) throws IOException {
        writer.writeInt(1, this.uid);
        writer.writeRepeatedInt(2, this.phones);
        writer.writeRepeatedInt(3, this.emails);
    }

    @Override
    public String toString() {
        String res = "update UserContactsChanged{";
        res += "uid=" + this.uid;
        res += ", phones=" + this.phones.size();
        res += ", emails=" + this.emails.size();
        res += "}";
        return res;
    }

    @Override
    public int getHeaderKey() {
        return HEADER;
    }
}
