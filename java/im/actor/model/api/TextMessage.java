package im.actor.model.api;
/*
 *  Generated by the Actor API Scheme generator.  DO NOT EDIT!
 */

import im.actor.model.droidkit.bser.Bser;
import im.actor.model.droidkit.bser.BserParser;
import im.actor.model.droidkit.bser.BserObject;
import im.actor.model.droidkit.bser.BserValues;
import im.actor.model.droidkit.bser.BserWriter;
import im.actor.model.droidkit.bser.DataInput;
import im.actor.model.droidkit.bser.DataOutput;
import static im.actor.model.droidkit.bser.Utils.*;
import java.io.IOException;
import im.actor.model.network.parser.*;
import java.util.List;
import java.util.ArrayList;

public class TextMessage extends Message {

    private String text;
    private List<Integer> mentions;
    private TextMessageEx ext;

    public TextMessage(String text, List<Integer> mentions, TextMessageEx ext) {
        this.text = text;
        this.mentions = mentions;
        this.ext = ext;
    }

    public TextMessage() {

    }

    public int getHeader() {
        return 1;
    }

    public String getText() {
        return this.text;
    }

    public List<Integer> getMentions() {
        return this.mentions;
    }

    public TextMessageEx getExt() {
        return this.ext;
    }

    @Override
    public void parse(BserValues values) throws IOException {
        this.text = values.getString(1);
        this.mentions = values.getRepeatedInt(2);
        if (values.optBytes(3) != null) {
            this.ext = TextMessageEx.fromBytes(values.getBytes(3));
        }
    }

    @Override
    public void serialize(BserWriter writer) throws IOException {
        if (this.text == null) {
            throw new IOException();
        }
        writer.writeString(1, this.text);
        writer.writeRepeatedInt(2, this.mentions);
        if (this.ext != null) {
            writer.writeBytes(3, this.ext.buildContainer());
        }
    }

    @Override
    public String toString() {
        String res = "struct TextMessage{";
        res += "text=" + this.text;
        res += ", mentions=" + this.mentions;
        res += ", ext=" + this.ext;
        res += "}";
        return res;
    }

}
