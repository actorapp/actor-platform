package im.actor.model.api;
/*
 *  Generated by the Actor API Scheme generator.  DO NOT EDIT!
 */

import im.actor.model.droidkit.bser.Bser;
import im.actor.model.droidkit.bser.BserParser;
import im.actor.model.droidkit.bser.BserObject;
import im.actor.model.droidkit.bser.BserValues;
import im.actor.model.droidkit.bser.BserWriter;
import im.actor.model.droidkit.bser.DataInput;
import im.actor.model.droidkit.bser.DataOutput;
import static im.actor.model.droidkit.bser.Utils.*;
import java.io.IOException;
import im.actor.model.network.parser.*;
import java.util.List;
import java.util.ArrayList;

public class EncryptedFileLocationV1 extends BserObject {

    private long fileId;
    private long accessHash;
    private int fileSize;
    private EncryptionType encryptionType;
    private Integer encryptedFileSize;
    private byte[] encryptionKey;

    public EncryptedFileLocationV1(long fileId, long accessHash, int fileSize, EncryptionType encryptionType, Integer encryptedFileSize, byte[] encryptionKey) {
        this.fileId = fileId;
        this.accessHash = accessHash;
        this.fileSize = fileSize;
        this.encryptionType = encryptionType;
        this.encryptedFileSize = encryptedFileSize;
        this.encryptionKey = encryptionKey;
    }

    public EncryptedFileLocationV1() {

    }

    public long getFileId() {
        return this.fileId;
    }

    public long getAccessHash() {
        return this.accessHash;
    }

    public int getFileSize() {
        return this.fileSize;
    }

    public EncryptionType getEncryptionType() {
        return this.encryptionType;
    }

    public Integer getEncryptedFileSize() {
        return this.encryptedFileSize;
    }

    public byte[] getEncryptionKey() {
        return this.encryptionKey;
    }

    @Override
    public void parse(BserValues values) throws IOException {
        this.fileId = values.getLong(1);
        this.accessHash = values.getLong(2);
        this.fileSize = values.getInt(3);
        int val_encryptionType = values.getInt(4, 0);
        if (val_encryptionType != 0) {
            this.encryptionType = EncryptionType.parse(val_encryptionType);
        }
        this.encryptedFileSize = values.optInt(5);
        this.encryptionKey = values.optBytes(6);
    }

    @Override
    public void serialize(BserWriter writer) throws IOException {
        writer.writeLong(1, this.fileId);
        writer.writeLong(2, this.accessHash);
        writer.writeInt(3, this.fileSize);
        if (this.encryptionType != null) {
            writer.writeInt(4, this.encryptionType.getValue());
        }
        if (this.encryptedFileSize != null) {
            writer.writeInt(5, this.encryptedFileSize);
        }
        if (this.encryptionKey != null) {
            writer.writeBytes(6, this.encryptionKey);
        }
    }

    @Override
    public String toString() {
        String res = "struct EncryptedFileLocationV1{";
        res += "}";
        return res;
    }

}
