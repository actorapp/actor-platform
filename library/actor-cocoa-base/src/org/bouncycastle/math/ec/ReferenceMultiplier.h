//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/ex3ndr/Develop/actor-model/library/actor-cocoa-base/build/java/org/bouncycastle/math/ec/ReferenceMultiplier.java
//

#ifndef _OrgBouncycastleMathEcReferenceMultiplier_H_
#define _OrgBouncycastleMathEcReferenceMultiplier_H_

#include "J2ObjC_header.h"
#include "org/bouncycastle/math/ec/AbstractECMultiplier.h"

@class JavaMathBigInteger;
@class OrgBouncycastleMathEcECPoint;

@interface OrgBouncycastleMathEcReferenceMultiplier : OrgBouncycastleMathEcAbstractECMultiplier

#pragma mark Public

- (instancetype)init;

#pragma mark Protected

- (OrgBouncycastleMathEcECPoint *)multiplyPositiveWithOrgBouncycastleMathEcECPoint:(OrgBouncycastleMathEcECPoint *)p
                                                            withJavaMathBigInteger:(JavaMathBigInteger *)k;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgBouncycastleMathEcReferenceMultiplier)

FOUNDATION_EXPORT void OrgBouncycastleMathEcReferenceMultiplier_init(OrgBouncycastleMathEcReferenceMultiplier *self);

FOUNDATION_EXPORT OrgBouncycastleMathEcReferenceMultiplier *new_OrgBouncycastleMathEcReferenceMultiplier_init() NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(OrgBouncycastleMathEcReferenceMultiplier)

#endif // _OrgBouncycastleMathEcReferenceMultiplier_H_
