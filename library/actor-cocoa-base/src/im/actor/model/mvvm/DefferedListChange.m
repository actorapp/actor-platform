//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/ex3ndr/Develop/actor-model/library/actor-cocoa-base/build/java/im/actor/model/mvvm/DefferedListChange.java
//


#include "J2ObjC_source.h"
#include "im/actor/model/mvvm/DefferedListChange.h"
#include "im/actor/model/mvvm/DefferedListModification.h"
#include "im/actor/model/mvvm/DisplayList.h"
#include "java/util/ArrayList.h"

@interface AMDefferedListChange () {
 @public
  JavaUtilArrayList *list_;
  JavaUtilArrayList *modifications_;
}

@end

J2OBJC_FIELD_SETTER(AMDefferedListChange, list_, JavaUtilArrayList *)
J2OBJC_FIELD_SETTER(AMDefferedListChange, modifications_, JavaUtilArrayList *)

@implementation AMDefferedListChange

- (instancetype)initWithJavaUtilArrayList:(JavaUtilArrayList *)list
                    withJavaUtilArrayList:(JavaUtilArrayList *)modifications {
  AMDefferedListChange_initWithJavaUtilArrayList_withJavaUtilArrayList_(self, list, modifications);
  return self;
}

- (id)getItemWithInt:(jint)index {
  return [((JavaUtilArrayList *) nil_chk(list_)) getWithInt:index];
}

- (jint)getCount {
  return [((JavaUtilArrayList *) nil_chk(list_)) size];
}

- (AMDefferedListModification *)next {
  if ([((JavaUtilArrayList *) nil_chk(modifications_)) size] == 0) {
    return nil;
  }
  AMDefferedListModification *modification = [modifications_ removeWithInt:0];
  {
    jint addIndex;
    jint removeIndex;
    id removed;
    switch ([[((AMDefferedListModification *) nil_chk(modification)) getOperation] ordinal]) {
      case AMDefferedListModification_Operation_ADD:
      case AMDefferedListModification_Operation_ADD_RANGE:
      addIndex = [modification getIndex];
      for (id __strong itm in nil_chk([modification getItems])) {
        [((JavaUtilArrayList *) nil_chk(list_)) addWithInt:addIndex++ withId:itm];
      }
      break;
      case AMDefferedListModification_Operation_REMOVE:
      (void) [((JavaUtilArrayList *) nil_chk(list_)) removeWithInt:[modification getIndex]];
      break;
      case AMDefferedListModification_Operation_REMOVE_RANGE:
      removeIndex = [modification getIndex];
      for (jint i = 0; i < [modification getLength]; i++) {
        (void) [((JavaUtilArrayList *) nil_chk(list_)) removeWithInt:removeIndex];
      }
      break;
      case AMDefferedListModification_Operation_MOVE:
      removed = [((JavaUtilArrayList *) nil_chk(list_)) removeWithInt:[modification getIndex]];
      [list_ addWithInt:[modification getDestIndex] withId:removed];
      break;
      case AMDefferedListModification_Operation_UPDATE_RANGE:
      case AMDefferedListModification_Operation_UPDATE:
      break;
    }
  }
  return modification;
}

+ (AMDefferedListChange *)buildAndroidListChangeWithJavaUtilArrayList:(JavaUtilArrayList *)modificationResults
                                                withJavaUtilArrayList:(JavaUtilArrayList *)initialList {
  return AMDefferedListChange_buildAndroidListChangeWithJavaUtilArrayList_withJavaUtilArrayList_(modificationResults, initialList);
}

@end

void AMDefferedListChange_initWithJavaUtilArrayList_withJavaUtilArrayList_(AMDefferedListChange *self, JavaUtilArrayList *list, JavaUtilArrayList *modifications) {
  (void) NSObject_init(self);
  self->list_ = list;
  self->modifications_ = modifications;
}

AMDefferedListChange *new_AMDefferedListChange_initWithJavaUtilArrayList_withJavaUtilArrayList_(JavaUtilArrayList *list, JavaUtilArrayList *modifications) {
  AMDefferedListChange *self = [AMDefferedListChange alloc];
  AMDefferedListChange_initWithJavaUtilArrayList_withJavaUtilArrayList_(self, list, modifications);
  return self;
}

AMDefferedListChange *AMDefferedListChange_buildAndroidListChangeWithJavaUtilArrayList_withJavaUtilArrayList_(JavaUtilArrayList *modificationResults, JavaUtilArrayList *initialList) {
  AMDefferedListChange_initialize();
  JavaUtilArrayList *listModifications = new_JavaUtilArrayList_init();
  AMDefferedListModification *prev = nil;
  for (AMDisplayList_ModificationResult * __strong res in nil_chk(modificationResults)) {
    for (AMDisplayList_ModificationResult_Operation * __strong operation in nil_chk([((AMDisplayList_ModificationResult *) nil_chk(res)) getOperations])) {
      AMDefferedListModification *mod = nil;
      switch ([[((AMDisplayList_ModificationResult_Operation *) nil_chk(operation)) getType] ordinal]) {
        case AMDisplayList_ModificationResult_OperationType_ADD:
        if (prev != nil) {
          if ([prev getOperation] == AMDefferedListModification_OperationEnum_get_ADD()) {
            if ([prev getIndex] == [operation getIndex] - 1) {
              [prev expandWithId:[operation getItem]];
              continue;
            }
          }
          else if ([prev getOperation] == AMDefferedListModification_OperationEnum_get_ADD_RANGE()) {
            if ([prev getIndex] + [prev getLength] == [operation getIndex]) {
              [prev expandWithId:[operation getItem]];
              continue;
            }
          }
        }
        mod = new_AMDefferedListModification_initWithAMDefferedListModification_OperationEnum_withInt_withId_(AMDefferedListModification_OperationEnum_get_ADD(), [operation getIndex], [operation getItem]);
        break;
        case AMDisplayList_ModificationResult_OperationType_UPDATE:
        if (prev != nil) {
          if ([prev getOperation] == AMDefferedListModification_OperationEnum_get_UPDATE()) {
            if ([prev getIndex] == [operation getIndex] - 1) {
              [prev expandWithId:[operation getItem]];
              continue;
            }
          }
          else if ([prev getOperation] == AMDefferedListModification_OperationEnum_get_UPDATE_RANGE()) {
            if ([prev getIndex] + [prev getLength] == [operation getIndex]) {
              [prev expandWithId:[operation getItem]];
              continue;
            }
          }
        }
        mod = new_AMDefferedListModification_initWithAMDefferedListModification_OperationEnum_withInt_withId_(AMDefferedListModification_OperationEnum_get_UPDATE(), [operation getIndex], [operation getItem]);
        break;
        case AMDisplayList_ModificationResult_OperationType_REMOVE:
        if (prev != nil) {
          if ([prev getOperation] == AMDefferedListModification_OperationEnum_get_REMOVE()) {
            if ([prev getIndex] == [operation getIndex] - 1) {
              [prev expandWithId:[operation getItem]];
              continue;
            }
          }
          else if ([prev getOperation] == AMDefferedListModification_OperationEnum_get_REMOVE_RANGE()) {
            if ([prev getIndex] + [prev getLength] == [operation getIndex]) {
              [prev expandWithId:[operation getItem]];
              continue;
            }
          }
        }
        mod = new_AMDefferedListModification_initWithAMDefferedListModification_OperationEnum_withInt_(AMDefferedListModification_OperationEnum_get_REMOVE(), [operation getIndex]);
        break;
        case AMDisplayList_ModificationResult_OperationType_MOVE:
        mod = new_AMDefferedListModification_initWithAMDefferedListModification_OperationEnum_withInt_withInt_withInt_(AMDefferedListModification_OperationEnum_get_MOVE(), [operation getIndex], [operation getDestIndex], 1);
        break;
      }
      if (mod != nil) {
        prev = mod;
        [listModifications addWithId:mod];
      }
    }
  }
  return new_AMDefferedListChange_initWithJavaUtilArrayList_withJavaUtilArrayList_(initialList, listModifications);
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(AMDefferedListChange)
