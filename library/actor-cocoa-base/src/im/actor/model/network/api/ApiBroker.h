//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/ex3ndr/Develop/actor-model/library/actor-cocoa-base/build/java/im/actor/model/network/api/ApiBroker.java
//

#ifndef _ImActorModelNetworkApiApiBroker_H_
#define _ImActorModelNetworkApiApiBroker_H_

#include "J2ObjC_header.h"
#include "im/actor/model/droidkit/actors/Actor.h"

@class AMEndpoints;
@class AMNetworkStateEnum;
@class APRequest;
@class DKActorRef;
@protocol AMActorApiCallback;
@protocol AMAuthKeyStorage;
@protocol AMNetworkProvider;
@protocol AMRpcCallback;

@interface ImActorModelNetworkApiApiBroker : DKActor

#pragma mark Public

- (instancetype)initWithAMEndpoints:(AMEndpoints *)endpoints
               withAMAuthKeyStorage:(id<AMAuthKeyStorage>)keyStorage
             withAMActorApiCallback:(id<AMActorApiCallback>)callback
              withAMNetworkProvider:(id<AMNetworkProvider>)networkProvider
                        withBoolean:(jboolean)isEnableLog;

+ (DKActorRef *)getWithAMEndpoints:(AMEndpoints *)endpoints
              withAMAuthKeyStorage:(id<AMAuthKeyStorage>)keyStorage
            withAMActorApiCallback:(id<AMActorApiCallback>)callback
             withAMNetworkProvider:(id<AMNetworkProvider>)networkProvider
                       withBoolean:(jboolean)isEnableLog;

- (void)onReceiveWithId:(id)message;

- (void)preStart;

@end

J2OBJC_STATIC_INIT(ImActorModelNetworkApiApiBroker)

FOUNDATION_EXPORT DKActorRef *ImActorModelNetworkApiApiBroker_getWithAMEndpoints_withAMAuthKeyStorage_withAMActorApiCallback_withAMNetworkProvider_withBoolean_(AMEndpoints *endpoints, id<AMAuthKeyStorage> keyStorage, id<AMActorApiCallback> callback, id<AMNetworkProvider> networkProvider, jboolean isEnableLog);

FOUNDATION_EXPORT void ImActorModelNetworkApiApiBroker_initWithAMEndpoints_withAMAuthKeyStorage_withAMActorApiCallback_withAMNetworkProvider_withBoolean_(ImActorModelNetworkApiApiBroker *self, AMEndpoints *endpoints, id<AMAuthKeyStorage> keyStorage, id<AMActorApiCallback> callback, id<AMNetworkProvider> networkProvider, jboolean isEnableLog);

FOUNDATION_EXPORT ImActorModelNetworkApiApiBroker *new_ImActorModelNetworkApiApiBroker_initWithAMEndpoints_withAMAuthKeyStorage_withAMActorApiCallback_withAMNetworkProvider_withBoolean_(AMEndpoints *endpoints, id<AMAuthKeyStorage> keyStorage, id<AMActorApiCallback> callback, id<AMNetworkProvider> networkProvider, jboolean isEnableLog) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(ImActorModelNetworkApiApiBroker)

@interface ImActorModelNetworkApiApiBroker_PerformRequest : NSObject

#pragma mark Public

- (instancetype)initWithAPRequest:(APRequest *)message
                withAMRpcCallback:(id<AMRpcCallback>)callback;

- (id<AMRpcCallback>)getCallback;

- (APRequest *)getMessage;

@end

J2OBJC_EMPTY_STATIC_INIT(ImActorModelNetworkApiApiBroker_PerformRequest)

FOUNDATION_EXPORT void ImActorModelNetworkApiApiBroker_PerformRequest_initWithAPRequest_withAMRpcCallback_(ImActorModelNetworkApiApiBroker_PerformRequest *self, APRequest *message, id<AMRpcCallback> callback);

FOUNDATION_EXPORT ImActorModelNetworkApiApiBroker_PerformRequest *new_ImActorModelNetworkApiApiBroker_PerformRequest_initWithAPRequest_withAMRpcCallback_(APRequest *message, id<AMRpcCallback> callback) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(ImActorModelNetworkApiApiBroker_PerformRequest)

@interface ImActorModelNetworkApiApiBroker_CancelRequest : NSObject

#pragma mark Public

- (instancetype)initWithLong:(jlong)randomId;

- (jlong)getRandomId;

@end

J2OBJC_EMPTY_STATIC_INIT(ImActorModelNetworkApiApiBroker_CancelRequest)

FOUNDATION_EXPORT void ImActorModelNetworkApiApiBroker_CancelRequest_initWithLong_(ImActorModelNetworkApiApiBroker_CancelRequest *self, jlong randomId);

FOUNDATION_EXPORT ImActorModelNetworkApiApiBroker_CancelRequest *new_ImActorModelNetworkApiApiBroker_CancelRequest_initWithLong_(jlong randomId) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(ImActorModelNetworkApiApiBroker_CancelRequest)

@interface ImActorModelNetworkApiApiBroker_NetworkChanged : NSObject

#pragma mark Public

- (instancetype)initWithAMNetworkStateEnum:(AMNetworkStateEnum *)state;

@end

J2OBJC_EMPTY_STATIC_INIT(ImActorModelNetworkApiApiBroker_NetworkChanged)

FOUNDATION_EXPORT void ImActorModelNetworkApiApiBroker_NetworkChanged_initWithAMNetworkStateEnum_(ImActorModelNetworkApiApiBroker_NetworkChanged *self, AMNetworkStateEnum *state);

FOUNDATION_EXPORT ImActorModelNetworkApiApiBroker_NetworkChanged *new_ImActorModelNetworkApiApiBroker_NetworkChanged_initWithAMNetworkStateEnum_(AMNetworkStateEnum *state) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(ImActorModelNetworkApiApiBroker_NetworkChanged)

@interface ImActorModelNetworkApiApiBroker_ForceNetworkCheck : NSObject

#pragma mark Public

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(ImActorModelNetworkApiApiBroker_ForceNetworkCheck)

FOUNDATION_EXPORT void ImActorModelNetworkApiApiBroker_ForceNetworkCheck_init(ImActorModelNetworkApiApiBroker_ForceNetworkCheck *self);

FOUNDATION_EXPORT ImActorModelNetworkApiApiBroker_ForceNetworkCheck *new_ImActorModelNetworkApiApiBroker_ForceNetworkCheck_init() NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(ImActorModelNetworkApiApiBroker_ForceNetworkCheck)

#endif // _ImActorModelNetworkApiApiBroker_H_
