//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/ex3ndr/Develop/actor-model/library/actor-cocoa-base/build/java/im/actor/model/network/mtp/entity/Container.java
//


#line 1 "/Users/ex3ndr/Develop/actor-model/library/actor-cocoa-base/build/java/im/actor/model/network/mtp/entity/Container.java"

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "im/actor/model/droidkit/bser/DataInput.h"
#include "im/actor/model/droidkit/bser/DataOutput.h"
#include "im/actor/model/network/mtp/entity/Container.h"
#include "im/actor/model/network/mtp/entity/ProtoMessage.h"
#include "im/actor/model/network/mtp/entity/ProtoStruct.h"
#include "java/io/IOException.h"

@interface MTContainer () {
 @public
  IOSObjectArray *messages_;
}

@end

J2OBJC_FIELD_SETTER(MTContainer, messages_, IOSObjectArray *)


#line 8
@implementation MTContainer


#line 14
- (instancetype)initWithBSDataInput:(BSDataInput *)stream {
  MTContainer_initWithBSDataInput_(self, stream);
  return self;
}


#line 18
- (instancetype)initWithMTProtoMessageArray:(IOSObjectArray *)messages {
  MTContainer_initWithMTProtoMessageArray_(self, messages);
  return self;
}


#line 22
- (IOSObjectArray *)getMessages {
  return messages_;
}


#line 27
- (jbyte)getHeader {
  return MTContainer_HEADER;
}


#line 32
- (void)writeBodyWithBSDataOutput:(BSDataOutput *)bs {
  if (messages_ != nil && messages_->size_ > 0) {
    [((BSDataOutput *) nil_chk(bs)) writeVarIntWithLong:messages_->size_];
    {
      IOSObjectArray *a__ =
#line 35
      messages_;
      MTProtoMessage * const *b__ = a__->buffer_;
      MTProtoMessage * const *e__ = b__ + a__->size_;
      while (b__ < e__) {
        MTProtoMessage *m = *b__++;
        
#line 36
        [((MTProtoMessage *) nil_chk(m)) writeObjectWithBSDataOutput:bs];
      }
    }
  }
  else {
    
#line 39
    [((BSDataOutput *) nil_chk(bs)) writeVarIntWithLong:0];
  }
}


#line 44
- (void)readBodyWithBSDataInput:(BSDataInput *)bs {
  jint size = (jint) [((BSDataInput *) nil_chk(bs)) readVarInt];
  messages_ = [IOSObjectArray newArrayWithLength:size type:MTProtoMessage_class_()];
  for (jint i = 0; i < size; ++i) {
    (void) IOSObjectArray_Set(messages_, i, new_MTProtoMessage_initWithBSDataInput_(bs));
  }
}


#line 53
- (NSString *)description {
  return JreStrcat("$I$", @"Conatiner[", ((IOSObjectArray *) nil_chk(messages_))->size_, @" items]");
}

@end


#line 14
void MTContainer_initWithBSDataInput_(MTContainer *self, BSDataInput *stream) {
  (void) MTProtoStruct_initWithBSDataInput_(self, stream);
}


#line 14
MTContainer *new_MTContainer_initWithBSDataInput_(BSDataInput *stream) {
  MTContainer *self = [MTContainer alloc];
  MTContainer_initWithBSDataInput_(self, stream);
  return self;
}


#line 18
void MTContainer_initWithMTProtoMessageArray_(MTContainer *self, IOSObjectArray *messages) {
  (void) MTProtoStruct_init(self);
  
#line 19
  self->messages_ = messages;
}


#line 18
MTContainer *new_MTContainer_initWithMTProtoMessageArray_(IOSObjectArray *messages) {
  MTContainer *self = [MTContainer alloc];
  MTContainer_initWithMTProtoMessageArray_(self, messages);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(MTContainer)
