//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/ex3ndr/Develop/actor-model/library/actor-cocoa-base/build/java/im/actor/model/network/mtp/MTProto.java
//

#ifndef _MTMTProto_H_
#define _MTMTProto_H_

#include "J2ObjC_header.h"

@class AMEndpoints;
@class AMNetworkStateEnum;
@class MTProtoStruct;
@protocol AMNetworkProvider;
@protocol MTMTProtoCallback;

@interface MTMTProto : NSObject

#pragma mark Public

- (instancetype)initWithLong:(jlong)authId
                    withLong:(jlong)sessionId
             withAMEndpoints:(AMEndpoints *)endpoints
       withMTMTProtoCallback:(id<MTMTProtoCallback>)callback
       withAMNetworkProvider:(id<AMNetworkProvider>)networkProvider;

- (void)cancelRpcWithLong:(jlong)mtId;

- (NSString *)getActorPath;

- (jlong)getAuthId;

- (id<MTMTProtoCallback>)getCallback;

- (AMEndpoints *)getEndpoints;

- (id<AMNetworkProvider>)getNetworkProvider;

- (jlong)getSessionId;

- (void)onNetworkChangedWithAMNetworkStateEnum:(AMNetworkStateEnum *)state;

- (jlong)sendRpcMessageWithMTProtoStruct:(MTProtoStruct *)protoStruct;

@end

J2OBJC_EMPTY_STATIC_INIT(MTMTProto)

FOUNDATION_EXPORT void MTMTProto_initWithLong_withLong_withAMEndpoints_withMTMTProtoCallback_withAMNetworkProvider_(MTMTProto *self, jlong authId, jlong sessionId, AMEndpoints *endpoints, id<MTMTProtoCallback> callback, id<AMNetworkProvider> networkProvider);

FOUNDATION_EXPORT MTMTProto *new_MTMTProto_initWithLong_withLong_withAMEndpoints_withMTMTProtoCallback_withAMNetworkProvider_(jlong authId, jlong sessionId, AMEndpoints *endpoints, id<MTMTProtoCallback> callback, id<AMNetworkProvider> networkProvider) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(MTMTProto)

typedef MTMTProto ImActorModelNetworkMtpMTProto;

#endif // _MTMTProto_H_
