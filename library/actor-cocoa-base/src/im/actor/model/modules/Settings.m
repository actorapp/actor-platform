//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/ex3ndr/Develop/actor-model/library/actor-cocoa-base/build/java/im/actor/model/modules/Settings.java
//


#include "IOSClass.h"
#include "J2ObjC_source.h"
#include "im/actor/model/droidkit/actors/ActorCreator.h"
#include "im/actor/model/droidkit/actors/ActorRef.h"
#include "im/actor/model/droidkit/actors/ActorSystem.h"
#include "im/actor/model/droidkit/actors/Props.h"
#include "im/actor/model/droidkit/engine/PreferencesStorage.h"
#include "im/actor/model/entity/Peer.h"
#include "im/actor/model/entity/PeerType.h"
#include "im/actor/model/modules/BaseModule.h"
#include "im/actor/model/modules/Modules.h"
#include "im/actor/model/modules/Settings.h"
#include "im/actor/model/modules/settings/SettingsSyncActor.h"
#include "java/lang/RuntimeException.h"

@interface ImActorModelModulesSettings () {
 @public
  DKActorRef *settingsSync_;
}

- (NSString *)getChatKeyWithAMPeer:(AMPeer *)peer;

- (jboolean)loadValueWithNSString:(NSString *)key
                      withBoolean:(jboolean)defaultVal;

- (void)saveValueWithNSString:(NSString *)key
                  withBoolean:(jboolean)val;

@end

J2OBJC_FIELD_SETTER(ImActorModelModulesSettings, settingsSync_, DKActorRef *)

static NSString *ImActorModelModulesSettings_KEY_NOTIFICATION_TONES_ = @"app.tones_enabled";
J2OBJC_STATIC_FIELD_GETTER(ImActorModelModulesSettings, KEY_NOTIFICATION_TONES_, NSString *)

static NSString *ImActorModelModulesSettings_KEY_NOTIFICATION_SOUND_ = @"sync.notification.sound.enabled";
J2OBJC_STATIC_FIELD_GETTER(ImActorModelModulesSettings, KEY_NOTIFICATION_SOUND_, NSString *)

static NSString *ImActorModelModulesSettings_KEY_NOTIFICATION_VIBRATION_ = @"sync.notification.vibration.enabled";
J2OBJC_STATIC_FIELD_GETTER(ImActorModelModulesSettings, KEY_NOTIFICATION_VIBRATION_, NSString *)

static NSString *ImActorModelModulesSettings_KEY_NOTIFICATION_TEXT_ = @"sync.notification.show_text";
J2OBJC_STATIC_FIELD_GETTER(ImActorModelModulesSettings, KEY_NOTIFICATION_TEXT_, NSString *)

static NSString *ImActorModelModulesSettings_KEY_NOTIFICATION_CHAT_ = @"sync.notification.chat.";
J2OBJC_STATIC_FIELD_GETTER(ImActorModelModulesSettings, KEY_NOTIFICATION_CHAT_, NSString *)

static NSString *ImActorModelModulesSettings_KEY_CHAT_SEND_BY_ENTER_ = @"app.send_by_enter";
J2OBJC_STATIC_FIELD_GETTER(ImActorModelModulesSettings, KEY_CHAT_SEND_BY_ENTER_, NSString *)

__attribute__((unused)) static NSString *ImActorModelModulesSettings_getChatKeyWithAMPeer_(ImActorModelModulesSettings *self, AMPeer *peer);

__attribute__((unused)) static jboolean ImActorModelModulesSettings_loadValueWithNSString_withBoolean_(ImActorModelModulesSettings *self, NSString *key, jboolean defaultVal);

__attribute__((unused)) static void ImActorModelModulesSettings_saveValueWithNSString_withBoolean_(ImActorModelModulesSettings *self, NSString *key, jboolean val);

@interface ImActorModelModulesSettings_$1 : NSObject < DKActorCreator > {
 @public
  ImActorModelModulesSettings *this$0_;
}

- (ImActorModelModulesSettingsSettingsSyncActor *)create;

- (instancetype)initWithImActorModelModulesSettings:(ImActorModelModulesSettings *)outer$;

@end

J2OBJC_EMPTY_STATIC_INIT(ImActorModelModulesSettings_$1)

J2OBJC_FIELD_SETTER(ImActorModelModulesSettings_$1, this$0_, ImActorModelModulesSettings *)

__attribute__((unused)) static void ImActorModelModulesSettings_$1_initWithImActorModelModulesSettings_(ImActorModelModulesSettings_$1 *self, ImActorModelModulesSettings *outer$);

__attribute__((unused)) static ImActorModelModulesSettings_$1 *new_ImActorModelModulesSettings_$1_initWithImActorModelModulesSettings_(ImActorModelModulesSettings *outer$) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(ImActorModelModulesSettings_$1)

@implementation ImActorModelModulesSettings

- (instancetype)initWithImActorModelModulesModules:(ImActorModelModulesModules *)modules {
  ImActorModelModulesSettings_initWithImActorModelModulesModules_(self, modules);
  return self;
}

- (void)run {
  settingsSync_ = [((DKActorSystem *) nil_chk(DKActorSystem_system())) actorOfWithDKProps:DKProps_createWithIOSClass_withDKActorCreator_(ImActorModelModulesSettingsSettingsSyncActor_class_(), new_ImActorModelModulesSettings_$1_initWithImActorModelModulesSettings_(self)) withNSString:@"actor/settings"];
}

- (jboolean)isConversationTonesEnabled {
  return ImActorModelModulesSettings_loadValueWithNSString_withBoolean_(self, ImActorModelModulesSettings_KEY_NOTIFICATION_TONES_, YES);
}

- (void)changeConversationTonesEnabledWithBoolean:(jboolean)val {
  ImActorModelModulesSettings_saveValueWithNSString_withBoolean_(self, ImActorModelModulesSettings_KEY_NOTIFICATION_TONES_, val);
}

- (jboolean)isNotificationSoundEnabled {
  return ImActorModelModulesSettings_loadValueWithNSString_withBoolean_(self, ImActorModelModulesSettings_KEY_NOTIFICATION_SOUND_, YES);
}

- (void)changeNotificationSoundEnabledWithBoolean:(jboolean)val {
  ImActorModelModulesSettings_saveValueWithNSString_withBoolean_(self, ImActorModelModulesSettings_KEY_NOTIFICATION_SOUND_, val);
}

- (jboolean)isVibrationEnabled {
  return ImActorModelModulesSettings_loadValueWithNSString_withBoolean_(self, ImActorModelModulesSettings_KEY_NOTIFICATION_VIBRATION_, YES);
}

- (void)changeNotificationVibrationEnabledWithBoolean:(jboolean)val {
  ImActorModelModulesSettings_saveValueWithNSString_withBoolean_(self, ImActorModelModulesSettings_KEY_NOTIFICATION_VIBRATION_, val);
}

- (jboolean)isShowNotificationsText {
  return ImActorModelModulesSettings_loadValueWithNSString_withBoolean_(self, ImActorModelModulesSettings_KEY_NOTIFICATION_TEXT_, YES);
}

- (void)changeShowNotificationTextEnabledWithBoolean:(jboolean)val {
  ImActorModelModulesSettings_saveValueWithNSString_withBoolean_(self, ImActorModelModulesSettings_KEY_NOTIFICATION_TEXT_, val);
}

- (jboolean)isSendByEnterEnabled {
  return ImActorModelModulesSettings_loadValueWithNSString_withBoolean_(self, ImActorModelModulesSettings_KEY_CHAT_SEND_BY_ENTER_, YES);
}

- (void)changeSendByEnterWithBoolean:(jboolean)val {
  ImActorModelModulesSettings_saveValueWithNSString_withBoolean_(self, ImActorModelModulesSettings_KEY_CHAT_SEND_BY_ENTER_, val);
}

- (jboolean)isNotificationsEnabledWithAMPeer:(AMPeer *)peer {
  return ImActorModelModulesSettings_loadValueWithNSString_withBoolean_(self, JreStrcat("$$$", ImActorModelModulesSettings_KEY_NOTIFICATION_CHAT_, ImActorModelModulesSettings_getChatKeyWithAMPeer_(self, peer), @".enabled"), YES);
}

- (void)changeNotificationsEnabledWithAMPeer:(AMPeer *)peer
                                 withBoolean:(jboolean)val {
  ImActorModelModulesSettings_saveValueWithNSString_withBoolean_(self, JreStrcat("$$$", ImActorModelModulesSettings_KEY_NOTIFICATION_CHAT_, ImActorModelModulesSettings_getChatKeyWithAMPeer_(self, peer), @".enabled"), val);
}

- (NSString *)getChatKeyWithAMPeer:(AMPeer *)peer {
  return ImActorModelModulesSettings_getChatKeyWithAMPeer_(self, peer);
}

- (jboolean)loadValueWithNSString:(NSString *)key
                      withBoolean:(jboolean)defaultVal {
  return ImActorModelModulesSettings_loadValueWithNSString_withBoolean_(self, key, defaultVal);
}

- (void)saveValueWithNSString:(NSString *)key
                  withBoolean:(jboolean)val {
  ImActorModelModulesSettings_saveValueWithNSString_withBoolean_(self, key, val);
}

@end

void ImActorModelModulesSettings_initWithImActorModelModulesModules_(ImActorModelModulesSettings *self, ImActorModelModulesModules *modules) {
  (void) ImActorModelModulesBaseModule_initWithImActorModelModulesModules_(self, modules);
}

ImActorModelModulesSettings *new_ImActorModelModulesSettings_initWithImActorModelModulesModules_(ImActorModelModulesModules *modules) {
  ImActorModelModulesSettings *self = [ImActorModelModulesSettings alloc];
  ImActorModelModulesSettings_initWithImActorModelModulesModules_(self, modules);
  return self;
}

NSString *ImActorModelModulesSettings_getChatKeyWithAMPeer_(ImActorModelModulesSettings *self, AMPeer *peer) {
  if ([((AMPeer *) nil_chk(peer)) getPeerType] == AMPeerTypeEnum_get_PRIVATE()) {
    return JreStrcat("$I", @"PRIVATE_", [peer getPeerId]);
  }
  else if ([peer getPeerType] == AMPeerTypeEnum_get_GROUP()) {
    return JreStrcat("$I", @"GROUP_", [peer getPeerId]);
  }
  else {
    @throw new_JavaLangRuntimeException_initWithNSString_(@"Unsupported peer");
  }
}

jboolean ImActorModelModulesSettings_loadValueWithNSString_withBoolean_(ImActorModelModulesSettings *self, NSString *key, jboolean defaultVal) {
  NSString *sValue = [((id<DKPreferencesStorage>) nil_chk([self preferences])) getString:key];
  if ([@"true" isEqual:sValue]) {
    return YES;
  }
  else if ([@"false" isEqual:sValue]) {
    return YES;
  }
  else {
    return defaultVal;
  }
}

void ImActorModelModulesSettings_saveValueWithNSString_withBoolean_(ImActorModelModulesSettings *self, NSString *key, jboolean val) {
  NSString *sVal = val ? @"true" : @"false";
  [((id<DKPreferencesStorage>) nil_chk([self preferences])) putString:key withValue:sVal];
  [((DKActorRef *) nil_chk(self->settingsSync_)) sendWithId:new_ImActorModelModulesSettingsSettingsSyncActor_ChangeSettings_initWithNSString_withNSString_(key, sVal)];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ImActorModelModulesSettings)

@implementation ImActorModelModulesSettings_$1

- (ImActorModelModulesSettingsSettingsSyncActor *)create {
  return new_ImActorModelModulesSettingsSettingsSyncActor_initWithImActorModelModulesModules_([this$0_ modules]);
}

- (instancetype)initWithImActorModelModulesSettings:(ImActorModelModulesSettings *)outer$ {
  ImActorModelModulesSettings_$1_initWithImActorModelModulesSettings_(self, outer$);
  return self;
}

@end

void ImActorModelModulesSettings_$1_initWithImActorModelModulesSettings_(ImActorModelModulesSettings_$1 *self, ImActorModelModulesSettings *outer$) {
  self->this$0_ = outer$;
  (void) NSObject_init(self);
}

ImActorModelModulesSettings_$1 *new_ImActorModelModulesSettings_$1_initWithImActorModelModulesSettings_(ImActorModelModulesSettings *outer$) {
  ImActorModelModulesSettings_$1 *self = [ImActorModelModulesSettings_$1 alloc];
  ImActorModelModulesSettings_$1_initWithImActorModelModulesSettings_(self, outer$);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ImActorModelModulesSettings_$1)
