//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/ex3ndr/Develop/actor-model/library/actor-cocoa-base/build/java/im/actor/model/modules/messages/entity/EntityConverter.java
//


#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "im/actor/model/api/Avatar.h"
#include "im/actor/model/api/DocumentEx.h"
#include "im/actor/model/api/DocumentExPhoto.h"
#include "im/actor/model/api/DocumentExVideo.h"
#include "im/actor/model/api/DocumentMessage.h"
#include "im/actor/model/api/FastThumb.h"
#include "im/actor/model/api/FileLocation.h"
#include "im/actor/model/api/Group.h"
#include "im/actor/model/api/Message.h"
#include "im/actor/model/api/MessageState.h"
#include "im/actor/model/api/Peer.h"
#include "im/actor/model/api/PeerType.h"
#include "im/actor/model/api/ServiceEx.h"
#include "im/actor/model/api/ServiceExChangedAvatar.h"
#include "im/actor/model/api/ServiceExChangedTitle.h"
#include "im/actor/model/api/ServiceExGroupCreated.h"
#include "im/actor/model/api/ServiceExUserAdded.h"
#include "im/actor/model/api/ServiceExUserKicked.h"
#include "im/actor/model/api/ServiceExUserLeft.h"
#include "im/actor/model/api/ServiceMessage.h"
#include "im/actor/model/api/TextMessage.h"
#include "im/actor/model/entity/Avatar.h"
#include "im/actor/model/entity/FileReference.h"
#include "im/actor/model/entity/Group.h"
#include "im/actor/model/entity/MessageState.h"
#include "im/actor/model/entity/Peer.h"
#include "im/actor/model/entity/PeerType.h"
#include "im/actor/model/entity/content/AbsContent.h"
#include "im/actor/model/entity/content/DocumentContent.h"
#include "im/actor/model/entity/content/FastThumb.h"
#include "im/actor/model/entity/content/FileRemoteSource.h"
#include "im/actor/model/entity/content/PhotoContent.h"
#include "im/actor/model/entity/content/ServiceContent.h"
#include "im/actor/model/entity/content/ServiceGroupAvatarChanged.h"
#include "im/actor/model/entity/content/ServiceGroupCreated.h"
#include "im/actor/model/entity/content/ServiceGroupTitleChanged.h"
#include "im/actor/model/entity/content/ServiceGroupUserAdded.h"
#include "im/actor/model/entity/content/ServiceGroupUserKicked.h"
#include "im/actor/model/entity/content/ServiceGroupUserLeave.h"
#include "im/actor/model/entity/content/TextContent.h"
#include "im/actor/model/entity/content/VideoContent.h"
#include "im/actor/model/modules/messages/entity/EntityConverter.h"

@implementation ImActorModelModulesMessagesEntityEntityConverter

+ (AMMessageStateEnum *)convertWithImActorModelApiMessageStateEnum:(ImActorModelApiMessageStateEnum *)state {
  return ImActorModelModulesMessagesEntityEntityConverter_convertWithImActorModelApiMessageStateEnum_(state);
}

+ (AMAvatar *)convertWithImActorModelApiAvatar:(ImActorModelApiAvatar *)avatar {
  return ImActorModelModulesMessagesEntityEntityConverter_convertWithImActorModelApiAvatar_(avatar);
}

+ (AMGroup *)convertWithImActorModelApiGroup:(ImActorModelApiGroup *)group {
  return ImActorModelModulesMessagesEntityEntityConverter_convertWithImActorModelApiGroup_(group);
}

+ (AMPeerTypeEnum *)convertWithImActorModelApiPeerTypeEnum:(ImActorModelApiPeerTypeEnum *)peerType {
  return ImActorModelModulesMessagesEntityEntityConverter_convertWithImActorModelApiPeerTypeEnum_(peerType);
}

+ (AMPeer *)convertWithImActorModelApiPeer:(ImActorModelApiPeer *)peer {
  return ImActorModelModulesMessagesEntityEntityConverter_convertWithImActorModelApiPeer_(peer);
}

+ (AMAbsContent *)convertWithImActorModelApiMessage:(ImActorModelApiMessage *)content {
  return ImActorModelModulesMessagesEntityEntityConverter_convertWithImActorModelApiMessage_(content);
}

+ (AMFastThumb *)convertWithImActorModelApiFastThumb:(ImActorModelApiFastThumb *)fastThumb {
  return ImActorModelModulesMessagesEntityEntityConverter_convertWithImActorModelApiFastThumb_(fastThumb);
}

- (instancetype)init {
  ImActorModelModulesMessagesEntityEntityConverter_init(self);
  return self;
}

@end

AMMessageStateEnum *ImActorModelModulesMessagesEntityEntityConverter_convertWithImActorModelApiMessageStateEnum_(ImActorModelApiMessageStateEnum *state) {
  ImActorModelModulesMessagesEntityEntityConverter_initialize();
  if (state == nil) {
    return AMMessageStateEnum_get_UNKNOWN();
  }
  switch ([state ordinal]) {
    case ImActorModelApiMessageState_READ:
    return AMMessageStateEnum_get_READ();
    case ImActorModelApiMessageState_RECEIVED:
    return AMMessageStateEnum_get_RECEIVED();
    case ImActorModelApiMessageState_SENT:
    return AMMessageStateEnum_get_SENT();
    default:
    return AMMessageStateEnum_get_UNKNOWN();
  }
}

AMAvatar *ImActorModelModulesMessagesEntityEntityConverter_convertWithImActorModelApiAvatar_(ImActorModelApiAvatar *avatar) {
  ImActorModelModulesMessagesEntityEntityConverter_initialize();
  if (avatar == nil) {
    return nil;
  }
  return new_AMAvatar_initWithImActorModelApiAvatar_(avatar);
}

AMGroup *ImActorModelModulesMessagesEntityEntityConverter_convertWithImActorModelApiGroup_(ImActorModelApiGroup *group) {
  ImActorModelModulesMessagesEntityEntityConverter_initialize();
  return new_AMGroup_initWithImActorModelApiGroup_(group);
}

AMPeerTypeEnum *ImActorModelModulesMessagesEntityEntityConverter_convertWithImActorModelApiPeerTypeEnum_(ImActorModelApiPeerTypeEnum *peerType) {
  ImActorModelModulesMessagesEntityEntityConverter_initialize();
  switch ([peerType ordinal]) {
    case ImActorModelApiPeerType_GROUP:
    return AMPeerTypeEnum_get_GROUP();
    default:
    case ImActorModelApiPeerType_PRIVATE:
    return AMPeerTypeEnum_get_PRIVATE();
  }
}

AMPeer *ImActorModelModulesMessagesEntityEntityConverter_convertWithImActorModelApiPeer_(ImActorModelApiPeer *peer) {
  ImActorModelModulesMessagesEntityEntityConverter_initialize();
  return new_AMPeer_initWithAMPeerTypeEnum_withInt_(ImActorModelModulesMessagesEntityEntityConverter_convertWithImActorModelApiPeerTypeEnum_([((ImActorModelApiPeer *) nil_chk(peer)) getType]), [peer getId]);
}

AMAbsContent *ImActorModelModulesMessagesEntityEntityConverter_convertWithImActorModelApiMessage_(ImActorModelApiMessage *content) {
  ImActorModelModulesMessagesEntityEntityConverter_initialize();
  if ([content isKindOfClass:[ImActorModelApiTextMessage class]]) {
    ImActorModelApiTextMessage *message = (ImActorModelApiTextMessage *) check_class_cast(content, [ImActorModelApiTextMessage class]);
    return new_AMTextContent_initWithNSString_([((ImActorModelApiTextMessage *) nil_chk(message)) getText]);
  }
  else if ([content isKindOfClass:[ImActorModelApiServiceMessage class]]) {
    ImActorModelApiServiceMessage *message = (ImActorModelApiServiceMessage *) check_class_cast(content, [ImActorModelApiServiceMessage class]);
    ImActorModelApiServiceEx *ex = [((ImActorModelApiServiceMessage *) nil_chk(message)) getExt];
    if ([ex isKindOfClass:[ImActorModelApiServiceExChangedAvatar class]]) {
      ImActorModelApiServiceExChangedAvatar *avatar = (ImActorModelApiServiceExChangedAvatar *) check_class_cast(ex, [ImActorModelApiServiceExChangedAvatar class]);
      return new_AMServiceGroupAvatarChanged_initWithAMAvatar_(ImActorModelModulesMessagesEntityEntityConverter_convertWithImActorModelApiAvatar_([((ImActorModelApiServiceExChangedAvatar *) nil_chk(avatar)) getAvatar]));
    }
    else if ([ex isKindOfClass:[ImActorModelApiServiceExChangedTitle class]]) {
      ImActorModelApiServiceExChangedTitle *title = (ImActorModelApiServiceExChangedTitle *) check_class_cast(ex, [ImActorModelApiServiceExChangedTitle class]);
      return new_AMServiceGroupTitleChanged_initWithNSString_([((ImActorModelApiServiceExChangedTitle *) nil_chk(title)) getTitle]);
    }
    else if ([ex isKindOfClass:[ImActorModelApiServiceExUserAdded class]]) {
      ImActorModelApiServiceExUserAdded *userAdded = (ImActorModelApiServiceExUserAdded *) check_class_cast(ex, [ImActorModelApiServiceExUserAdded class]);
      return new_AMServiceGroupUserAdded_initWithInt_([((ImActorModelApiServiceExUserAdded *) nil_chk(userAdded)) getAddedUid]);
    }
    else if ([ex isKindOfClass:[ImActorModelApiServiceExUserKicked class]]) {
      ImActorModelApiServiceExUserKicked *exUserKicked = (ImActorModelApiServiceExUserKicked *) check_class_cast(ex, [ImActorModelApiServiceExUserKicked class]);
      return new_AMServiceGroupUserKicked_initWithInt_([((ImActorModelApiServiceExUserKicked *) nil_chk(exUserKicked)) getKickedUid]);
    }
    else if ([ex isKindOfClass:[ImActorModelApiServiceExUserLeft class]]) {
      return new_AMServiceGroupUserLeave_init();
    }
    else if ([ex isKindOfClass:[ImActorModelApiServiceExGroupCreated class]]) {
      return new_AMServiceGroupCreated_initWithNSString_(@"");
    }
    else {
      return new_AMServiceContent_initWithNSString_([message getText]);
    }
  }
  else if ([content isKindOfClass:[ImActorModelApiDocumentMessage class]]) {
    ImActorModelApiDocumentMessage *documentMessage = (ImActorModelApiDocumentMessage *) check_class_cast(content, [ImActorModelApiDocumentMessage class]);
    NSString *mimeType = [((ImActorModelApiDocumentMessage *) nil_chk(documentMessage)) getMimeType];
    NSString *name = [documentMessage getName];
    AMFastThumb *fastThumb = ImActorModelModulesMessagesEntityEntityConverter_convertWithImActorModelApiFastThumb_([documentMessage getThumb]);
    AMFileReference *fileReference = new_AMFileReference_initWithImActorModelApiFileLocation_withNSString_withInt_(new_ImActorModelApiFileLocation_initWithLong_withLong_([documentMessage getFileId], [documentMessage getAccessHash]), [documentMessage getName], [documentMessage getFileSize]);
    AMFileRemoteSource *source = new_AMFileRemoteSource_initWithAMFileReference_(fileReference);
    if ([[documentMessage getExt] isKindOfClass:[ImActorModelApiDocumentExPhoto class]]) {
      ImActorModelApiDocumentExPhoto *photo = (ImActorModelApiDocumentExPhoto *) check_class_cast([documentMessage getExt], [ImActorModelApiDocumentExPhoto class]);
      return new_AMPhotoContent_initWithAMFileSource_withNSString_withNSString_withAMFastThumb_withInt_withInt_(source, mimeType, name, fastThumb, [((ImActorModelApiDocumentExPhoto *) nil_chk(photo)) getW], [photo getH]);
    }
    else if ([[documentMessage getExt] isKindOfClass:[ImActorModelApiDocumentExVideo class]]) {
      ImActorModelApiDocumentExVideo *video = (ImActorModelApiDocumentExVideo *) check_class_cast([documentMessage getExt], [ImActorModelApiDocumentExVideo class]);
      return new_AMVideoContent_initWithAMFileSource_withNSString_withNSString_withAMFastThumb_withInt_withInt_withInt_(source, mimeType, name, fastThumb, [((ImActorModelApiDocumentExVideo *) nil_chk(video)) getDuration], [video getW], [video getH]);
    }
    else {
      return new_AMDocumentContent_initWithAMFileSource_withNSString_withNSString_withAMFastThumb_(source, mimeType, name, fastThumb);
    }
  }
  return nil;
}

AMFastThumb *ImActorModelModulesMessagesEntityEntityConverter_convertWithImActorModelApiFastThumb_(ImActorModelApiFastThumb *fastThumb) {
  ImActorModelModulesMessagesEntityEntityConverter_initialize();
  if (fastThumb == nil) {
    return nil;
  }
  return new_AMFastThumb_initWithInt_withInt_withByteArray_([((ImActorModelApiFastThumb *) nil_chk(fastThumb)) getW], [fastThumb getH], [fastThumb getThumb]);
}

void ImActorModelModulesMessagesEntityEntityConverter_init(ImActorModelModulesMessagesEntityEntityConverter *self) {
  (void) NSObject_init(self);
}

ImActorModelModulesMessagesEntityEntityConverter *new_ImActorModelModulesMessagesEntityEntityConverter_init() {
  ImActorModelModulesMessagesEntityEntityConverter *self = [ImActorModelModulesMessagesEntityEntityConverter alloc];
  ImActorModelModulesMessagesEntityEntityConverter_init(self);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ImActorModelModulesMessagesEntityEntityConverter)
