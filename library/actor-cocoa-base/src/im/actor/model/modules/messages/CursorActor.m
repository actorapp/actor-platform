//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/ex3ndr/Develop/actor-model/library/actor-cocoa-base/build/java/im/actor/model/modules/messages/CursorActor.java
//

#line 1 "/Users/ex3ndr/Develop/actor-model/library/actor-cocoa-base/build/java/im/actor/model/modules/messages/CursorActor.java"

#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "im/actor/model/droidkit/actors/Actor.h"
#include "im/actor/model/droidkit/actors/ActorRef.h"
#include "im/actor/model/droidkit/engine/SyncKeyValue.h"
#include "im/actor/model/entity/Peer.h"
#include "im/actor/model/modules/Messages.h"
#include "im/actor/model/modules/Modules.h"
#include "im/actor/model/modules/messages/CursorActor.h"
#include "im/actor/model/modules/messages/entity/PlainCursor.h"
#include "im/actor/model/modules/messages/entity/PlainCursorsStorage.h"
#include "java/io/IOException.h"
#include "java/lang/Math.h"
#include "java/util/Collection.h"
#include "java/util/HashSet.h"

#pragma clang diagnostic ignored "-Wprotocol"
#pragma clang diagnostic ignored "-Wincomplete-implementation"

__attribute__((unused)) static void ImActorModelModulesMessagesCursorActor_onMovedWithAMPeer_withLong_(ImActorModelModulesMessagesCursorActor *self, AMPeer *peer, jlong date);
__attribute__((unused)) static void ImActorModelModulesMessagesCursorActor_saveCursorState(ImActorModelModulesMessagesCursorActor *self);

@interface ImActorModelModulesMessagesCursorActor () {
 @public
  ImActorModelModulesMessagesEntityPlainCursorsStorage *plainCursorsStorage_;
  JavaUtilHashSet *inProgress_;
  jlong cursorId_;
  DKSyncKeyValue *keyValue_;
}

- (void)saveCursorState;
@end

J2OBJC_FIELD_SETTER(ImActorModelModulesMessagesCursorActor, plainCursorsStorage_, ImActorModelModulesMessagesEntityPlainCursorsStorage *)
J2OBJC_FIELD_SETTER(ImActorModelModulesMessagesCursorActor, inProgress_, JavaUtilHashSet *)
J2OBJC_FIELD_SETTER(ImActorModelModulesMessagesCursorActor, keyValue_, DKSyncKeyValue *)

@interface ImActorModelModulesMessagesCursorActor_OnCompleted () {
 @public
  AMPeer *peer_;
  jlong date_;
}
- (instancetype)initWithAMPeer:(AMPeer *)peer
                      withLong:(jlong)date;
@end

J2OBJC_FIELD_SETTER(ImActorModelModulesMessagesCursorActor_OnCompleted, peer_, AMPeer *)


#line 16
@implementation ImActorModelModulesMessagesCursorActor


#line 23
- (instancetype)initWithLong:(jlong)cursorId
withImActorModelModulesModules:(ImActorModelModulesModules *)messenger {
  if (self =
#line 24
  [super initWithImActorModelModulesModules:messenger]) {
    inProgress_ =
#line 19
    [[JavaUtilHashSet alloc] init];
    
#line 25
    self->cursorId_ = cursorId;
    
#line 26
    self->keyValue_ = [((ImActorModelModulesMessages *) nil_chk([((ImActorModelModulesModules *) nil_chk(messenger)) getMessagesModule])) getCursorStorage];
  }
  return self;
}


#line 30
- (void)preStart {
  
#line 31
  [super preStart];
  
#line 33
  plainCursorsStorage_ = [[ImActorModelModulesMessagesEntityPlainCursorsStorage alloc] init];
  IOSByteArray *data = [((DKSyncKeyValue *) nil_chk(keyValue_)) getWithLong:cursorId_];
  if (data != nil) {
    @try {
      plainCursorsStorage_ = ImActorModelModulesMessagesEntityPlainCursorsStorage_fromBytesWithByteArray_(data);
    }
    @catch (
#line 38
    JavaIoIOException *e) {
      [((JavaIoIOException *) nil_chk(e)) printStackTrace];
    }
  }
  
#line 43
  for (ImActorModelModulesMessagesEntityPlainCursor * __strong cursor in nil_chk([((ImActorModelModulesMessagesEntityPlainCursorsStorage *) nil_chk(plainCursorsStorage_)) getAllCursors])) {
    if ([((ImActorModelModulesMessagesEntityPlainCursor *) nil_chk(cursor)) getSortDate] < [cursor getPendingSortDate]) {
      [((JavaUtilHashSet *) nil_chk(inProgress_)) addWithId:[cursor getPeer]];
      [self performWithAMPeer:[cursor getPeer] withLong:[cursor getPendingSortDate]];
    }
  }
}


#line 51
- (void)moveCursorWithAMPeer:(AMPeer *)peer
                    withLong:(jlong)date {
  
#line 52
  ImActorModelModulesMessagesEntityPlainCursor *cursor = [((ImActorModelModulesMessagesEntityPlainCursorsStorage *) nil_chk(plainCursorsStorage_)) getCursorWithAMPeer:peer];
  if (date <= [((ImActorModelModulesMessagesEntityPlainCursor *) nil_chk(cursor)) getSortDate]) {
    return;
  }
  if (date <= [cursor getPendingSortDate]) {
    return;
  }
  
#line 60
  date = JavaLangMath_maxWithLong_withLong_([cursor getPendingSortDate], date);
  
#line 62
  [plainCursorsStorage_ putCursorWithImActorModelModulesMessagesEntityPlainCursor:[cursor changePendingSortDateWithLong:date]];
  
#line 64
  ImActorModelModulesMessagesCursorActor_saveCursorState(self);
  
#line 66
  if ([((JavaUtilHashSet *) nil_chk(inProgress_)) containsWithId:peer]) {
    return;
  }
  
#line 70
  [inProgress_ addWithId:peer];
  [self performWithAMPeer:peer withLong:date];
}


#line 74
- (void)onMovedWithAMPeer:(AMPeer *)peer
                 withLong:(jlong)date {
  ImActorModelModulesMessagesCursorActor_onMovedWithAMPeer_withLong_(self, peer, date);
}


#line 91
- (void)onCompletedWithAMPeer:(AMPeer *)peer
                     withLong:(jlong)date {
  
#line 92
  [((DKActorRef *) nil_chk([self self__])) sendWithId:[[ImActorModelModulesMessagesCursorActor_OnCompleted alloc] initWithAMPeer:peer withLong:date]];
}


#line 95
- (void)onErrorWithAMPeer:(AMPeer *)peer
                 withLong:(jlong)date {
}


#line 100
- (void)saveCursorState {
  ImActorModelModulesMessagesCursorActor_saveCursorState(self);
}


#line 105
- (void)onReceiveWithId:(id)message {
  
#line 106
  if ([message isKindOfClass:[ImActorModelModulesMessagesCursorActor_OnCompleted class]]) {
    ImActorModelModulesMessagesCursorActor_OnCompleted *completed = (ImActorModelModulesMessagesCursorActor_OnCompleted *) check_class_cast(message, [ImActorModelModulesMessagesCursorActor_OnCompleted class]);
    ImActorModelModulesMessagesCursorActor_onMovedWithAMPeer_withLong_(self, [((ImActorModelModulesMessagesCursorActor_OnCompleted *) nil_chk(completed)) getPeer], [completed getDate]);
  }
  else {
    
#line 110
    [self dropWithId:message];
  }
}

- (void)copyAllFieldsTo:(ImActorModelModulesMessagesCursorActor *)other {
  [super copyAllFieldsTo:other];
  other->plainCursorsStorage_ = plainCursorsStorage_;
  other->inProgress_ = inProgress_;
  other->cursorId_ = cursorId_;
  other->keyValue_ = keyValue_;
}

@end

void ImActorModelModulesMessagesCursorActor_onMovedWithAMPeer_withLong_(ImActorModelModulesMessagesCursorActor *self, AMPeer *peer, jlong date) {
  
#line 75
  [((JavaUtilHashSet *) nil_chk(self->inProgress_)) removeWithId:peer];
  
#line 77
  ImActorModelModulesMessagesEntityPlainCursor *cursor = [((ImActorModelModulesMessagesEntityPlainCursorsStorage *) nil_chk(self->plainCursorsStorage_)) getCursorWithAMPeer:peer];
  cursor = [cursor changeSortDateWithLong:JavaLangMath_maxWithLong_withLong_(date, [((ImActorModelModulesMessagesEntityPlainCursor *) nil_chk(cursor)) getSortDate])];
  [self->plainCursorsStorage_ putCursorWithImActorModelModulesMessagesEntityPlainCursor:cursor];
  ImActorModelModulesMessagesCursorActor_saveCursorState(self);
  
#line 82
  if ([((ImActorModelModulesMessagesEntityPlainCursor *) nil_chk(cursor)) getSortDate] < [cursor getPendingSortDate]) {
    [self->inProgress_ addWithId:peer];
    [self performWithAMPeer:peer withLong:[cursor getPendingSortDate]];
  }
}

void ImActorModelModulesMessagesCursorActor_saveCursorState(ImActorModelModulesMessagesCursorActor *self) {
  
#line 101
  [((DKSyncKeyValue *) nil_chk(self->keyValue_)) putWithLong:self->cursorId_ withByteArray:[((ImActorModelModulesMessagesEntityPlainCursorsStorage *) nil_chk(self->plainCursorsStorage_)) toByteArray]];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ImActorModelModulesMessagesCursorActor)


#line 114
@implementation ImActorModelModulesMessagesCursorActor_OnCompleted


#line 118
- (instancetype)initWithAMPeer:(AMPeer *)peer
                      withLong:(jlong)date {
  if (self = [super init]) {
    
#line 119
    self->peer_ = peer;
    
#line 120
    self->date_ = date;
  }
  return self;
}


#line 123
- (AMPeer *)getPeer {
  
#line 124
  return peer_;
}


#line 127
- (jlong)getDate {
  
#line 128
  return date_;
}

- (void)copyAllFieldsTo:(ImActorModelModulesMessagesCursorActor_OnCompleted *)other {
  [super copyAllFieldsTo:other];
  other->peer_ = peer_;
  other->date_ = date_;
}

@end

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ImActorModelModulesMessagesCursorActor_OnCompleted)
