//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/ex3ndr/Develop/actor-model/library/actor-cocoa-base/build/java/im/actor/model/modules/contacts/ContactsSyncActor.java
//


#include "IOSObjectArray.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "im/actor/model/Configuration.h"
#include "im/actor/model/api/User.h"
#include "im/actor/model/api/rpc/RequestGetContacts.h"
#include "im/actor/model/api/rpc/ResponseGetContacts.h"
#include "im/actor/model/crypto/CryptoUtils.h"
#include "im/actor/model/droidkit/actors/Actor.h"
#include "im/actor/model/droidkit/actors/ActorRef.h"
#include "im/actor/model/droidkit/bser/DataInput.h"
#include "im/actor/model/droidkit/bser/DataOutput.h"
#include "im/actor/model/droidkit/engine/ListEngine.h"
#include "im/actor/model/droidkit/engine/PreferencesStorage.h"
#include "im/actor/model/entity/Avatar.h"
#include "im/actor/model/entity/Contact.h"
#include "im/actor/model/entity/User.h"
#include "im/actor/model/log/Log.h"
#include "im/actor/model/modules/AppStateModule.h"
#include "im/actor/model/modules/Contacts.h"
#include "im/actor/model/modules/Modules.h"
#include "im/actor/model/modules/SearchModule.h"
#include "im/actor/model/modules/Updates.h"
#include "im/actor/model/modules/contacts/ContactsSyncActor.h"
#include "im/actor/model/modules/updates/internal/ContactsLoaded.h"
#include "im/actor/model/modules/utils/ModuleActor.h"
#include "im/actor/model/mvvm/generics/BooleanValueModel.h"
#include "im/actor/model/network/RpcCallback.h"
#include "im/actor/model/network/RpcException.h"
#include "im/actor/model/viewmodel/UserVM.h"
#include "java/io/IOException.h"
#include "java/io/UnsupportedEncodingException.h"
#include "java/lang/Boolean.h"
#include "java/lang/Integer.h"
#include "java/util/ArrayList.h"
#include "java/util/Arrays.h"
#include "java/util/Collections.h"
#include "java/util/Comparator.h"
#include "java/util/List.h"

@interface ImActorModelModulesContactsContactsSyncActor () {
 @public
  jboolean ENABLE_LOG_;
  JavaUtilArrayList *contacts_;
  jboolean isInProgress_;
  jboolean isInvalidated_;
}

- (void)updateEngineList;

- (void)saveList;

- (void)notifyState;

@end

J2OBJC_FIELD_SETTER(ImActorModelModulesContactsContactsSyncActor, contacts_, JavaUtilArrayList *)

static NSString *ImActorModelModulesContactsContactsSyncActor_TAG_ = @"ContactsServerSync";
J2OBJC_STATIC_FIELD_GETTER(ImActorModelModulesContactsContactsSyncActor, TAG_, NSString *)

__attribute__((unused)) static void ImActorModelModulesContactsContactsSyncActor_updateEngineList(ImActorModelModulesContactsContactsSyncActor *self);

__attribute__((unused)) static void ImActorModelModulesContactsContactsSyncActor_saveList(ImActorModelModulesContactsContactsSyncActor *self);

__attribute__((unused)) static void ImActorModelModulesContactsContactsSyncActor_notifyState(ImActorModelModulesContactsContactsSyncActor *self);

@interface ImActorModelModulesContactsContactsSyncActor_PerformSync : NSObject

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(ImActorModelModulesContactsContactsSyncActor_PerformSync)

__attribute__((unused)) static void ImActorModelModulesContactsContactsSyncActor_PerformSync_init(ImActorModelModulesContactsContactsSyncActor_PerformSync *self);

__attribute__((unused)) static ImActorModelModulesContactsContactsSyncActor_PerformSync *new_ImActorModelModulesContactsContactsSyncActor_PerformSync_init() NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(ImActorModelModulesContactsContactsSyncActor_PerformSync)

@interface ImActorModelModulesContactsContactsSyncActor_ContactsLoaded () {
 @public
  APResponseGetContacts *result_;
}

@end

J2OBJC_FIELD_SETTER(ImActorModelModulesContactsContactsSyncActor_ContactsLoaded, result_, APResponseGetContacts *)

@interface ImActorModelModulesContactsContactsSyncActor_ContactsAdded () {
 @public
  IOSIntArray *uids_;
}

@end

J2OBJC_FIELD_SETTER(ImActorModelModulesContactsContactsSyncActor_ContactsAdded, uids_, IOSIntArray *)

@interface ImActorModelModulesContactsContactsSyncActor_ContactsRemoved () {
 @public
  IOSIntArray *uids_;
}

@end

J2OBJC_FIELD_SETTER(ImActorModelModulesContactsContactsSyncActor_ContactsRemoved, uids_, IOSIntArray *)

@interface ImActorModelModulesContactsContactsSyncActor_UserChanged () {
 @public
  AMUser *user_;
}

@end

J2OBJC_FIELD_SETTER(ImActorModelModulesContactsContactsSyncActor_UserChanged, user_, AMUser *)

@interface ImActorModelModulesContactsContactsSyncActor_$1 : NSObject < AMRpcCallback > {
 @public
  ImActorModelModulesContactsContactsSyncActor *this$0_;
}

- (void)onResult:(APResponseGetContacts *)response;

- (void)onError:(AMRpcException *)e;

- (instancetype)initWithImActorModelModulesContactsContactsSyncActor:(ImActorModelModulesContactsContactsSyncActor *)outer$;

@end

J2OBJC_EMPTY_STATIC_INIT(ImActorModelModulesContactsContactsSyncActor_$1)

J2OBJC_FIELD_SETTER(ImActorModelModulesContactsContactsSyncActor_$1, this$0_, ImActorModelModulesContactsContactsSyncActor *)

__attribute__((unused)) static void ImActorModelModulesContactsContactsSyncActor_$1_initWithImActorModelModulesContactsContactsSyncActor_(ImActorModelModulesContactsContactsSyncActor_$1 *self, ImActorModelModulesContactsContactsSyncActor *outer$);

__attribute__((unused)) static ImActorModelModulesContactsContactsSyncActor_$1 *new_ImActorModelModulesContactsContactsSyncActor_$1_initWithImActorModelModulesContactsContactsSyncActor_(ImActorModelModulesContactsContactsSyncActor *outer$) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(ImActorModelModulesContactsContactsSyncActor_$1)

@interface ImActorModelModulesContactsContactsSyncActor_$2 : NSObject < JavaUtilComparator >

- (jint)compareWithId:(AMUser *)lhs
               withId:(AMUser *)rhs;

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(ImActorModelModulesContactsContactsSyncActor_$2)

__attribute__((unused)) static void ImActorModelModulesContactsContactsSyncActor_$2_init(ImActorModelModulesContactsContactsSyncActor_$2 *self);

__attribute__((unused)) static ImActorModelModulesContactsContactsSyncActor_$2 *new_ImActorModelModulesContactsContactsSyncActor_$2_init() NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(ImActorModelModulesContactsContactsSyncActor_$2)

@implementation ImActorModelModulesContactsContactsSyncActor

- (instancetype)initWithImActorModelModulesModules:(ImActorModelModulesModules *)messenger {
  ImActorModelModulesContactsContactsSyncActor_initWithImActorModelModulesModules_(self, messenger);
  return self;
}

- (void)preStart {
  [super preStart];
  if (ENABLE_LOG_) {
    AMLog_dWithNSString_withNSString_(ImActorModelModulesContactsContactsSyncActor_TAG_, @"Loading contacts ids from storage...");
  }
  IOSByteArray *data = [((id<DKPreferencesStorage>) nil_chk([self preferences])) getBytesWithKey:@"contact_list"];
  if (data != nil) {
    @try {
      BSDataInput *dataInput = new_BSDataInput_initWithByteArray_withInt_withInt_(data, 0, data->size_);
      jint count = [dataInput readInt];
      for (jint i = 0; i < count; i++) {
        [((JavaUtilArrayList *) nil_chk(contacts_)) addWithId:JavaLangInteger_valueOfWithInt_([dataInput readInt])];
      }
    }
    @catch (JavaIoIOException *e) {
      [((JavaIoIOException *) nil_chk(e)) printStackTrace];
    }
  }
  ImActorModelModulesContactsContactsSyncActor_notifyState(self);
  [((DKActorRef *) nil_chk([self self__])) sendWithId:new_ImActorModelModulesContactsContactsSyncActor_PerformSync_init()];
}

- (void)performSync {
  if (ENABLE_LOG_) {
    AMLog_dWithNSString_withNSString_(ImActorModelModulesContactsContactsSyncActor_TAG_, @"Checking sync");
  }
  if (isInProgress_) {
    if (ENABLE_LOG_) {
      AMLog_dWithNSString_withNSString_(ImActorModelModulesContactsContactsSyncActor_TAG_, @"Sync in progress, invalidating current sync");
    }
    isInvalidated_ = YES;
    return;
  }
  isInProgress_ = YES;
  isInvalidated_ = NO;
  if (ENABLE_LOG_) {
    AMLog_dWithNSString_withNSString_(ImActorModelModulesContactsContactsSyncActor_TAG_, @"Starting sync");
  }
  IOSObjectArray *uids = [contacts_ toArrayWithNSObjectArray:[IOSObjectArray newArrayWithLength:[((JavaUtilArrayList *) nil_chk(contacts_)) size] type:JavaLangInteger_class_()]];
  JavaUtilArrays_sortWithNSObjectArray_(uids);
  NSString *hash_ = @"";
  {
    IOSObjectArray *a__ = uids;
    JavaLangInteger * const *b__ = ((IOSObjectArray *) nil_chk(a__))->buffer_;
    JavaLangInteger * const *e__ = b__ + a__->size_;
    while (b__ < e__) {
      jlong u = [((JavaLangInteger *) nil_chk(*b__++)) intValue];
      if (((jint) [hash_ length]) != 0) {
        hash_ = JreStrcat("$C", hash_, ',');
      }
      hash_ = JreStrcat("$J", hash_, u);
    }
  }
  IOSByteArray *hashData;
  @try {
    hashData = [hash_ getBytesWithCharsetName:@"UTF-8"];
  }
  @catch (JavaIoUnsupportedEncodingException *e) {
    [((JavaIoUnsupportedEncodingException *) nil_chk(e)) printStackTrace];
    return;
  }
  NSString *hashValue = AMCryptoUtils_hexWithByteArray_(AMCryptoUtils_SHA256WithByteArray_(hashData));
  AMLog_dWithNSString_withNSString_(ImActorModelModulesContactsContactsSyncActor_TAG_, JreStrcat("$$", @"Performing sync with uids: ", hash_));
  AMLog_dWithNSString_withNSString_(ImActorModelModulesContactsContactsSyncActor_TAG_, JreStrcat("$$$I", @"Performing sync with hash: ", hashValue, @", hashData:", ((IOSByteArray *) nil_chk(hashData))->size_));
  [self requestWithAPRequest:new_APRequestGetContacts_initWithNSString_(hashValue) withAMRpcCallback:new_ImActorModelModulesContactsContactsSyncActor_$1_initWithImActorModelModulesContactsContactsSyncActor_(self)];
}

- (void)onContactsLoadedWithAPResponseGetContacts:(APResponseGetContacts *)result {
  if (ENABLE_LOG_) {
    AMLog_dWithNSString_withNSString_(ImActorModelModulesContactsContactsSyncActor_TAG_, @"Sync result received");
  }
  isInProgress_ = NO;
  [((ImActorModelModulesAppStateModule *) nil_chk([((ImActorModelModulesModules *) nil_chk([self modules])) getAppStateModule])) onContactsLoaded];
  if ([((APResponseGetContacts *) nil_chk(result)) isNotChanged]) {
    AMLog_dWithNSString_withNSString_(ImActorModelModulesContactsContactsSyncActor_TAG_, @"Sync: Not changed");
    if (isInvalidated_) {
      [self performSync];
    }
    else {
    }
    return;
  }
  if (ENABLE_LOG_) {
    AMLog_dWithNSString_withNSString_(ImActorModelModulesContactsContactsSyncActor_TAG_, JreStrcat("$I$", @"Sync received ", [((id<JavaUtilList>) nil_chk([result getUsers])) size], @" contacts"));
  }
  {
    IOSObjectArray *a__ = [contacts_ toArrayWithNSObjectArray:[IOSObjectArray newArrayWithLength:[((JavaUtilArrayList *) nil_chk(contacts_)) size] type:JavaLangInteger_class_()]];
    JavaLangInteger * const *b__ = ((IOSObjectArray *) nil_chk(a__))->buffer_;
    JavaLangInteger * const *e__ = b__ + a__->size_;
    while (b__ < e__) {
      JavaLangInteger *uid = *b__++;
      {
        for (APUser * __strong u in nil_chk([result getUsers])) {
          if ([((APUser *) nil_chk(u)) getId] == [((JavaLangInteger *) nil_chk(uid)) intValue]) {
            goto continue_outer;
          }
        }
        if (ENABLE_LOG_) {
          AMLog_dWithNSString_withNSString_(ImActorModelModulesContactsContactsSyncActor_TAG_, JreStrcat("$@", @"Removing: #", uid));
        }
        [contacts_ removeWithId:uid];
        if ([self getUserWithInt:[((JavaLangInteger *) nil_chk(uid)) intValue]] != nil) {
          [((AMBooleanValueModel *) nil_chk([((AMUserVM *) nil_chk([self getUserVMWithInt:[uid intValue]])) isContactModel])) changeWithValue:JavaLangBoolean_valueOfWithBoolean_(NO)];
        }
        [((ImActorModelModulesContacts *) nil_chk([((ImActorModelModulesModules *) nil_chk([self modules])) getContactsModule])) markNonContactWithInt:[uid intValue]];
      }
      continue_outer: ;
    }
  }
  for (APUser * __strong u in nil_chk([result getUsers])) {
    if ([contacts_ containsWithId:JavaLangInteger_valueOfWithInt_([((APUser *) nil_chk(u)) getId])]) {
      continue;
    }
    if (ENABLE_LOG_) {
      AMLog_dWithNSString_withNSString_(ImActorModelModulesContactsContactsSyncActor_TAG_, JreStrcat("$I", @"Adding: #", [u getId]));
    }
    [contacts_ addWithId:JavaLangInteger_valueOfWithInt_([u getId])];
    if ([self getUserWithInt:[u getId]] != nil) {
      [((AMBooleanValueModel *) nil_chk([((AMUserVM *) nil_chk([self getUserVMWithInt:[u getId]])) isContactModel])) changeWithValue:JavaLangBoolean_valueOfWithBoolean_(YES)];
    }
    [((ImActorModelModulesContacts *) nil_chk([((ImActorModelModulesModules *) nil_chk([self modules])) getContactsModule])) markContactWithInt:[u getId]];
  }
  ImActorModelModulesContactsContactsSyncActor_saveList(self);
  ImActorModelModulesContactsContactsSyncActor_updateEngineList(self);
  if (isInvalidated_) {
    [((DKActorRef *) nil_chk([self self__])) sendWithId:new_ImActorModelModulesContactsContactsSyncActor_PerformSync_init()];
  }
}

- (void)onContactsAddedWithIntArray:(IOSIntArray *)uids {
  if (ENABLE_LOG_) {
    AMLog_dWithNSString_withNSString_(ImActorModelModulesContactsContactsSyncActor_TAG_, @"OnContactsAdded received");
  }
  {
    IOSIntArray *a__ = uids;
    jint const *b__ = ((IOSIntArray *) nil_chk(a__))->buffer_;
    jint const *e__ = b__ + a__->size_;
    while (b__ < e__) {
      jint uid = *b__++;
      if (ENABLE_LOG_) {
        AMLog_dWithNSString_withNSString_(ImActorModelModulesContactsContactsSyncActor_TAG_, JreStrcat("$I", @"Adding: #", uid));
      }
      [((JavaUtilArrayList *) nil_chk(contacts_)) addWithId:JavaLangInteger_valueOfWithInt_(uid)];
      [((ImActorModelModulesContacts *) nil_chk([((ImActorModelModulesModules *) nil_chk([self modules])) getContactsModule])) markContactWithInt:uid];
      [((AMBooleanValueModel *) nil_chk([((AMUserVM *) nil_chk([self getUserVMWithInt:uid])) isContactModel])) changeWithValue:JavaLangBoolean_valueOfWithBoolean_(YES)];
    }
  }
  ImActorModelModulesContactsContactsSyncActor_saveList(self);
  ImActorModelModulesContactsContactsSyncActor_updateEngineList(self);
  [((DKActorRef *) nil_chk([self self__])) sendWithId:new_ImActorModelModulesContactsContactsSyncActor_PerformSync_init()];
}

- (void)onContactsRemovedWithIntArray:(IOSIntArray *)uids {
  if (ENABLE_LOG_) {
    AMLog_dWithNSString_withNSString_(ImActorModelModulesContactsContactsSyncActor_TAG_, @"OnContactsRemoved received");
  }
  {
    IOSIntArray *a__ = uids;
    jint const *b__ = ((IOSIntArray *) nil_chk(a__))->buffer_;
    jint const *e__ = b__ + a__->size_;
    while (b__ < e__) {
      jint uid = *b__++;
      AMLog_dWithNSString_withNSString_(ImActorModelModulesContactsContactsSyncActor_TAG_, JreStrcat("$I", @"Removing: #", uid));
      [((JavaUtilArrayList *) nil_chk(contacts_)) removeWithId:JavaLangInteger_valueOfWithInt_(uid)];
      [((ImActorModelModulesContacts *) nil_chk([((ImActorModelModulesModules *) nil_chk([self modules])) getContactsModule])) markNonContactWithInt:uid];
      [((AMBooleanValueModel *) nil_chk([((AMUserVM *) nil_chk([self getUserVMWithInt:uid])) isContactModel])) changeWithValue:JavaLangBoolean_valueOfWithBoolean_(NO)];
    }
  }
  ImActorModelModulesContactsContactsSyncActor_saveList(self);
  ImActorModelModulesContactsContactsSyncActor_updateEngineList(self);
  [((DKActorRef *) nil_chk([self self__])) sendWithId:new_ImActorModelModulesContactsContactsSyncActor_PerformSync_init()];
}

- (void)onUserChangedWithAMUser:(AMUser *)user {
  if (ENABLE_LOG_) {
    AMLog_dWithNSString_withNSString_(ImActorModelModulesContactsContactsSyncActor_TAG_, JreStrcat("$I$", @"OnUserChanged #", [((AMUser *) nil_chk(user)) getUid], @" received"));
  }
  if (![((JavaUtilArrayList *) nil_chk(contacts_)) containsWithId:JavaLangInteger_valueOfWithInt_([((AMUser *) nil_chk(user)) getUid])]) {
    return;
  }
  ImActorModelModulesContactsContactsSyncActor_updateEngineList(self);
}

- (void)updateEngineList {
  ImActorModelModulesContactsContactsSyncActor_updateEngineList(self);
}

- (void)saveList {
  ImActorModelModulesContactsContactsSyncActor_saveList(self);
}

- (void)notifyState {
  ImActorModelModulesContactsContactsSyncActor_notifyState(self);
}

- (void)onReceiveWithId:(id)message {
  if ([message isKindOfClass:[ImActorModelModulesContactsContactsSyncActor_ContactsLoaded class]]) {
    [self onContactsLoadedWithAPResponseGetContacts:[((ImActorModelModulesContactsContactsSyncActor_ContactsLoaded *) nil_chk(((ImActorModelModulesContactsContactsSyncActor_ContactsLoaded *) check_class_cast(message, [ImActorModelModulesContactsContactsSyncActor_ContactsLoaded class])))) getResult]];
  }
  else if ([message isKindOfClass:[ImActorModelModulesContactsContactsSyncActor_ContactsAdded class]]) {
    [self onContactsAddedWithIntArray:[((ImActorModelModulesContactsContactsSyncActor_ContactsAdded *) nil_chk(((ImActorModelModulesContactsContactsSyncActor_ContactsAdded *) check_class_cast(message, [ImActorModelModulesContactsContactsSyncActor_ContactsAdded class])))) getUids]];
  }
  else if ([message isKindOfClass:[ImActorModelModulesContactsContactsSyncActor_ContactsRemoved class]]) {
    [self onContactsRemovedWithIntArray:[((ImActorModelModulesContactsContactsSyncActor_ContactsRemoved *) nil_chk(((ImActorModelModulesContactsContactsSyncActor_ContactsRemoved *) check_class_cast(message, [ImActorModelModulesContactsContactsSyncActor_ContactsRemoved class])))) getUids]];
  }
  else if ([message isKindOfClass:[ImActorModelModulesContactsContactsSyncActor_UserChanged class]]) {
    [self onUserChangedWithAMUser:[((ImActorModelModulesContactsContactsSyncActor_UserChanged *) nil_chk(((ImActorModelModulesContactsContactsSyncActor_UserChanged *) check_class_cast(message, [ImActorModelModulesContactsContactsSyncActor_UserChanged class])))) getUser]];
  }
  else if ([message isKindOfClass:[ImActorModelModulesContactsContactsSyncActor_PerformSync class]]) {
    [self performSync];
  }
  else {
    [self dropWithId:message];
  }
}

@end

void ImActorModelModulesContactsContactsSyncActor_initWithImActorModelModulesModules_(ImActorModelModulesContactsContactsSyncActor *self, ImActorModelModulesModules *messenger) {
  (void) ImActorModelModulesUtilsModuleActor_initWithImActorModelModulesModules_(self, messenger);
  self->contacts_ = new_JavaUtilArrayList_init();
  self->isInProgress_ = NO;
  self->isInvalidated_ = NO;
  self->ENABLE_LOG_ = [((AMConfiguration *) nil_chk([((ImActorModelModulesModules *) nil_chk(messenger)) getConfiguration])) isEnableContactsLogging];
}

ImActorModelModulesContactsContactsSyncActor *new_ImActorModelModulesContactsContactsSyncActor_initWithImActorModelModulesModules_(ImActorModelModulesModules *messenger) {
  ImActorModelModulesContactsContactsSyncActor *self = [ImActorModelModulesContactsContactsSyncActor alloc];
  ImActorModelModulesContactsContactsSyncActor_initWithImActorModelModulesModules_(self, messenger);
  return self;
}

void ImActorModelModulesContactsContactsSyncActor_updateEngineList(ImActorModelModulesContactsContactsSyncActor *self) {
  if (self->ENABLE_LOG_) {
    AMLog_dWithNSString_withNSString_(ImActorModelModulesContactsContactsSyncActor_TAG_, @"Saving contact EngineList");
  }
  JavaUtilArrayList *userList = new_JavaUtilArrayList_init();
  for (JavaLangInteger *boxed__ in nil_chk(self->contacts_)) {
    jint u = [((JavaLangInteger *) nil_chk(boxed__)) intValue];
    [userList addWithId:[self getUserWithInt:u]];
  }
  JavaUtilCollections_sortWithJavaUtilList_withJavaUtilComparator_(userList, new_ImActorModelModulesContactsContactsSyncActor_$2_init());
  id<JavaUtilList> registeredContacts = new_JavaUtilArrayList_init();
  jint index = -1;
  for (AMUser * __strong userModel in userList) {
    AMContact *contact = new_AMContact_initWithInt_withLong_withAMAvatar_withNSString_([((AMUser *) nil_chk(userModel)) getUid], (jlong) index--, [userModel getAvatar], [userModel getName]);
    [registeredContacts addWithId:contact];
  }
  [((id<DKListEngine>) nil_chk([((ImActorModelModulesContacts *) nil_chk([((ImActorModelModulesModules *) nil_chk([self modules])) getContactsModule])) getContacts])) replaceItems:registeredContacts];
  IOSObjectArray *sorted = [IOSObjectArray newArrayWithLength:[self->contacts_ size] type:JavaLangInteger_class_()];
  jint sindex = 0;
  for (AMUser * __strong userModel in userList) {
    (void) IOSObjectArray_Set(sorted, sindex++, JavaLangInteger_valueOfWithInt_([((AMUser *) nil_chk(userModel)) getUid]));
  }
  [((ImActorModelModulesSearchModule *) nil_chk([((ImActorModelModulesModules *) nil_chk([self modules])) getSearch])) onContactsChangedWithJavaLangIntegerArray:sorted];
  ImActorModelModulesContactsContactsSyncActor_notifyState(self);
}

void ImActorModelModulesContactsContactsSyncActor_saveList(ImActorModelModulesContactsContactsSyncActor *self) {
  if (self->ENABLE_LOG_) {
    AMLog_dWithNSString_withNSString_(ImActorModelModulesContactsContactsSyncActor_TAG_, @"Saving contacts ids to storage");
  }
  BSDataOutput *dataOutput = new_BSDataOutput_init();
  [dataOutput writeIntWithInt:[((JavaUtilArrayList *) nil_chk(self->contacts_)) size]];
  for (JavaLangInteger *boxed__ in self->contacts_) {
    jint l = [((JavaLangInteger *) nil_chk(boxed__)) intValue];
    [dataOutput writeIntWithInt:l];
  }
  [((id<DKPreferencesStorage>) nil_chk([self preferences])) putBytesWithKey:@"contact_list" withValue:[dataOutput toByteArray]];
}

void ImActorModelModulesContactsContactsSyncActor_notifyState(ImActorModelModulesContactsContactsSyncActor *self) {
  [((ImActorModelModulesAppStateModule *) nil_chk([((ImActorModelModulesModules *) nil_chk([self modules])) getAppStateModule])) onContactsUpdateWithBoolean:[((id<DKListEngine>) nil_chk([((ImActorModelModulesContacts *) nil_chk([((ImActorModelModulesModules *) nil_chk([self modules])) getContactsModule])) getContacts])) isEmpty]];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ImActorModelModulesContactsContactsSyncActor)

@implementation ImActorModelModulesContactsContactsSyncActor_PerformSync

- (instancetype)init {
  ImActorModelModulesContactsContactsSyncActor_PerformSync_init(self);
  return self;
}

@end

void ImActorModelModulesContactsContactsSyncActor_PerformSync_init(ImActorModelModulesContactsContactsSyncActor_PerformSync *self) {
  (void) NSObject_init(self);
}

ImActorModelModulesContactsContactsSyncActor_PerformSync *new_ImActorModelModulesContactsContactsSyncActor_PerformSync_init() {
  ImActorModelModulesContactsContactsSyncActor_PerformSync *self = [ImActorModelModulesContactsContactsSyncActor_PerformSync alloc];
  ImActorModelModulesContactsContactsSyncActor_PerformSync_init(self);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ImActorModelModulesContactsContactsSyncActor_PerformSync)

@implementation ImActorModelModulesContactsContactsSyncActor_ContactsLoaded

- (instancetype)initWithAPResponseGetContacts:(APResponseGetContacts *)result {
  ImActorModelModulesContactsContactsSyncActor_ContactsLoaded_initWithAPResponseGetContacts_(self, result);
  return self;
}

- (APResponseGetContacts *)getResult {
  return result_;
}

@end

void ImActorModelModulesContactsContactsSyncActor_ContactsLoaded_initWithAPResponseGetContacts_(ImActorModelModulesContactsContactsSyncActor_ContactsLoaded *self, APResponseGetContacts *result) {
  (void) NSObject_init(self);
  self->result_ = result;
}

ImActorModelModulesContactsContactsSyncActor_ContactsLoaded *new_ImActorModelModulesContactsContactsSyncActor_ContactsLoaded_initWithAPResponseGetContacts_(APResponseGetContacts *result) {
  ImActorModelModulesContactsContactsSyncActor_ContactsLoaded *self = [ImActorModelModulesContactsContactsSyncActor_ContactsLoaded alloc];
  ImActorModelModulesContactsContactsSyncActor_ContactsLoaded_initWithAPResponseGetContacts_(self, result);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ImActorModelModulesContactsContactsSyncActor_ContactsLoaded)

@implementation ImActorModelModulesContactsContactsSyncActor_ContactsAdded

- (instancetype)initWithIntArray:(IOSIntArray *)uids {
  ImActorModelModulesContactsContactsSyncActor_ContactsAdded_initWithIntArray_(self, uids);
  return self;
}

- (IOSIntArray *)getUids {
  return uids_;
}

@end

void ImActorModelModulesContactsContactsSyncActor_ContactsAdded_initWithIntArray_(ImActorModelModulesContactsContactsSyncActor_ContactsAdded *self, IOSIntArray *uids) {
  (void) NSObject_init(self);
  self->uids_ = uids;
}

ImActorModelModulesContactsContactsSyncActor_ContactsAdded *new_ImActorModelModulesContactsContactsSyncActor_ContactsAdded_initWithIntArray_(IOSIntArray *uids) {
  ImActorModelModulesContactsContactsSyncActor_ContactsAdded *self = [ImActorModelModulesContactsContactsSyncActor_ContactsAdded alloc];
  ImActorModelModulesContactsContactsSyncActor_ContactsAdded_initWithIntArray_(self, uids);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ImActorModelModulesContactsContactsSyncActor_ContactsAdded)

@implementation ImActorModelModulesContactsContactsSyncActor_ContactsRemoved

- (instancetype)initWithIntArray:(IOSIntArray *)uids {
  ImActorModelModulesContactsContactsSyncActor_ContactsRemoved_initWithIntArray_(self, uids);
  return self;
}

- (IOSIntArray *)getUids {
  return uids_;
}

@end

void ImActorModelModulesContactsContactsSyncActor_ContactsRemoved_initWithIntArray_(ImActorModelModulesContactsContactsSyncActor_ContactsRemoved *self, IOSIntArray *uids) {
  (void) NSObject_init(self);
  self->uids_ = uids;
}

ImActorModelModulesContactsContactsSyncActor_ContactsRemoved *new_ImActorModelModulesContactsContactsSyncActor_ContactsRemoved_initWithIntArray_(IOSIntArray *uids) {
  ImActorModelModulesContactsContactsSyncActor_ContactsRemoved *self = [ImActorModelModulesContactsContactsSyncActor_ContactsRemoved alloc];
  ImActorModelModulesContactsContactsSyncActor_ContactsRemoved_initWithIntArray_(self, uids);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ImActorModelModulesContactsContactsSyncActor_ContactsRemoved)

@implementation ImActorModelModulesContactsContactsSyncActor_UserChanged

- (instancetype)initWithAMUser:(AMUser *)user {
  ImActorModelModulesContactsContactsSyncActor_UserChanged_initWithAMUser_(self, user);
  return self;
}

- (AMUser *)getUser {
  return user_;
}

@end

void ImActorModelModulesContactsContactsSyncActor_UserChanged_initWithAMUser_(ImActorModelModulesContactsContactsSyncActor_UserChanged *self, AMUser *user) {
  (void) NSObject_init(self);
  self->user_ = user;
}

ImActorModelModulesContactsContactsSyncActor_UserChanged *new_ImActorModelModulesContactsContactsSyncActor_UserChanged_initWithAMUser_(AMUser *user) {
  ImActorModelModulesContactsContactsSyncActor_UserChanged *self = [ImActorModelModulesContactsContactsSyncActor_UserChanged alloc];
  ImActorModelModulesContactsContactsSyncActor_UserChanged_initWithAMUser_(self, user);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ImActorModelModulesContactsContactsSyncActor_UserChanged)

@implementation ImActorModelModulesContactsContactsSyncActor_$1

- (void)onResult:(APResponseGetContacts *)response {
  [((ImActorModelModulesUpdates *) nil_chk([this$0_ updates])) onUpdateReceivedWithId:new_ImActorModelModulesUpdatesInternalContactsLoaded_initWithAPResponseGetContacts_(response)];
}

- (void)onError:(AMRpcException *)e {
  this$0_->isInProgress_ = NO;
  [((AMRpcException *) nil_chk(e)) printStackTrace];
}

- (instancetype)initWithImActorModelModulesContactsContactsSyncActor:(ImActorModelModulesContactsContactsSyncActor *)outer$ {
  ImActorModelModulesContactsContactsSyncActor_$1_initWithImActorModelModulesContactsContactsSyncActor_(self, outer$);
  return self;
}

@end

void ImActorModelModulesContactsContactsSyncActor_$1_initWithImActorModelModulesContactsContactsSyncActor_(ImActorModelModulesContactsContactsSyncActor_$1 *self, ImActorModelModulesContactsContactsSyncActor *outer$) {
  self->this$0_ = outer$;
  (void) NSObject_init(self);
}

ImActorModelModulesContactsContactsSyncActor_$1 *new_ImActorModelModulesContactsContactsSyncActor_$1_initWithImActorModelModulesContactsContactsSyncActor_(ImActorModelModulesContactsContactsSyncActor *outer$) {
  ImActorModelModulesContactsContactsSyncActor_$1 *self = [ImActorModelModulesContactsContactsSyncActor_$1 alloc];
  ImActorModelModulesContactsContactsSyncActor_$1_initWithImActorModelModulesContactsContactsSyncActor_(self, outer$);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ImActorModelModulesContactsContactsSyncActor_$1)

@implementation ImActorModelModulesContactsContactsSyncActor_$2

- (jint)compareWithId:(AMUser *)lhs
               withId:(AMUser *)rhs {
  return [((NSString *) nil_chk([((AMUser *) nil_chk(lhs)) getName])) compareToWithId:[((AMUser *) nil_chk(rhs)) getName]];
}

- (instancetype)init {
  ImActorModelModulesContactsContactsSyncActor_$2_init(self);
  return self;
}

@end

void ImActorModelModulesContactsContactsSyncActor_$2_init(ImActorModelModulesContactsContactsSyncActor_$2 *self) {
  (void) NSObject_init(self);
}

ImActorModelModulesContactsContactsSyncActor_$2 *new_ImActorModelModulesContactsContactsSyncActor_$2_init() {
  ImActorModelModulesContactsContactsSyncActor_$2 *self = [ImActorModelModulesContactsContactsSyncActor_$2 alloc];
  ImActorModelModulesContactsContactsSyncActor_$2_init(self);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ImActorModelModulesContactsContactsSyncActor_$2)
