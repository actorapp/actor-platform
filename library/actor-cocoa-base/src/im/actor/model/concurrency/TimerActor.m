//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/ex3ndr/Develop/actor-model/library/actor-cocoa-base/build/java/im/actor/model/concurrency/TimerActor.java
//


#line 1 "/Users/ex3ndr/Develop/actor-model/library/actor-cocoa-base/build/java/im/actor/model/concurrency/TimerActor.java"

#include "J2ObjC_source.h"
#include "im/actor/model/concurrency/TimerActor.h"
#include "im/actor/model/concurrency/TimerCompat.h"
#include "im/actor/model/droidkit/actors/Actor.h"
#include "im/actor/model/droidkit/actors/ActorRef.h"

@interface AMTimerActor_Cancel () {
 @public
  AMTimerCompat *timerCompat_;
}

@end

J2OBJC_FIELD_SETTER(AMTimerActor_Cancel, timerCompat_, AMTimerCompat *)

@interface AMTimerActor_Schedule () {
 @public
  AMTimerCompat *timerCompat_;
  jlong delay_;
}

@end

J2OBJC_FIELD_SETTER(AMTimerActor_Schedule, timerCompat_, AMTimerCompat *)


#line 8
@implementation AMTimerActor


#line 11
- (void)onReceiveWithId:(id)message {
  if ([message isKindOfClass:[AMTimerActor_Schedule class]]) {
    [((DKActorRef *) nil_chk([self self__])) sendOnceWithId:[((AMTimerActor_Schedule *) nil_chk(((AMTimerActor_Schedule *) check_class_cast(message, [AMTimerActor_Schedule class])))) getTimerCompat] withLong:[((AMTimerActor_Schedule *) nil_chk(((AMTimerActor_Schedule *) check_class_cast(message, [AMTimerActor_Schedule class])))) getDelay]];
  }
  else
#line 14
  if ([message isKindOfClass:[AMTimerActor_Cancel class]]) {
    [((DKActorRef *) nil_chk([self self__])) cancelMessageWithId:[((AMTimerActor_Cancel *) nil_chk(((AMTimerActor_Cancel *) check_class_cast(message, [AMTimerActor_Cancel class])))) getTimerCompat]];
  }
  else
#line 16
  if ([message isKindOfClass:[AMTimerCompat class]]) {
    [((AMTimerCompat *) nil_chk(((AMTimerCompat *) check_class_cast(message, [AMTimerCompat class])))) invokeRun];
  }
  else {
    
#line 19
    [self dropWithId:message];
  }
}

- (instancetype)init {
  AMTimerActor_init(self);
  return self;
}

@end

void AMTimerActor_init(AMTimerActor *self) {
  (void) DKActor_init(self);
}

AMTimerActor *new_AMTimerActor_init() {
  AMTimerActor *self = [AMTimerActor alloc];
  AMTimerActor_init(self);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(AMTimerActor)


#line 23
@implementation AMTimerActor_Cancel


#line 26
- (instancetype)initWithAMTimerCompat:(AMTimerCompat *)timerCompat {
  AMTimerActor_Cancel_initWithAMTimerCompat_(self, timerCompat);
  return self;
}


#line 30
- (AMTimerCompat *)getTimerCompat {
  return timerCompat_;
}

@end


#line 26
void AMTimerActor_Cancel_initWithAMTimerCompat_(AMTimerActor_Cancel *self, AMTimerCompat *timerCompat) {
  (void) NSObject_init(self);
  
#line 27
  self->timerCompat_ = timerCompat;
}


#line 26
AMTimerActor_Cancel *new_AMTimerActor_Cancel_initWithAMTimerCompat_(AMTimerCompat *timerCompat) {
  AMTimerActor_Cancel *self = [AMTimerActor_Cancel alloc];
  AMTimerActor_Cancel_initWithAMTimerCompat_(self, timerCompat);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(AMTimerActor_Cancel)


#line 35
@implementation AMTimerActor_Schedule


#line 39
- (instancetype)initWithAMTimerCompat:(AMTimerCompat *)timerCompat
                             withLong:(jlong)delay {
  AMTimerActor_Schedule_initWithAMTimerCompat_withLong_(self, timerCompat, delay);
  return self;
}


#line 44
- (jlong)getDelay {
  return delay_;
}

- (AMTimerCompat *)getTimerCompat {
  return timerCompat_;
}

@end


#line 39
void AMTimerActor_Schedule_initWithAMTimerCompat_withLong_(AMTimerActor_Schedule *self, AMTimerCompat *timerCompat, jlong delay) {
  (void) NSObject_init(self);
  
#line 40
  self->timerCompat_ = timerCompat;
  self->delay_ = delay;
}


#line 39
AMTimerActor_Schedule *new_AMTimerActor_Schedule_initWithAMTimerCompat_withLong_(AMTimerCompat *timerCompat, jlong delay) {
  AMTimerActor_Schedule *self = [AMTimerActor_Schedule alloc];
  AMTimerActor_Schedule_initWithAMTimerCompat_withLong_(self, timerCompat, delay);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(AMTimerActor_Schedule)
