//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/ex3ndr/Develop/actor-model/library/actor-cocoa-base/build/java/im/actor/model/droidkit/actors/mailbox/collections/EnvelopeCollection.java
//


#line 1 "/Users/ex3ndr/Develop/actor-model/library/actor-cocoa-base/build/java/im/actor/model/droidkit/actors/mailbox/collections/EnvelopeCollection.java"

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "im/actor/model/droidkit/actors/Environment.h"
#include "im/actor/model/droidkit/actors/mailbox/Envelope.h"
#include "im/actor/model/droidkit/actors/mailbox/collections/EnvelopeCollection.h"
#include "im/actor/model/droidkit/actors/mailbox/collections/EnvelopeRoot.h"
#include "im/actor/model/droidkit/actors/mailbox/collections/ScheduledEnvelope.h"
#include "im/actor/model/util/AtomicIntegerCompat.h"
#include "im/actor/model/util/ThreadLocalCompat.h"
#include "java/lang/Long.h"
#include "java/util/Collection.h"
#include "java/util/Iterator.h"
#include "java/util/Map.h"
#include "java/util/Set.h"
#include "java/util/TreeMap.h"

@interface ImActorModelDroidkitActorsMailboxCollectionsEnvelopeCollection () {
 @public
  JavaUtilTreeMap *envelopes_;
  ImActorModelDroidkitActorsMailboxCollectionsEnvelopeRoot *root_;
  jint id__;
  jlong topKey_;
}

@end

J2OBJC_FIELD_SETTER(ImActorModelDroidkitActorsMailboxCollectionsEnvelopeCollection, envelopes_, JavaUtilTreeMap *)
J2OBJC_FIELD_SETTER(ImActorModelDroidkitActorsMailboxCollectionsEnvelopeCollection, root_, ImActorModelDroidkitActorsMailboxCollectionsEnvelopeRoot *)

static AMAtomicIntegerCompat *ImActorModelDroidkitActorsMailboxCollectionsEnvelopeCollection_NEXT_ID_;
J2OBJC_STATIC_FIELD_GETTER(ImActorModelDroidkitActorsMailboxCollectionsEnvelopeCollection, NEXT_ID_, AMAtomicIntegerCompat *)

@interface ImActorModelDroidkitActorsMailboxCollectionsEnvelopeCollection_FetchResult () {
 @public
  ImActorModelDroidkitActorsMailboxCollectionsScheduledEnvelope *envelope__;
  jlong delay__;
}

- (instancetype)initWithImActorModelDroidkitActorsMailboxCollectionsScheduledEnvelope:(ImActorModelDroidkitActorsMailboxCollectionsScheduledEnvelope *)envelope;

- (instancetype)initWithLong:(jlong)delay;

@end

J2OBJC_FIELD_SETTER(ImActorModelDroidkitActorsMailboxCollectionsEnvelopeCollection_FetchResult, envelope__, ImActorModelDroidkitActorsMailboxCollectionsScheduledEnvelope *)

static AMThreadLocalCompat *ImActorModelDroidkitActorsMailboxCollectionsEnvelopeCollection_FetchResult_RESULT_CACHE_;
J2OBJC_STATIC_FIELD_GETTER(ImActorModelDroidkitActorsMailboxCollectionsEnvelopeCollection_FetchResult, RESULT_CACHE_, AMThreadLocalCompat *)
J2OBJC_STATIC_FIELD_SETTER(ImActorModelDroidkitActorsMailboxCollectionsEnvelopeCollection_FetchResult, RESULT_CACHE_, AMThreadLocalCompat *)

__attribute__((unused)) static void ImActorModelDroidkitActorsMailboxCollectionsEnvelopeCollection_FetchResult_initWithImActorModelDroidkitActorsMailboxCollectionsScheduledEnvelope_(ImActorModelDroidkitActorsMailboxCollectionsEnvelopeCollection_FetchResult *self, ImActorModelDroidkitActorsMailboxCollectionsScheduledEnvelope *envelope);

__attribute__((unused)) static ImActorModelDroidkitActorsMailboxCollectionsEnvelopeCollection_FetchResult *new_ImActorModelDroidkitActorsMailboxCollectionsEnvelopeCollection_FetchResult_initWithImActorModelDroidkitActorsMailboxCollectionsScheduledEnvelope_(ImActorModelDroidkitActorsMailboxCollectionsScheduledEnvelope *envelope) NS_RETURNS_RETAINED;

__attribute__((unused)) static void ImActorModelDroidkitActorsMailboxCollectionsEnvelopeCollection_FetchResult_initWithLong_(ImActorModelDroidkitActorsMailboxCollectionsEnvelopeCollection_FetchResult *self, jlong delay);

__attribute__((unused)) static ImActorModelDroidkitActorsMailboxCollectionsEnvelopeCollection_FetchResult *new_ImActorModelDroidkitActorsMailboxCollectionsEnvelopeCollection_FetchResult_initWithLong_(jlong delay) NS_RETURNS_RETAINED;

J2OBJC_INITIALIZED_DEFN(ImActorModelDroidkitActorsMailboxCollectionsEnvelopeCollection)


#line 15
@implementation ImActorModelDroidkitActorsMailboxCollectionsEnvelopeCollection


#line 27
- (instancetype)initWithImActorModelDroidkitActorsMailboxCollectionsEnvelopeRoot:(ImActorModelDroidkitActorsMailboxCollectionsEnvelopeRoot *)root {
  ImActorModelDroidkitActorsMailboxCollectionsEnvelopeCollection_initWithImActorModelDroidkitActorsMailboxCollectionsEnvelopeRoot_(self, root);
  return self;
}


#line 34
- (jint)getId {
  return id__;
}

- (jlong)getTopKey {
  return topKey_;
}

- (jlong)putEnvelopeWithDKEnvelope:(DKEnvelope *)envelope
                          withLong:(jlong)time {
  
#line 44
  jlong key = [((ImActorModelDroidkitActorsMailboxCollectionsEnvelopeRoot *) nil_chk(root_)) buildKeyWithLong:time];
  
#line 46
  jlong oldKey;
  @synchronized(envelopes_) {
    oldKey = topKey_;
    (void) [((JavaUtilTreeMap *) nil_chk(envelopes_)) putWithId:JavaLangLong_valueOfWithLong_(key) withId:new_ImActorModelDroidkitActorsMailboxCollectionsScheduledEnvelope_initWithLong_withLong_withDKEnvelope_(key, time, envelope)];
    
#line 51
    if (key < topKey_ || topKey_ == 0) {
      topKey_ = key;
    }
  }
  
#line 56
  if (oldKey != topKey_) {
    [root_ changedTopKeyWithImActorModelDroidkitActorsMailboxCollectionsEnvelopeCollection:self];
  }
  
#line 60
  return key;
}


#line 63
- (void)removeEnvelopeWithDKEnvelope:(DKEnvelope *)envelope
withImActorModelDroidkitActorsMailboxCollectionsEnvelopeCollection_EnvelopeComparator:(id<ImActorModelDroidkitActorsMailboxCollectionsEnvelopeCollection_EnvelopeComparator>)comparator {
  
#line 65
  jlong oldKey;
  
#line 67
  @synchronized(envelopes_) {
    oldKey = topKey_;
    id<JavaUtilIterator> iterator = [((id<JavaUtilSet>) nil_chk([((JavaUtilTreeMap *) nil_chk(envelopes_)) entrySet])) iterator];
    while ([((id<JavaUtilIterator>) nil_chk(iterator)) hasNext]) {
      if ([((id<ImActorModelDroidkitActorsMailboxCollectionsEnvelopeCollection_EnvelopeComparator>) nil_chk(comparator)) equalsWithDKEnvelope:[((ImActorModelDroidkitActorsMailboxCollectionsScheduledEnvelope *) nil_chk([((id<JavaUtilMap_Entry>) nil_chk([iterator next])) getValue])) getEnvelope] withDKEnvelope:envelope]) {
        [iterator remove];
      }
    }
    
#line 76
    if ([envelopes_ isEmpty]) {
      topKey_ = 0;
    }
    else {
      
#line 79
      topKey_ = [((JavaLangLong *) nil_chk([envelopes_ firstKey])) longLongValue];
    }
  }
  
#line 83
  if (oldKey != topKey_) {
    [((ImActorModelDroidkitActorsMailboxCollectionsEnvelopeRoot *) nil_chk(root_)) changedTopKeyWithImActorModelDroidkitActorsMailboxCollectionsEnvelopeCollection:self];
  }
}


#line 88
- (jlong)putEnvelopeOnceWithDKEnvelope:(DKEnvelope *)envelope
                              withLong:(jlong)time
withImActorModelDroidkitActorsMailboxCollectionsEnvelopeCollection_EnvelopeComparator:(id<ImActorModelDroidkitActorsMailboxCollectionsEnvelopeCollection_EnvelopeComparator>)comparator {
  
#line 90
  jlong key = [((ImActorModelDroidkitActorsMailboxCollectionsEnvelopeRoot *) nil_chk(root_)) buildKeyWithLong:time];
  
#line 92
  jlong oldKey;
  @synchronized(envelopes_) {
    oldKey = topKey_;
    id<JavaUtilIterator> iterator = [((id<JavaUtilSet>) nil_chk([((JavaUtilTreeMap *) nil_chk(envelopes_)) entrySet])) iterator];
    while ([((id<JavaUtilIterator>) nil_chk(iterator)) hasNext]) {
      if ([((id<ImActorModelDroidkitActorsMailboxCollectionsEnvelopeCollection_EnvelopeComparator>) nil_chk(comparator)) equalsWithDKEnvelope:[((ImActorModelDroidkitActorsMailboxCollectionsScheduledEnvelope *) nil_chk([((id<JavaUtilMap_Entry>) nil_chk([iterator next])) getValue])) getEnvelope] withDKEnvelope:envelope]) {
        [iterator remove];
      }
    }
    
#line 102
    (void) [envelopes_ putWithId:JavaLangLong_valueOfWithLong_(key) withId:new_ImActorModelDroidkitActorsMailboxCollectionsScheduledEnvelope_initWithLong_withLong_withDKEnvelope_(key, time, envelope)];
    topKey_ = [((JavaLangLong *) nil_chk([envelopes_ firstKey])) longLongValue];
  }
  
#line 106
  if (oldKey != topKey_) {
    [root_ changedTopKeyWithImActorModelDroidkitActorsMailboxCollectionsEnvelopeCollection:self];
  }
  
#line 110
  return key;
}


#line 113
- (ImActorModelDroidkitActorsMailboxCollectionsEnvelopeCollection_FetchResult *)fetchEnvelopeWithLong:(jlong)time {
  
#line 115
  ImActorModelDroidkitActorsMailboxCollectionsEnvelopeCollection_FetchResult *result;
  
#line 117
  jlong oldKey;
  @synchronized(envelopes_) {
    oldKey = topKey_;
    if ([((JavaUtilTreeMap *) nil_chk(envelopes_)) isEmpty]) {
      return nil;
    }
    
#line 124
    ImActorModelDroidkitActorsMailboxCollectionsScheduledEnvelope *envelope = [((id<JavaUtilMap_Entry>) nil_chk([envelopes_ firstEntry])) getValue];
    if ([((ImActorModelDroidkitActorsMailboxCollectionsScheduledEnvelope *) nil_chk(envelope)) getTime] <= time) {
      (void) [envelopes_ removeWithId:JavaLangLong_valueOfWithLong_([envelope getKey])];
      
#line 128
      if ([envelopes_ isEmpty]) {
        topKey_ = 0;
      }
      else {
        
#line 131
        topKey_ = [((JavaLangLong *) nil_chk([envelopes_ firstKey])) longLongValue];
      }
      result = ImActorModelDroidkitActorsMailboxCollectionsEnvelopeCollection_FetchResult_envelopeWithImActorModelDroidkitActorsMailboxCollectionsScheduledEnvelope_(envelope);
    }
    else {
      
#line 135
      result = ImActorModelDroidkitActorsMailboxCollectionsEnvelopeCollection_FetchResult_delayWithLong_([envelope getTime] - time);
    }
  }
  
#line 139
  if (oldKey != topKey_) {
    [((ImActorModelDroidkitActorsMailboxCollectionsEnvelopeRoot *) nil_chk(root_)) changedTopKeyWithImActorModelDroidkitActorsMailboxCollectionsEnvelopeCollection:self];
  }
  
#line 143
  return result;
}


#line 146
- (void)clear {
  @synchronized(envelopes_) {
    [((JavaUtilTreeMap *) nil_chk(envelopes_)) clear];
    topKey_ = 0;
  }
  [((ImActorModelDroidkitActorsMailboxCollectionsEnvelopeRoot *) nil_chk(root_)) changedTopKeyWithImActorModelDroidkitActorsMailboxCollectionsEnvelopeCollection:self];
}

- (jint)getSize {
  @synchronized(envelopes_) {
    return [((JavaUtilTreeMap *) nil_chk(envelopes_)) size];
  }
}

- (IOSObjectArray *)allEnvelopes {
  @synchronized(envelopes_) {
    IOSObjectArray *scheduledEnvelopes = [((id<JavaUtilCollection>) nil_chk([((JavaUtilTreeMap *) nil_chk(envelopes_)) values])) toArrayWithNSObjectArray:[IOSObjectArray newArrayWithLength:[envelopes_ size] type:ImActorModelDroidkitActorsMailboxCollectionsScheduledEnvelope_class_()]];
    IOSObjectArray *res = [IOSObjectArray newArrayWithLength:((IOSObjectArray *) nil_chk(scheduledEnvelopes))->size_ type:DKEnvelope_class_()];
    for (jint i = 0; i < res->size_; i++) {
      (void) IOSObjectArray_Set(res, i, [((ImActorModelDroidkitActorsMailboxCollectionsScheduledEnvelope *) nil_chk(IOSObjectArray_Get(scheduledEnvelopes, i))) getEnvelope]);
    }
    return res;
  }
}

+ (void)initialize {
  if (self == [ImActorModelDroidkitActorsMailboxCollectionsEnvelopeCollection class]) {
    ImActorModelDroidkitActorsMailboxCollectionsEnvelopeCollection_NEXT_ID_ = DKEnvironment_createAtomicIntWithInt_(
#line 17
    1);
    J2OBJC_SET_INITIALIZED(ImActorModelDroidkitActorsMailboxCollectionsEnvelopeCollection)
  }
}

@end


#line 27
void ImActorModelDroidkitActorsMailboxCollectionsEnvelopeCollection_initWithImActorModelDroidkitActorsMailboxCollectionsEnvelopeRoot_(ImActorModelDroidkitActorsMailboxCollectionsEnvelopeCollection *self, ImActorModelDroidkitActorsMailboxCollectionsEnvelopeRoot *root) {
  (void) NSObject_init(self);
  self->envelopes_ = new_JavaUtilTreeMap_init();
  
#line 28
  self->id__ = [((AMAtomicIntegerCompat *) nil_chk(ImActorModelDroidkitActorsMailboxCollectionsEnvelopeCollection_NEXT_ID_)) getAndIncrement];
  self->root_ = root;
  self->topKey_ = 0LL;
  [((ImActorModelDroidkitActorsMailboxCollectionsEnvelopeRoot *) nil_chk(self->root_)) attachCollectionWithImActorModelDroidkitActorsMailboxCollectionsEnvelopeCollection:self];
}


#line 27
ImActorModelDroidkitActorsMailboxCollectionsEnvelopeCollection *new_ImActorModelDroidkitActorsMailboxCollectionsEnvelopeCollection_initWithImActorModelDroidkitActorsMailboxCollectionsEnvelopeRoot_(ImActorModelDroidkitActorsMailboxCollectionsEnvelopeRoot *root) {
  ImActorModelDroidkitActorsMailboxCollectionsEnvelopeCollection *self = [ImActorModelDroidkitActorsMailboxCollectionsEnvelopeCollection alloc];
  ImActorModelDroidkitActorsMailboxCollectionsEnvelopeCollection_initWithImActorModelDroidkitActorsMailboxCollectionsEnvelopeRoot_(self, root);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ImActorModelDroidkitActorsMailboxCollectionsEnvelopeCollection)

J2OBJC_INTERFACE_TYPE_LITERAL_SOURCE(ImActorModelDroidkitActorsMailboxCollectionsEnvelopeCollection_EnvelopeComparator)

J2OBJC_INITIALIZED_DEFN(ImActorModelDroidkitActorsMailboxCollectionsEnvelopeCollection_FetchResult)


#line 175
@implementation ImActorModelDroidkitActorsMailboxCollectionsEnvelopeCollection_FetchResult


#line 179
+ (ImActorModelDroidkitActorsMailboxCollectionsEnvelopeCollection_FetchResult *)envelopeWithImActorModelDroidkitActorsMailboxCollectionsScheduledEnvelope:(ImActorModelDroidkitActorsMailboxCollectionsScheduledEnvelope *)envelope {
  return ImActorModelDroidkitActorsMailboxCollectionsEnvelopeCollection_FetchResult_envelopeWithImActorModelDroidkitActorsMailboxCollectionsScheduledEnvelope_(envelope);
}


#line 191
+ (ImActorModelDroidkitActorsMailboxCollectionsEnvelopeCollection_FetchResult *)delayWithLong:(jlong)delay {
  return ImActorModelDroidkitActorsMailboxCollectionsEnvelopeCollection_FetchResult_delayWithLong_(delay);
}


#line 206
- (instancetype)initWithImActorModelDroidkitActorsMailboxCollectionsScheduledEnvelope:(ImActorModelDroidkitActorsMailboxCollectionsScheduledEnvelope *)envelope {
  ImActorModelDroidkitActorsMailboxCollectionsEnvelopeCollection_FetchResult_initWithImActorModelDroidkitActorsMailboxCollectionsScheduledEnvelope_(self, envelope);
  return self;
}


#line 210
- (instancetype)initWithLong:(jlong)delay {
  ImActorModelDroidkitActorsMailboxCollectionsEnvelopeCollection_FetchResult_initWithLong_(self, delay);
  return self;
}


#line 214
- (ImActorModelDroidkitActorsMailboxCollectionsScheduledEnvelope *)getEnvelope {
  return envelope__;
}

- (jlong)getDelay {
  return delay__;
}

- (void)updateWithImActorModelDroidkitActorsMailboxCollectionsScheduledEnvelope:(ImActorModelDroidkitActorsMailboxCollectionsScheduledEnvelope *)envelope
                                                                       withLong:(jlong)delay {
  self->envelope__ = envelope;
  self->delay__ = delay;
}


#line 227
- (void)recycle {
  [((AMThreadLocalCompat *) nil_chk(ImActorModelDroidkitActorsMailboxCollectionsEnvelopeCollection_FetchResult_RESULT_CACHE_)) setWithId:self];
}

+ (void)initialize {
  if (self == [ImActorModelDroidkitActorsMailboxCollectionsEnvelopeCollection_FetchResult class]) {
    ImActorModelDroidkitActorsMailboxCollectionsEnvelopeCollection_FetchResult_RESULT_CACHE_ = DKEnvironment_createThreadLocal();
    J2OBJC_SET_INITIALIZED(ImActorModelDroidkitActorsMailboxCollectionsEnvelopeCollection_FetchResult)
  }
}

@end


#line 179
ImActorModelDroidkitActorsMailboxCollectionsEnvelopeCollection_FetchResult *ImActorModelDroidkitActorsMailboxCollectionsEnvelopeCollection_FetchResult_envelopeWithImActorModelDroidkitActorsMailboxCollectionsScheduledEnvelope_(ImActorModelDroidkitActorsMailboxCollectionsScheduledEnvelope *envelope) {
  ImActorModelDroidkitActorsMailboxCollectionsEnvelopeCollection_FetchResult_initialize();
  
#line 180
  ImActorModelDroidkitActorsMailboxCollectionsEnvelopeCollection_FetchResult *res = [((AMThreadLocalCompat *) nil_chk(ImActorModelDroidkitActorsMailboxCollectionsEnvelopeCollection_FetchResult_RESULT_CACHE_)) get];
  if (res != nil) {
    [ImActorModelDroidkitActorsMailboxCollectionsEnvelopeCollection_FetchResult_RESULT_CACHE_ remove];
    [res updateWithImActorModelDroidkitActorsMailboxCollectionsScheduledEnvelope:envelope withLong:0];
  }
  else {
    
#line 185
    res = new_ImActorModelDroidkitActorsMailboxCollectionsEnvelopeCollection_FetchResult_initWithImActorModelDroidkitActorsMailboxCollectionsScheduledEnvelope_(envelope);
  }
  
#line 188
  return res;
}


#line 191
ImActorModelDroidkitActorsMailboxCollectionsEnvelopeCollection_FetchResult *ImActorModelDroidkitActorsMailboxCollectionsEnvelopeCollection_FetchResult_delayWithLong_(jlong delay) {
  ImActorModelDroidkitActorsMailboxCollectionsEnvelopeCollection_FetchResult_initialize();
  
#line 192
  ImActorModelDroidkitActorsMailboxCollectionsEnvelopeCollection_FetchResult *res = [((AMThreadLocalCompat *) nil_chk(ImActorModelDroidkitActorsMailboxCollectionsEnvelopeCollection_FetchResult_RESULT_CACHE_)) get];
  if (res != nil) {
    [ImActorModelDroidkitActorsMailboxCollectionsEnvelopeCollection_FetchResult_RESULT_CACHE_ remove];
    [res updateWithImActorModelDroidkitActorsMailboxCollectionsScheduledEnvelope:nil withLong:delay];
  }
  else {
    
#line 197
    res = new_ImActorModelDroidkitActorsMailboxCollectionsEnvelopeCollection_FetchResult_initWithLong_(delay);
  }
  
#line 200
  return res;
}


#line 206
void ImActorModelDroidkitActorsMailboxCollectionsEnvelopeCollection_FetchResult_initWithImActorModelDroidkitActorsMailboxCollectionsScheduledEnvelope_(ImActorModelDroidkitActorsMailboxCollectionsEnvelopeCollection_FetchResult *self, ImActorModelDroidkitActorsMailboxCollectionsScheduledEnvelope *envelope) {
  (void) NSObject_init(self);
  
#line 207
  self->envelope__ = envelope;
}


#line 206
ImActorModelDroidkitActorsMailboxCollectionsEnvelopeCollection_FetchResult *new_ImActorModelDroidkitActorsMailboxCollectionsEnvelopeCollection_FetchResult_initWithImActorModelDroidkitActorsMailboxCollectionsScheduledEnvelope_(ImActorModelDroidkitActorsMailboxCollectionsScheduledEnvelope *envelope) {
  ImActorModelDroidkitActorsMailboxCollectionsEnvelopeCollection_FetchResult *self = [ImActorModelDroidkitActorsMailboxCollectionsEnvelopeCollection_FetchResult alloc];
  ImActorModelDroidkitActorsMailboxCollectionsEnvelopeCollection_FetchResult_initWithImActorModelDroidkitActorsMailboxCollectionsScheduledEnvelope_(self, envelope);
  return self;
}


#line 210
void ImActorModelDroidkitActorsMailboxCollectionsEnvelopeCollection_FetchResult_initWithLong_(ImActorModelDroidkitActorsMailboxCollectionsEnvelopeCollection_FetchResult *self, jlong delay) {
  (void) NSObject_init(self);
  
#line 211
  self->delay__ = delay;
}


#line 210
ImActorModelDroidkitActorsMailboxCollectionsEnvelopeCollection_FetchResult *new_ImActorModelDroidkitActorsMailboxCollectionsEnvelopeCollection_FetchResult_initWithLong_(jlong delay) {
  ImActorModelDroidkitActorsMailboxCollectionsEnvelopeCollection_FetchResult *self = [ImActorModelDroidkitActorsMailboxCollectionsEnvelopeCollection_FetchResult alloc];
  ImActorModelDroidkitActorsMailboxCollectionsEnvelopeCollection_FetchResult_initWithLong_(self, delay);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ImActorModelDroidkitActorsMailboxCollectionsEnvelopeCollection_FetchResult)
