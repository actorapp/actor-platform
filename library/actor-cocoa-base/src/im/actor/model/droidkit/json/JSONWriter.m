//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/ex3ndr/Develop/actor-model/library/actor-cocoa-base/build/java/im/actor/model/droidkit/json/JSONWriter.java
//


#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "im/actor/model/droidkit/json/JSONException.h"
#include "im/actor/model/droidkit/json/JSONObject.h"
#include "im/actor/model/droidkit/json/JSONWriter.h"
#include "java/io/IOException.h"
#include "java/io/Writer.h"
#include "java/lang/Boolean.h"
#include "java/lang/Double.h"
#include "java/lang/Long.h"

#define ImActorModelDroidkitJsonJSONWriter_maxdepth 200

@interface ImActorModelDroidkitJsonJSONWriter () {
 @public
  jboolean comma_;
  IOSObjectArray *stack_;
  jint top_;
}

- (ImActorModelDroidkitJsonJSONWriter *)appendWithNSString:(NSString *)string;

- (ImActorModelDroidkitJsonJSONWriter *)endWithChar:(jchar)mode
                                           withChar:(jchar)c;

- (void)popWithChar:(jchar)c;

- (void)pushWithImActorModelDroidkitJsonJSONObject:(ImActorModelDroidkitJsonJSONObject *)jo;

@end

J2OBJC_FIELD_SETTER(ImActorModelDroidkitJsonJSONWriter, stack_, IOSObjectArray *)

J2OBJC_STATIC_FIELD_GETTER(ImActorModelDroidkitJsonJSONWriter, maxdepth, jint)

__attribute__((unused)) static ImActorModelDroidkitJsonJSONWriter *ImActorModelDroidkitJsonJSONWriter_appendWithNSString_(ImActorModelDroidkitJsonJSONWriter *self, NSString *string);

__attribute__((unused)) static ImActorModelDroidkitJsonJSONWriter *ImActorModelDroidkitJsonJSONWriter_endWithChar_withChar_(ImActorModelDroidkitJsonJSONWriter *self, jchar mode, jchar c);

__attribute__((unused)) static void ImActorModelDroidkitJsonJSONWriter_popWithChar_(ImActorModelDroidkitJsonJSONWriter *self, jchar c);

__attribute__((unused)) static void ImActorModelDroidkitJsonJSONWriter_pushWithImActorModelDroidkitJsonJSONObject_(ImActorModelDroidkitJsonJSONWriter *self, ImActorModelDroidkitJsonJSONObject *jo);

@implementation ImActorModelDroidkitJsonJSONWriter

- (instancetype)initWithJavaIoWriter:(JavaIoWriter *)w {
  ImActorModelDroidkitJsonJSONWriter_initWithJavaIoWriter_(self, w);
  return self;
}

- (ImActorModelDroidkitJsonJSONWriter *)appendWithNSString:(NSString *)string {
  return ImActorModelDroidkitJsonJSONWriter_appendWithNSString_(self, string);
}

- (ImActorModelDroidkitJsonJSONWriter *)array {
  if (self->mode_ == 'i' || self->mode_ == 'o' || self->mode_ == 'a') {
    ImActorModelDroidkitJsonJSONWriter_pushWithImActorModelDroidkitJsonJSONObject_(self, nil);
    (void) ImActorModelDroidkitJsonJSONWriter_appendWithNSString_(self, @"[");
    self->comma_ = NO;
    return self;
  }
  @throw new_ImActorModelDroidkitJsonJSONException_initWithNSString_(@"Misplaced array.");
}

- (ImActorModelDroidkitJsonJSONWriter *)endWithChar:(jchar)mode
                                           withChar:(jchar)c {
  return ImActorModelDroidkitJsonJSONWriter_endWithChar_withChar_(self, mode, c);
}

- (ImActorModelDroidkitJsonJSONWriter *)endArray {
  return ImActorModelDroidkitJsonJSONWriter_endWithChar_withChar_(self, 'a', ']');
}

- (ImActorModelDroidkitJsonJSONWriter *)endObject {
  return ImActorModelDroidkitJsonJSONWriter_endWithChar_withChar_(self, 'k', '}');
}

- (ImActorModelDroidkitJsonJSONWriter *)keyWithNSString:(NSString *)string {
  if (string == nil) {
    @throw new_ImActorModelDroidkitJsonJSONException_initWithNSString_(@"Null key.");
  }
  if (self->mode_ == 'k') {
    @try {
      (void) [((ImActorModelDroidkitJsonJSONObject *) nil_chk(IOSObjectArray_Get(nil_chk(self->stack_), self->top_ - 1))) putOnceWithNSString:string withId:JavaLangBoolean_get_TRUE__()];
      if (self->comma_) {
        [((JavaIoWriter *) nil_chk(self->writer_)) writeWithInt:','];
      }
      [((JavaIoWriter *) nil_chk(self->writer_)) writeWithNSString:ImActorModelDroidkitJsonJSONObject_quoteWithNSString_(string)];
      [self->writer_ writeWithInt:':'];
      self->comma_ = NO;
      self->mode_ = 'o';
      return self;
    }
    @catch (JavaIoIOException *e) {
      @throw new_ImActorModelDroidkitJsonJSONException_initWithJavaLangThrowable_(e);
    }
  }
  @throw new_ImActorModelDroidkitJsonJSONException_initWithNSString_(@"Misplaced key.");
}

- (ImActorModelDroidkitJsonJSONWriter *)object {
  if (self->mode_ == 'i') {
    self->mode_ = 'o';
  }
  if (self->mode_ == 'o' || self->mode_ == 'a') {
    (void) ImActorModelDroidkitJsonJSONWriter_appendWithNSString_(self, @"{");
    ImActorModelDroidkitJsonJSONWriter_pushWithImActorModelDroidkitJsonJSONObject_(self, new_ImActorModelDroidkitJsonJSONObject_init());
    self->comma_ = NO;
    return self;
  }
  @throw new_ImActorModelDroidkitJsonJSONException_initWithNSString_(@"Misplaced object.");
}

- (void)popWithChar:(jchar)c {
  ImActorModelDroidkitJsonJSONWriter_popWithChar_(self, c);
}

- (void)pushWithImActorModelDroidkitJsonJSONObject:(ImActorModelDroidkitJsonJSONObject *)jo {
  ImActorModelDroidkitJsonJSONWriter_pushWithImActorModelDroidkitJsonJSONObject_(self, jo);
}

- (ImActorModelDroidkitJsonJSONWriter *)valueWithBoolean:(jboolean)b {
  return ImActorModelDroidkitJsonJSONWriter_appendWithNSString_(self, b ? @"true" : @"false");
}

- (ImActorModelDroidkitJsonJSONWriter *)valueWithDouble:(jdouble)d {
  return [self valueWithId:new_JavaLangDouble_initWithDouble_(d)];
}

- (ImActorModelDroidkitJsonJSONWriter *)valueWithLong:(jlong)l {
  return ImActorModelDroidkitJsonJSONWriter_appendWithNSString_(self, JavaLangLong_toStringWithLong_(l));
}

- (ImActorModelDroidkitJsonJSONWriter *)valueWithId:(id)object {
  return ImActorModelDroidkitJsonJSONWriter_appendWithNSString_(self, ImActorModelDroidkitJsonJSONObject_valueToStringWithId_(object));
}

@end

void ImActorModelDroidkitJsonJSONWriter_initWithJavaIoWriter_(ImActorModelDroidkitJsonJSONWriter *self, JavaIoWriter *w) {
  (void) NSObject_init(self);
  self->comma_ = NO;
  self->mode_ = 'i';
  self->stack_ = [IOSObjectArray newArrayWithLength:ImActorModelDroidkitJsonJSONWriter_maxdepth type:ImActorModelDroidkitJsonJSONObject_class_()];
  self->top_ = 0;
  self->writer_ = w;
}

ImActorModelDroidkitJsonJSONWriter *new_ImActorModelDroidkitJsonJSONWriter_initWithJavaIoWriter_(JavaIoWriter *w) {
  ImActorModelDroidkitJsonJSONWriter *self = [ImActorModelDroidkitJsonJSONWriter alloc];
  ImActorModelDroidkitJsonJSONWriter_initWithJavaIoWriter_(self, w);
  return self;
}

ImActorModelDroidkitJsonJSONWriter *ImActorModelDroidkitJsonJSONWriter_appendWithNSString_(ImActorModelDroidkitJsonJSONWriter *self, NSString *string) {
  if (string == nil) {
    @throw new_ImActorModelDroidkitJsonJSONException_initWithNSString_(@"Null pointer");
  }
  if (self->mode_ == 'o' || self->mode_ == 'a') {
    @try {
      if (self->comma_ && self->mode_ == 'a') {
        [((JavaIoWriter *) nil_chk(self->writer_)) writeWithInt:','];
      }
      [((JavaIoWriter *) nil_chk(self->writer_)) writeWithNSString:string];
    }
    @catch (JavaIoIOException *e) {
      @throw new_ImActorModelDroidkitJsonJSONException_initWithJavaLangThrowable_(e);
    }
    if (self->mode_ == 'o') {
      self->mode_ = 'k';
    }
    self->comma_ = YES;
    return self;
  }
  @throw new_ImActorModelDroidkitJsonJSONException_initWithNSString_(@"Value out of sequence.");
}

ImActorModelDroidkitJsonJSONWriter *ImActorModelDroidkitJsonJSONWriter_endWithChar_withChar_(ImActorModelDroidkitJsonJSONWriter *self, jchar mode, jchar c) {
  if (self->mode_ != mode) {
    @throw new_ImActorModelDroidkitJsonJSONException_initWithNSString_(mode == 'a' ? @"Misplaced endArray." : @"Misplaced endObject.");
  }
  ImActorModelDroidkitJsonJSONWriter_popWithChar_(self, mode);
  @try {
    [((JavaIoWriter *) nil_chk(self->writer_)) writeWithInt:c];
  }
  @catch (JavaIoIOException *e) {
    @throw new_ImActorModelDroidkitJsonJSONException_initWithJavaLangThrowable_(e);
  }
  self->comma_ = YES;
  return self;
}

void ImActorModelDroidkitJsonJSONWriter_popWithChar_(ImActorModelDroidkitJsonJSONWriter *self, jchar c) {
  if (self->top_ <= 0) {
    @throw new_ImActorModelDroidkitJsonJSONException_initWithNSString_(@"Nesting error.");
  }
  jchar m = IOSObjectArray_Get(nil_chk(self->stack_), self->top_ - 1) == nil ? 'a' : 'k';
  if (m != c) {
    @throw new_ImActorModelDroidkitJsonJSONException_initWithNSString_(@"Nesting error.");
  }
  self->top_ -= 1;
  self->mode_ = self->top_ == 0 ? 'd' : IOSObjectArray_Get(self->stack_, self->top_ - 1) == nil ? 'a' : 'k';
}

void ImActorModelDroidkitJsonJSONWriter_pushWithImActorModelDroidkitJsonJSONObject_(ImActorModelDroidkitJsonJSONWriter *self, ImActorModelDroidkitJsonJSONObject *jo) {
  if (self->top_ >= ImActorModelDroidkitJsonJSONWriter_maxdepth) {
    @throw new_ImActorModelDroidkitJsonJSONException_initWithNSString_(@"Nesting too deep.");
  }
  (void) IOSObjectArray_Set(nil_chk(self->stack_), self->top_, jo);
  self->mode_ = jo == nil ? 'a' : 'k';
  self->top_ += 1;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ImActorModelDroidkitJsonJSONWriter)
