//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/ex3ndr/Develop/actor-model/library/actor-cocoa-base/build/java/im/actor/model/droidkit/bser/util/ArrayUtils.java
//


#line 1 "/Users/ex3ndr/Develop/actor-model/library/actor-cocoa-base/build/java/im/actor/model/droidkit/bser/util/ArrayUtils.java"

#include "IOSObjectArray.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "im/actor/model/droidkit/bser/util/ArrayUtils.h"
#include "java/lang/IllegalArgumentException.h"
#include "java/lang/System.h"

#define ImActorModelDroidkitBserUtilArrayUtils_CACHE_SIZE 73

@interface ImActorModelDroidkitBserUtilArrayUtils ()

- (instancetype)init;

@end

static IOSObjectArray *ImActorModelDroidkitBserUtilArrayUtils_EMPTY_;
J2OBJC_STATIC_FIELD_GETTER(ImActorModelDroidkitBserUtilArrayUtils, EMPTY_, IOSObjectArray *)
J2OBJC_STATIC_FIELD_SETTER(ImActorModelDroidkitBserUtilArrayUtils, EMPTY_, IOSObjectArray *)

J2OBJC_STATIC_FIELD_GETTER(ImActorModelDroidkitBserUtilArrayUtils, CACHE_SIZE, jint)

static IOSObjectArray *ImActorModelDroidkitBserUtilArrayUtils_sCache_;
J2OBJC_STATIC_FIELD_GETTER(ImActorModelDroidkitBserUtilArrayUtils, sCache_, IOSObjectArray *)
J2OBJC_STATIC_FIELD_SETTER(ImActorModelDroidkitBserUtilArrayUtils, sCache_, IOSObjectArray *)

__attribute__((unused)) static void ImActorModelDroidkitBserUtilArrayUtils_init(ImActorModelDroidkitBserUtilArrayUtils *self);

__attribute__((unused)) static ImActorModelDroidkitBserUtilArrayUtils *new_ImActorModelDroidkitBserUtilArrayUtils_init() NS_RETURNS_RETAINED;

J2OBJC_INITIALIZED_DEFN(ImActorModelDroidkitBserUtilArrayUtils)


#line 27
@implementation ImActorModelDroidkitBserUtilArrayUtils


#line 32
- (instancetype)init {
  ImActorModelDroidkitBserUtilArrayUtils_init(self);
  return self;
}


#line 34
+ (jint)idealByteArraySizeWithInt:(jint)need {
  return ImActorModelDroidkitBserUtilArrayUtils_idealByteArraySizeWithInt_(need);
}


#line 42
+ (jint)idealBooleanArraySizeWithInt:(jint)need {
  return ImActorModelDroidkitBserUtilArrayUtils_idealBooleanArraySizeWithInt_(need);
}

+ (jint)idealShortArraySizeWithInt:(jint)need {
  return ImActorModelDroidkitBserUtilArrayUtils_idealShortArraySizeWithInt_(need);
}

+ (jint)idealCharArraySizeWithInt:(jint)need {
  return ImActorModelDroidkitBserUtilArrayUtils_idealCharArraySizeWithInt_(need);
}

+ (jint)idealIntArraySizeWithInt:(jint)need {
  return ImActorModelDroidkitBserUtilArrayUtils_idealIntArraySizeWithInt_(need);
}

+ (jint)idealFloatArraySizeWithInt:(jint)need {
  return ImActorModelDroidkitBserUtilArrayUtils_idealFloatArraySizeWithInt_(need);
}

+ (jint)idealObjectArraySizeWithInt:(jint)need {
  return ImActorModelDroidkitBserUtilArrayUtils_idealObjectArraySizeWithInt_(need);
}

+ (jint)idealLongArraySizeWithInt:(jint)need {
  return ImActorModelDroidkitBserUtilArrayUtils_idealLongArraySizeWithInt_(need);
}


#line 78
+ (jboolean)equalsWithByteArray:(IOSByteArray *)array1
                  withByteArray:(IOSByteArray *)array2
                        withInt:(jint)length {
  return ImActorModelDroidkitBserUtilArrayUtils_equalsWithByteArray_withByteArray_withInt_(array1, array2, length);
}


#line 105
+ (jboolean)containsWithNSObjectArray:(IOSObjectArray *)array
                               withId:(id)value {
  return ImActorModelDroidkitBserUtilArrayUtils_containsWithNSObjectArray_withId_(array, value);
}


#line 113
+ (jint)indexOfWithNSObjectArray:(IOSObjectArray *)array
                          withId:(id)value {
  return ImActorModelDroidkitBserUtilArrayUtils_indexOfWithNSObjectArray_withId_(array, value);
}


#line 127
+ (jboolean)containsAllWithNSObjectArray:(IOSObjectArray *)array
                       withNSObjectArray:(IOSObjectArray *)check {
  return ImActorModelDroidkitBserUtilArrayUtils_containsAllWithNSObjectArray_withNSObjectArray_(array, check);
}


#line 136
+ (jboolean)containsWithIntArray:(IOSIntArray *)array
                         withInt:(jint)value {
  return ImActorModelDroidkitBserUtilArrayUtils_containsWithIntArray_withInt_(array, value);
}


#line 145
+ (jlong)totalWithLongArray:(IOSLongArray *)array {
  return ImActorModelDroidkitBserUtilArrayUtils_totalWithLongArray_(array);
}


#line 153
+ (IOSIntArray *)appendIntWithIntArray:(IOSIntArray *)cur
                               withInt:(jint)val {
  return ImActorModelDroidkitBserUtilArrayUtils_appendIntWithIntArray_withInt_(cur, val);
}


#line 169
+ (IOSIntArray *)removeIntWithIntArray:(IOSIntArray *)cur
                               withInt:(jint)val {
  return ImActorModelDroidkitBserUtilArrayUtils_removeIntWithIntArray_withInt_(cur, val);
}

+ (void)initialize {
  if (self == [ImActorModelDroidkitBserUtilArrayUtils class]) {
    ImActorModelDroidkitBserUtilArrayUtils_EMPTY_ = [IOSObjectArray newArrayWithLength:
#line 28
    0 type:NSObject_class_()];
    ImActorModelDroidkitBserUtilArrayUtils_sCache_ = [IOSObjectArray newArrayWithLength:
#line 30
    ImActorModelDroidkitBserUtilArrayUtils_CACHE_SIZE type:NSObject_class_()];
    J2OBJC_SET_INITIALIZED(ImActorModelDroidkitBserUtilArrayUtils)
  }
}

@end


#line 32
void ImActorModelDroidkitBserUtilArrayUtils_init(ImActorModelDroidkitBserUtilArrayUtils *self) {
  (void) NSObject_init(self);
}


#line 32
ImActorModelDroidkitBserUtilArrayUtils *new_ImActorModelDroidkitBserUtilArrayUtils_init() {
  ImActorModelDroidkitBserUtilArrayUtils *self = [ImActorModelDroidkitBserUtilArrayUtils alloc];
  ImActorModelDroidkitBserUtilArrayUtils_init(self);
  return self;
}


#line 34
jint ImActorModelDroidkitBserUtilArrayUtils_idealByteArraySizeWithInt_(jint need) {
  ImActorModelDroidkitBserUtilArrayUtils_initialize();
  
#line 35
  for (jint i = 4; i < 32; i++)
#line 36
  if (need <= (LShift32(1, i)) - 12)
#line 37
  return (LShift32(1, i)) - 12;
  
#line 39
  return need;
}


#line 42
jint ImActorModelDroidkitBserUtilArrayUtils_idealBooleanArraySizeWithInt_(jint need) {
  ImActorModelDroidkitBserUtilArrayUtils_initialize();
  
#line 43
  return ImActorModelDroidkitBserUtilArrayUtils_idealByteArraySizeWithInt_(need);
}


#line 46
jint ImActorModelDroidkitBserUtilArrayUtils_idealShortArraySizeWithInt_(jint need) {
  ImActorModelDroidkitBserUtilArrayUtils_initialize();
  
#line 47
  return ImActorModelDroidkitBserUtilArrayUtils_idealByteArraySizeWithInt_(need * 2) / 2;
}


#line 50
jint ImActorModelDroidkitBserUtilArrayUtils_idealCharArraySizeWithInt_(jint need) {
  ImActorModelDroidkitBserUtilArrayUtils_initialize();
  
#line 51
  return ImActorModelDroidkitBserUtilArrayUtils_idealByteArraySizeWithInt_(need * 2) / 2;
}


#line 54
jint ImActorModelDroidkitBserUtilArrayUtils_idealIntArraySizeWithInt_(jint need) {
  ImActorModelDroidkitBserUtilArrayUtils_initialize();
  
#line 55
  return ImActorModelDroidkitBserUtilArrayUtils_idealByteArraySizeWithInt_(need * 4) / 4;
}


#line 58
jint ImActorModelDroidkitBserUtilArrayUtils_idealFloatArraySizeWithInt_(jint need) {
  ImActorModelDroidkitBserUtilArrayUtils_initialize();
  
#line 59
  return ImActorModelDroidkitBserUtilArrayUtils_idealByteArraySizeWithInt_(need * 4) / 4;
}


#line 62
jint ImActorModelDroidkitBserUtilArrayUtils_idealObjectArraySizeWithInt_(jint need) {
  ImActorModelDroidkitBserUtilArrayUtils_initialize();
  
#line 63
  return ImActorModelDroidkitBserUtilArrayUtils_idealByteArraySizeWithInt_(need * 4) / 4;
}


#line 66
jint ImActorModelDroidkitBserUtilArrayUtils_idealLongArraySizeWithInt_(jint need) {
  ImActorModelDroidkitBserUtilArrayUtils_initialize();
  
#line 67
  return ImActorModelDroidkitBserUtilArrayUtils_idealByteArraySizeWithInt_(need * 8) / 8;
}


#line 78
jboolean ImActorModelDroidkitBserUtilArrayUtils_equalsWithByteArray_withByteArray_withInt_(IOSByteArray *array1, IOSByteArray *array2, jint length) {
  ImActorModelDroidkitBserUtilArrayUtils_initialize();
  
#line 79
  if (length < 0) {
    @throw new_JavaLangIllegalArgumentException_init();
  }
  
#line 83
  if (array1 == array2) {
    return YES;
  }
  if (array1 == nil || array2 == nil || array1->size_ < length || array2->size_ < length) {
    return NO;
  }
  for (jint i = 0; i < length; i++) {
    if (IOSByteArray_Get(nil_chk(array1), i) != IOSByteArray_Get(nil_chk(array2), i)) {
      return NO;
    }
  }
  return YES;
}


#line 105
jboolean ImActorModelDroidkitBserUtilArrayUtils_containsWithNSObjectArray_withId_(IOSObjectArray *array, id value) {
  ImActorModelDroidkitBserUtilArrayUtils_initialize();
  
#line 106
  return ImActorModelDroidkitBserUtilArrayUtils_indexOfWithNSObjectArray_withId_(array, value) != -1;
}


#line 113
jint ImActorModelDroidkitBserUtilArrayUtils_indexOfWithNSObjectArray_withId_(IOSObjectArray *array, id value) {
  ImActorModelDroidkitBserUtilArrayUtils_initialize();
  
#line 114
  for (jint i = 0; i < ((IOSObjectArray *) nil_chk(array))->size_; i++) {
    if (IOSObjectArray_Get(array, i) == nil) {
      if (value == nil) return i;
    }
    else {
      
#line 118
      if (value != nil && [nil_chk(IOSObjectArray_Get(array, i)) isEqual:value]) return i;
    }
  }
  return -1;
}


#line 127
jboolean ImActorModelDroidkitBserUtilArrayUtils_containsAllWithNSObjectArray_withNSObjectArray_(IOSObjectArray *array, IOSObjectArray *check) {
  ImActorModelDroidkitBserUtilArrayUtils_initialize();
  {
    IOSObjectArray *a__ =
#line 128
    check;
    id const *b__ = ((IOSObjectArray *) nil_chk(a__))->buffer_;
    id const *e__ = b__ + a__->size_;
    while (b__ < e__) {
      id checkItem = *b__++;
      
#line 129
      if (!ImActorModelDroidkitBserUtilArrayUtils_containsWithNSObjectArray_withId_(array, checkItem)) {
        return NO;
      }
    }
  }
  
#line 133
  return YES;
}


#line 136
jboolean ImActorModelDroidkitBserUtilArrayUtils_containsWithIntArray_withInt_(IOSIntArray *array, jint value) {
  ImActorModelDroidkitBserUtilArrayUtils_initialize();
  {
    IOSIntArray *a__ =
#line 137
    array;
    jint const *b__ = ((IOSIntArray *) nil_chk(a__))->buffer_;
    jint const *e__ = b__ + a__->size_;
    while (b__ < e__) {
      jint element = *b__++;
      
#line 138
      if (element == value) {
        return YES;
      }
    }
  }
  
#line 142
  return NO;
}


#line 145
jlong ImActorModelDroidkitBserUtilArrayUtils_totalWithLongArray_(IOSLongArray *array) {
  ImActorModelDroidkitBserUtilArrayUtils_initialize();
  
#line 146
  jlong total = 0;
  {
    IOSLongArray *a__ =
#line 147
    array;
    jlong const *b__ = ((IOSLongArray *) nil_chk(a__))->buffer_;
    jlong const *e__ = b__ + a__->size_;
    while (b__ < e__) {
      jlong value = *b__++;
      
#line 148
      total += value;
    }
  }
  
#line 150
  return total;
}


#line 153
IOSIntArray *ImActorModelDroidkitBserUtilArrayUtils_appendIntWithIntArray_withInt_(IOSIntArray *cur, jint val) {
  ImActorModelDroidkitBserUtilArrayUtils_initialize();
  
#line 154
  if (cur == nil) {
    return [IOSIntArray newArrayWithInts:(jint[]){ val } count:1];
  }
  jint N = ((IOSIntArray *) nil_chk(cur))->size_;
  for (jint i = 0; i < N; i++) {
    if (IOSIntArray_Get(cur, i) == val) {
      return cur;
    }
  }
  IOSIntArray *ret = [IOSIntArray newArrayWithLength:N + 1];
  JavaLangSystem_arraycopyWithId_withInt_withId_withInt_withInt_(cur, 0, ret, 0, N);
  *IOSIntArray_GetRef(ret, N) = val;
  return ret;
}


#line 169
IOSIntArray *ImActorModelDroidkitBserUtilArrayUtils_removeIntWithIntArray_withInt_(IOSIntArray *cur, jint val) {
  ImActorModelDroidkitBserUtilArrayUtils_initialize();
  
#line 170
  if (cur == nil) {
    return nil;
  }
  jint N = ((IOSIntArray *) nil_chk(cur))->size_;
  for (jint i = 0; i < N; i++) {
    if (IOSIntArray_Get(cur, i) == val) {
      IOSIntArray *ret = [IOSIntArray newArrayWithLength:N - 1];
      if (i > 0) {
        JavaLangSystem_arraycopyWithId_withInt_withId_withInt_withInt_(cur, 0, ret, 0, i);
      }
      if (i < (N - 1)) {
        JavaLangSystem_arraycopyWithId_withInt_withId_withInt_withInt_(cur, i + 1, ret, i, N - i - 1);
      }
      return ret;
    }
  }
  return cur;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ImActorModelDroidkitBserUtilArrayUtils)
