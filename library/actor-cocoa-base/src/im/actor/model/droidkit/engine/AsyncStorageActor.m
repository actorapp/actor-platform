//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/ex3ndr/Develop/actor-model/library/actor-cocoa-base/build/java/im/actor/model/droidkit/engine/AsyncStorageActor.java
//


#include "IOSClass.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "im/actor/model/droidkit/actors/Actor.h"
#include "im/actor/model/droidkit/bser/Bser.h"
#include "im/actor/model/droidkit/bser/BserCreator.h"
#include "im/actor/model/droidkit/bser/BserObject.h"
#include "im/actor/model/droidkit/engine/AsyncStorageActor.h"
#include "im/actor/model/droidkit/engine/ListEngineDisplayLoadCallback.h"
#include "im/actor/model/droidkit/engine/ListEngineItem.h"
#include "im/actor/model/droidkit/engine/ListEngineRecord.h"
#include "im/actor/model/droidkit/engine/ListStorageDisplayEx.h"
#include "java/io/IOException.h"
#include "java/lang/Long.h"
#include "java/util/ArrayList.h"
#include "java/util/List.h"

@interface DKAsyncStorageActor () {
 @public
  id<DKListStorageDisplayEx> storage_;
  id<BSBserCreator> creator_;
}

- (void)callCallbackWithDKListEngineDisplayLoadCallback:(id<DKListEngineDisplayLoadCallback>)callback
                                       withJavaUtilList:(id<JavaUtilList>)res;

- (JavaUtilArrayList *)convertListWithJavaUtilList:(id<JavaUtilList>)records;

@end

J2OBJC_FIELD_SETTER(DKAsyncStorageActor, storage_, id<DKListStorageDisplayEx>)
J2OBJC_FIELD_SETTER(DKAsyncStorageActor, creator_, id<BSBserCreator>)

__attribute__((unused)) static void DKAsyncStorageActor_callCallbackWithDKListEngineDisplayLoadCallback_withJavaUtilList_(DKAsyncStorageActor *self, id<DKListEngineDisplayLoadCallback> callback, id<JavaUtilList> res);

__attribute__((unused)) static JavaUtilArrayList *DKAsyncStorageActor_convertListWithJavaUtilList_(DKAsyncStorageActor *self, id<JavaUtilList> records);

@interface DKAsyncStorageActor_AddOrUpdate () {
 @public
  id<JavaUtilList> items_;
}

@end

J2OBJC_FIELD_SETTER(DKAsyncStorageActor_AddOrUpdate, items_, id<JavaUtilList>)

@interface DKAsyncStorageActor_Replace () {
 @public
  id<JavaUtilList> items_;
}

@end

J2OBJC_FIELD_SETTER(DKAsyncStorageActor_Replace, items_, id<JavaUtilList>)

@interface DKAsyncStorageActor_Remove () {
 @public
  IOSLongArray *keys_;
}

@end

J2OBJC_FIELD_SETTER(DKAsyncStorageActor_Remove, keys_, IOSLongArray *)

@interface DKAsyncStorageActor_LoadItem () {
 @public
  jlong key_;
  id<DKAsyncStorageActor_LoadItemCallback> callback_;
}

@end

J2OBJC_FIELD_SETTER(DKAsyncStorageActor_LoadItem, callback_, id<DKAsyncStorageActor_LoadItemCallback>)

@interface DKAsyncStorageActor_LoadCount () {
 @public
  id<DKAsyncStorageActor_LoadCountCallback> callback_;
}

@end

J2OBJC_FIELD_SETTER(DKAsyncStorageActor_LoadCount, callback_, id<DKAsyncStorageActor_LoadCountCallback>)

@interface DKAsyncStorageActor_LoadHead () {
 @public
  id<DKAsyncStorageActor_LoadItemCallback> callback_;
}

@end

J2OBJC_FIELD_SETTER(DKAsyncStorageActor_LoadHead, callback_, id<DKAsyncStorageActor_LoadItemCallback>)

@interface DKAsyncStorageActor_LoadForward () {
 @public
  NSString *query_;
  JavaLangLong *topSortKey_;
  jint limit_;
  id<DKListEngineDisplayLoadCallback> callback_;
}

@end

J2OBJC_FIELD_SETTER(DKAsyncStorageActor_LoadForward, query_, NSString *)
J2OBJC_FIELD_SETTER(DKAsyncStorageActor_LoadForward, topSortKey_, JavaLangLong *)
J2OBJC_FIELD_SETTER(DKAsyncStorageActor_LoadForward, callback_, id<DKListEngineDisplayLoadCallback>)

@interface DKAsyncStorageActor_LoadBackward () {
 @public
  NSString *query_;
  JavaLangLong *topSortKey_;
  jint limit_;
  id<DKListEngineDisplayLoadCallback> callback_;
}

@end

J2OBJC_FIELD_SETTER(DKAsyncStorageActor_LoadBackward, query_, NSString *)
J2OBJC_FIELD_SETTER(DKAsyncStorageActor_LoadBackward, topSortKey_, JavaLangLong *)
J2OBJC_FIELD_SETTER(DKAsyncStorageActor_LoadBackward, callback_, id<DKListEngineDisplayLoadCallback>)

@interface DKAsyncStorageActor_LoadCenter () {
 @public
  JavaLangLong *centerSortKey_;
  jint limit_;
  id<DKListEngineDisplayLoadCallback> callback_;
}

@end

J2OBJC_FIELD_SETTER(DKAsyncStorageActor_LoadCenter, centerSortKey_, JavaLangLong *)
J2OBJC_FIELD_SETTER(DKAsyncStorageActor_LoadCenter, callback_, id<DKListEngineDisplayLoadCallback>)

@implementation DKAsyncStorageActor

- (instancetype)initWithDKListStorageDisplayEx:(id<DKListStorageDisplayEx>)storage
                             withBSBserCreator:(id<BSBserCreator>)creator {
  DKAsyncStorageActor_initWithDKListStorageDisplayEx_withBSBserCreator_(self, storage, creator);
  return self;
}

- (void)addOrUpdateWithJavaUtilList:(id<JavaUtilList>)items {
  if ([((id<JavaUtilList>) nil_chk(items)) size] == 1) {
    BSBserObject<DKListEngineItem> *item = [items getWithInt:0];
    [((id<DKListStorageDisplayEx>) nil_chk(storage_)) updateOrAddWithDKListEngineRecord:new_DKListEngineRecord_initWithLong_withLong_withNSString_withByteArray_([((BSBserObject<DKListEngineItem> *) nil_chk(item)) getEngineId], [item getEngineSort], [item getEngineSearch], [item toByteArray])];
  }
  else if ([items size] > 0) {
    id<JavaUtilList> updated = new_JavaUtilArrayList_init();
    for (BSBserObject<DKListEngineItem> * __strong i in items) {
      [updated addWithId:new_DKListEngineRecord_initWithLong_withLong_withNSString_withByteArray_([((BSBserObject<DKListEngineItem> *) nil_chk(i)) getEngineId], [i getEngineSort], [i getEngineSearch], [i toByteArray])];
    }
    [((id<DKListStorageDisplayEx>) nil_chk(storage_)) updateOrAddWithJavaUtilList:updated];
  }
}

- (void)replaceWithJavaUtilList:(id<JavaUtilList>)items {
  id<JavaUtilList> updated = new_JavaUtilArrayList_init();
  for (BSBserObject<DKListEngineItem> * __strong i in nil_chk(items)) {
    [updated addWithId:new_DKListEngineRecord_initWithLong_withLong_withNSString_withByteArray_([((BSBserObject<DKListEngineItem> *) nil_chk(i)) getEngineId], [i getEngineSort], [i getEngineSearch], [i toByteArray])];
  }
  [((id<DKListStorageDisplayEx>) nil_chk(storage_)) clear];
  [storage_ updateOrAddWithJavaUtilList:updated];
}

- (void)removeWithLongArray:(IOSLongArray *)keys {
  if (((IOSLongArray *) nil_chk(keys))->size_ == 1) {
    [((id<DKListStorageDisplayEx>) nil_chk(storage_)) delete__WithLong:IOSLongArray_Get(keys, 0)];
  }
  else if (keys->size_ > 0) {
    [((id<DKListStorageDisplayEx>) nil_chk(storage_)) delete__WithLongArray:keys];
  }
}

- (void)clear {
  [((id<DKListStorageDisplayEx>) nil_chk(storage_)) clear];
}

- (void)loadItemWithLong:(jlong)key
withDKAsyncStorageActor_LoadItemCallback:(id<DKAsyncStorageActor_LoadItemCallback>)callback {
  DKListEngineRecord *record = [((id<DKListStorageDisplayEx>) nil_chk(storage_)) loadItemWithLong:key];
  if (record != nil) {
    @try {
      BSBserObject<DKListEngineItem> *res = ((BSBserObject<DKListEngineItem> *) BSBser_parseWithBSBserObject_withByteArray_([((id<BSBserCreator>) nil_chk(creator_)) createInstance], [record getData]));
      [((id<DKAsyncStorageActor_LoadItemCallback>) nil_chk(callback)) onLoadedWithBSBserObject:res];
    }
    @catch (JavaIoIOException *e) {
      [((JavaIoIOException *) nil_chk(e)) printStackTrace];
      [((id<DKAsyncStorageActor_LoadItemCallback>) nil_chk(callback)) onLoadedWithBSBserObject:nil];
    }
  }
  else {
    [((id<DKAsyncStorageActor_LoadItemCallback>) nil_chk(callback)) onLoadedWithBSBserObject:nil];
  }
}

- (void)loadHeadWithDKAsyncStorageActor_LoadItemCallback:(id<DKAsyncStorageActor_LoadItemCallback>)callback {
  id<JavaUtilList> records = [((id<DKListStorageDisplayEx>) nil_chk(storage_)) loadForwardWithJavaLangLong:nil withInt:1];
  if ([((id<JavaUtilList>) nil_chk(records)) size] != 1) {
    [((id<DKAsyncStorageActor_LoadItemCallback>) nil_chk(callback)) onLoadedWithBSBserObject:nil];
    return;
  }
  DKListEngineRecord *record = [records getWithInt:0];
  @try {
    [((id<DKAsyncStorageActor_LoadItemCallback>) nil_chk(callback)) onLoadedWithBSBserObject:BSBser_parseWithBSBserObject_withByteArray_([((id<BSBserCreator>) nil_chk(creator_)) createInstance], [((DKListEngineRecord *) nil_chk(record)) getData])];
  }
  @catch (JavaIoIOException *e) {
    [((JavaIoIOException *) nil_chk(e)) printStackTrace];
    [((id<DKAsyncStorageActor_LoadItemCallback>) nil_chk(callback)) onLoadedWithBSBserObject:nil];
  }
}

- (void)loadCountWithDKAsyncStorageActor_LoadCountCallback:(id<DKAsyncStorageActor_LoadCountCallback>)callback {
  [((id<DKAsyncStorageActor_LoadCountCallback>) nil_chk(callback)) onLoadedWithInt:[((id<DKListStorageDisplayEx>) nil_chk(storage_)) getCount]];
}

- (void)loadForwardWithNSString:(NSString *)query
               withJavaLangLong:(JavaLangLong *)topSortKey
                        withInt:(jint)limit
withDKListEngineDisplayLoadCallback:(id<DKListEngineDisplayLoadCallback>)callback {
  JavaUtilArrayList *res;
  if (query == nil) {
    res = DKAsyncStorageActor_convertListWithJavaUtilList_(self, [((id<DKListStorageDisplayEx>) nil_chk(storage_)) loadForwardWithJavaLangLong:topSortKey withInt:limit]);
  }
  else {
    res = DKAsyncStorageActor_convertListWithJavaUtilList_(self, [((id<DKListStorageDisplayEx>) nil_chk(storage_)) loadForwardWithNSString:query withJavaLangLong:topSortKey withInt:limit]);
  }
  DKAsyncStorageActor_callCallbackWithDKListEngineDisplayLoadCallback_withJavaUtilList_(self, callback, res);
}

- (void)loadBackwardWithNSString:(NSString *)query
                withJavaLangLong:(JavaLangLong *)topSortKey
                         withInt:(jint)limit
withDKListEngineDisplayLoadCallback:(id<DKListEngineDisplayLoadCallback>)callback {
  JavaUtilArrayList *res;
  if (query == nil) {
    res = DKAsyncStorageActor_convertListWithJavaUtilList_(self, [((id<DKListStorageDisplayEx>) nil_chk(storage_)) loadBackwardWithJavaLangLong:topSortKey withInt:limit]);
  }
  else {
    res = DKAsyncStorageActor_convertListWithJavaUtilList_(self, [((id<DKListStorageDisplayEx>) nil_chk(storage_)) loadBackwardWithNSString:query withJavaLangLong:topSortKey withInt:limit]);
  }
  DKAsyncStorageActor_callCallbackWithDKListEngineDisplayLoadCallback_withJavaUtilList_(self, callback, res);
}

- (void)loadCenterWithJavaLangLong:(JavaLangLong *)centerSortKey
                           withInt:(jint)limit
withDKListEngineDisplayLoadCallback:(id<DKListEngineDisplayLoadCallback>)callback {
  JavaUtilArrayList *res;
  res = DKAsyncStorageActor_convertListWithJavaUtilList_(self, [((id<DKListStorageDisplayEx>) nil_chk(storage_)) loadCenterWithJavaLangLong:centerSortKey withInt:limit]);
  DKAsyncStorageActor_callCallbackWithDKListEngineDisplayLoadCallback_withJavaUtilList_(self, callback, res);
}

- (void)callCallbackWithDKListEngineDisplayLoadCallback:(id<DKListEngineDisplayLoadCallback>)callback
                                       withJavaUtilList:(id<JavaUtilList>)res {
  DKAsyncStorageActor_callCallbackWithDKListEngineDisplayLoadCallback_withJavaUtilList_(self, callback, res);
}

- (JavaUtilArrayList *)convertListWithJavaUtilList:(id<JavaUtilList>)records {
  return DKAsyncStorageActor_convertListWithJavaUtilList_(self, records);
}

- (void)onReceiveWithId:(id)message {
  if ([message isKindOfClass:[DKAsyncStorageActor_AddOrUpdate class]]) {
    [self addOrUpdateWithJavaUtilList:[((DKAsyncStorageActor_AddOrUpdate *) nil_chk(((DKAsyncStorageActor_AddOrUpdate *) check_class_cast(message, [DKAsyncStorageActor_AddOrUpdate class])))) getItems]];
  }
  else if ([message isKindOfClass:[DKAsyncStorageActor_Remove class]]) {
    [self removeWithLongArray:[((DKAsyncStorageActor_Remove *) nil_chk(((DKAsyncStorageActor_Remove *) check_class_cast(message, [DKAsyncStorageActor_Remove class])))) getKeys]];
  }
  else if ([message isKindOfClass:[DKAsyncStorageActor_Clear class]]) {
    [self clear];
  }
  else if ([message isKindOfClass:[DKAsyncStorageActor_Replace class]]) {
    [self replaceWithJavaUtilList:[((DKAsyncStorageActor_Replace *) nil_chk(((DKAsyncStorageActor_Replace *) check_class_cast(message, [DKAsyncStorageActor_Replace class])))) getItems]];
  }
  else if ([message isKindOfClass:[DKAsyncStorageActor_LoadItem class]]) {
    [self loadItemWithLong:[((DKAsyncStorageActor_LoadItem *) nil_chk(((DKAsyncStorageActor_LoadItem *) check_class_cast(message, [DKAsyncStorageActor_LoadItem class])))) getKey] withDKAsyncStorageActor_LoadItemCallback:[((DKAsyncStorageActor_LoadItem *) nil_chk(((DKAsyncStorageActor_LoadItem *) check_class_cast(message, [DKAsyncStorageActor_LoadItem class])))) getCallback]];
  }
  else if ([message isKindOfClass:[DKAsyncStorageActor_LoadCount class]]) {
    [self loadCountWithDKAsyncStorageActor_LoadCountCallback:[((DKAsyncStorageActor_LoadCount *) nil_chk(((DKAsyncStorageActor_LoadCount *) check_class_cast(message, [DKAsyncStorageActor_LoadCount class])))) getCallback]];
  }
  else if ([message isKindOfClass:[DKAsyncStorageActor_LoadHead class]]) {
    [self loadHeadWithDKAsyncStorageActor_LoadItemCallback:[((DKAsyncStorageActor_LoadHead *) nil_chk(((DKAsyncStorageActor_LoadHead *) check_class_cast(message, [DKAsyncStorageActor_LoadHead class])))) getCallback]];
  }
  else if ([message isKindOfClass:[DKAsyncStorageActor_LoadForward class]]) {
    [self loadForwardWithNSString:[((DKAsyncStorageActor_LoadForward *) nil_chk(((DKAsyncStorageActor_LoadForward *) check_class_cast(message, [DKAsyncStorageActor_LoadForward class])))) getQuery] withJavaLangLong:[((DKAsyncStorageActor_LoadForward *) nil_chk(((DKAsyncStorageActor_LoadForward *) check_class_cast(message, [DKAsyncStorageActor_LoadForward class])))) getTopSortKey] withInt:[((DKAsyncStorageActor_LoadForward *) nil_chk(((DKAsyncStorageActor_LoadForward *) check_class_cast(message, [DKAsyncStorageActor_LoadForward class])))) getLimit] withDKListEngineDisplayLoadCallback:[((DKAsyncStorageActor_LoadForward *) nil_chk(((DKAsyncStorageActor_LoadForward *) check_class_cast(message, [DKAsyncStorageActor_LoadForward class])))) getCallback]];
  }
  else if ([message isKindOfClass:[DKAsyncStorageActor_LoadBackward class]]) {
    [self loadBackwardWithNSString:[((DKAsyncStorageActor_LoadBackward *) nil_chk(((DKAsyncStorageActor_LoadBackward *) check_class_cast(message, [DKAsyncStorageActor_LoadBackward class])))) getQuery] withJavaLangLong:[((DKAsyncStorageActor_LoadBackward *) nil_chk(((DKAsyncStorageActor_LoadBackward *) check_class_cast(message, [DKAsyncStorageActor_LoadBackward class])))) getTopSortKey] withInt:[((DKAsyncStorageActor_LoadBackward *) nil_chk(((DKAsyncStorageActor_LoadBackward *) check_class_cast(message, [DKAsyncStorageActor_LoadBackward class])))) getLimit] withDKListEngineDisplayLoadCallback:[((DKAsyncStorageActor_LoadBackward *) nil_chk(((DKAsyncStorageActor_LoadBackward *) check_class_cast(message, [DKAsyncStorageActor_LoadBackward class])))) getCallback]];
  }
  else if ([message isKindOfClass:[DKAsyncStorageActor_LoadCenter class]]) {
    [self loadCenterWithJavaLangLong:[((DKAsyncStorageActor_LoadCenter *) nil_chk(((DKAsyncStorageActor_LoadCenter *) check_class_cast(message, [DKAsyncStorageActor_LoadCenter class])))) getCenterSortKey] withInt:[((DKAsyncStorageActor_LoadCenter *) nil_chk(((DKAsyncStorageActor_LoadCenter *) check_class_cast(message, [DKAsyncStorageActor_LoadCenter class])))) getLimit] withDKListEngineDisplayLoadCallback:[((DKAsyncStorageActor_LoadCenter *) nil_chk(((DKAsyncStorageActor_LoadCenter *) check_class_cast(message, [DKAsyncStorageActor_LoadCenter class])))) getCallback]];
  }
  else {
    [self dropWithId:message];
  }
}

@end

void DKAsyncStorageActor_initWithDKListStorageDisplayEx_withBSBserCreator_(DKAsyncStorageActor *self, id<DKListStorageDisplayEx> storage, id<BSBserCreator> creator) {
  (void) DKActor_init(self);
  self->storage_ = storage;
  self->creator_ = creator;
}

DKAsyncStorageActor *new_DKAsyncStorageActor_initWithDKListStorageDisplayEx_withBSBserCreator_(id<DKListStorageDisplayEx> storage, id<BSBserCreator> creator) {
  DKAsyncStorageActor *self = [DKAsyncStorageActor alloc];
  DKAsyncStorageActor_initWithDKListStorageDisplayEx_withBSBserCreator_(self, storage, creator);
  return self;
}

void DKAsyncStorageActor_callCallbackWithDKListEngineDisplayLoadCallback_withJavaUtilList_(DKAsyncStorageActor *self, id<DKListEngineDisplayLoadCallback> callback, id<JavaUtilList> res) {
  if ([((id<JavaUtilList>) nil_chk(res)) size] == 0) {
    [((id<DKListEngineDisplayLoadCallback>) nil_chk(callback)) onLoadedWithJavaUtilList:res withLong:0 withLong:0];
  }
  else {
    jlong topSort, bottomSort;
    topSort = bottomSort = [((BSBserObject<DKListEngineItem> *) nil_chk([res getWithInt:0])) getEngineSort];
    for (BSBserObject<DKListEngineItem> * __strong t in res) {
      jlong sort = [((BSBserObject<DKListEngineItem> *) nil_chk(t)) getEngineSort];
      if (topSort < sort) {
        topSort = sort;
      }
      if (bottomSort > sort) {
        bottomSort = sort;
      }
    }
    [((id<DKListEngineDisplayLoadCallback>) nil_chk(callback)) onLoadedWithJavaUtilList:res withLong:topSort withLong:bottomSort];
  }
}

JavaUtilArrayList *DKAsyncStorageActor_convertListWithJavaUtilList_(DKAsyncStorageActor *self, id<JavaUtilList> records) {
  JavaUtilArrayList *res = new_JavaUtilArrayList_init();
  for (DKListEngineRecord * __strong record in nil_chk(records)) {
    @try {
      BSBserObject<DKListEngineItem> *loaded = ((BSBserObject<DKListEngineItem> *) BSBser_parseWithBSBserObject_withByteArray_([((id<BSBserCreator>) nil_chk(self->creator_)) createInstance], [((DKListEngineRecord *) nil_chk(record)) getData]));
      [res addWithId:loaded];
    }
    @catch (JavaIoIOException *e) {
      [((JavaIoIOException *) nil_chk(e)) printStackTrace];
    }
  }
  return res;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(DKAsyncStorageActor)

@implementation DKAsyncStorageActor_AddOrUpdate

- (instancetype)initWithJavaUtilList:(id<JavaUtilList>)items {
  DKAsyncStorageActor_AddOrUpdate_initWithJavaUtilList_(self, items);
  return self;
}

- (id<JavaUtilList>)getItems {
  return items_;
}

@end

void DKAsyncStorageActor_AddOrUpdate_initWithJavaUtilList_(DKAsyncStorageActor_AddOrUpdate *self, id<JavaUtilList> items) {
  (void) NSObject_init(self);
  self->items_ = items;
}

DKAsyncStorageActor_AddOrUpdate *new_DKAsyncStorageActor_AddOrUpdate_initWithJavaUtilList_(id<JavaUtilList> items) {
  DKAsyncStorageActor_AddOrUpdate *self = [DKAsyncStorageActor_AddOrUpdate alloc];
  DKAsyncStorageActor_AddOrUpdate_initWithJavaUtilList_(self, items);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(DKAsyncStorageActor_AddOrUpdate)

@implementation DKAsyncStorageActor_Replace

- (instancetype)initWithJavaUtilList:(id<JavaUtilList>)items {
  DKAsyncStorageActor_Replace_initWithJavaUtilList_(self, items);
  return self;
}

- (id<JavaUtilList>)getItems {
  return items_;
}

@end

void DKAsyncStorageActor_Replace_initWithJavaUtilList_(DKAsyncStorageActor_Replace *self, id<JavaUtilList> items) {
  (void) NSObject_init(self);
  self->items_ = items;
}

DKAsyncStorageActor_Replace *new_DKAsyncStorageActor_Replace_initWithJavaUtilList_(id<JavaUtilList> items) {
  DKAsyncStorageActor_Replace *self = [DKAsyncStorageActor_Replace alloc];
  DKAsyncStorageActor_Replace_initWithJavaUtilList_(self, items);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(DKAsyncStorageActor_Replace)

@implementation DKAsyncStorageActor_Remove

- (instancetype)initWithLongArray:(IOSLongArray *)keys {
  DKAsyncStorageActor_Remove_initWithLongArray_(self, keys);
  return self;
}

- (IOSLongArray *)getKeys {
  return keys_;
}

@end

void DKAsyncStorageActor_Remove_initWithLongArray_(DKAsyncStorageActor_Remove *self, IOSLongArray *keys) {
  (void) NSObject_init(self);
  self->keys_ = keys;
}

DKAsyncStorageActor_Remove *new_DKAsyncStorageActor_Remove_initWithLongArray_(IOSLongArray *keys) {
  DKAsyncStorageActor_Remove *self = [DKAsyncStorageActor_Remove alloc];
  DKAsyncStorageActor_Remove_initWithLongArray_(self, keys);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(DKAsyncStorageActor_Remove)

@implementation DKAsyncStorageActor_Clear

- (instancetype)init {
  DKAsyncStorageActor_Clear_init(self);
  return self;
}

@end

void DKAsyncStorageActor_Clear_init(DKAsyncStorageActor_Clear *self) {
  (void) NSObject_init(self);
}

DKAsyncStorageActor_Clear *new_DKAsyncStorageActor_Clear_init() {
  DKAsyncStorageActor_Clear *self = [DKAsyncStorageActor_Clear alloc];
  DKAsyncStorageActor_Clear_init(self);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(DKAsyncStorageActor_Clear)

@implementation DKAsyncStorageActor_LoadItem

- (instancetype)initWithLong:(jlong)key
withDKAsyncStorageActor_LoadItemCallback:(id<DKAsyncStorageActor_LoadItemCallback>)callback {
  DKAsyncStorageActor_LoadItem_initWithLong_withDKAsyncStorageActor_LoadItemCallback_(self, key, callback);
  return self;
}

- (jlong)getKey {
  return key_;
}

- (id<DKAsyncStorageActor_LoadItemCallback>)getCallback {
  return callback_;
}

@end

void DKAsyncStorageActor_LoadItem_initWithLong_withDKAsyncStorageActor_LoadItemCallback_(DKAsyncStorageActor_LoadItem *self, jlong key, id<DKAsyncStorageActor_LoadItemCallback> callback) {
  (void) NSObject_init(self);
  self->key_ = key;
  self->callback_ = callback;
}

DKAsyncStorageActor_LoadItem *new_DKAsyncStorageActor_LoadItem_initWithLong_withDKAsyncStorageActor_LoadItemCallback_(jlong key, id<DKAsyncStorageActor_LoadItemCallback> callback) {
  DKAsyncStorageActor_LoadItem *self = [DKAsyncStorageActor_LoadItem alloc];
  DKAsyncStorageActor_LoadItem_initWithLong_withDKAsyncStorageActor_LoadItemCallback_(self, key, callback);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(DKAsyncStorageActor_LoadItem)

@implementation DKAsyncStorageActor_LoadCount

- (instancetype)initWithDKAsyncStorageActor_LoadCountCallback:(id<DKAsyncStorageActor_LoadCountCallback>)callback {
  DKAsyncStorageActor_LoadCount_initWithDKAsyncStorageActor_LoadCountCallback_(self, callback);
  return self;
}

- (id<DKAsyncStorageActor_LoadCountCallback>)getCallback {
  return callback_;
}

@end

void DKAsyncStorageActor_LoadCount_initWithDKAsyncStorageActor_LoadCountCallback_(DKAsyncStorageActor_LoadCount *self, id<DKAsyncStorageActor_LoadCountCallback> callback) {
  (void) NSObject_init(self);
  self->callback_ = callback;
}

DKAsyncStorageActor_LoadCount *new_DKAsyncStorageActor_LoadCount_initWithDKAsyncStorageActor_LoadCountCallback_(id<DKAsyncStorageActor_LoadCountCallback> callback) {
  DKAsyncStorageActor_LoadCount *self = [DKAsyncStorageActor_LoadCount alloc];
  DKAsyncStorageActor_LoadCount_initWithDKAsyncStorageActor_LoadCountCallback_(self, callback);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(DKAsyncStorageActor_LoadCount)

@implementation DKAsyncStorageActor_LoadHead

- (instancetype)initWithDKAsyncStorageActor_LoadItemCallback:(id<DKAsyncStorageActor_LoadItemCallback>)callback {
  DKAsyncStorageActor_LoadHead_initWithDKAsyncStorageActor_LoadItemCallback_(self, callback);
  return self;
}

- (id<DKAsyncStorageActor_LoadItemCallback>)getCallback {
  return callback_;
}

@end

void DKAsyncStorageActor_LoadHead_initWithDKAsyncStorageActor_LoadItemCallback_(DKAsyncStorageActor_LoadHead *self, id<DKAsyncStorageActor_LoadItemCallback> callback) {
  (void) NSObject_init(self);
  self->callback_ = callback;
}

DKAsyncStorageActor_LoadHead *new_DKAsyncStorageActor_LoadHead_initWithDKAsyncStorageActor_LoadItemCallback_(id<DKAsyncStorageActor_LoadItemCallback> callback) {
  DKAsyncStorageActor_LoadHead *self = [DKAsyncStorageActor_LoadHead alloc];
  DKAsyncStorageActor_LoadHead_initWithDKAsyncStorageActor_LoadItemCallback_(self, callback);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(DKAsyncStorageActor_LoadHead)

@implementation DKAsyncStorageActor_LoadForward

- (instancetype)initWithNSString:(NSString *)query
                withJavaLangLong:(JavaLangLong *)topSortKey
                         withInt:(jint)limit
withDKListEngineDisplayLoadCallback:(id<DKListEngineDisplayLoadCallback>)callback {
  DKAsyncStorageActor_LoadForward_initWithNSString_withJavaLangLong_withInt_withDKListEngineDisplayLoadCallback_(self, query, topSortKey, limit, callback);
  return self;
}

- (NSString *)getQuery {
  return query_;
}

- (JavaLangLong *)getTopSortKey {
  return topSortKey_;
}

- (jint)getLimit {
  return limit_;
}

- (id<DKListEngineDisplayLoadCallback>)getCallback {
  return callback_;
}

@end

void DKAsyncStorageActor_LoadForward_initWithNSString_withJavaLangLong_withInt_withDKListEngineDisplayLoadCallback_(DKAsyncStorageActor_LoadForward *self, NSString *query, JavaLangLong *topSortKey, jint limit, id<DKListEngineDisplayLoadCallback> callback) {
  (void) NSObject_init(self);
  self->query_ = query;
  self->topSortKey_ = topSortKey;
  self->limit_ = limit;
  self->callback_ = callback;
}

DKAsyncStorageActor_LoadForward *new_DKAsyncStorageActor_LoadForward_initWithNSString_withJavaLangLong_withInt_withDKListEngineDisplayLoadCallback_(NSString *query, JavaLangLong *topSortKey, jint limit, id<DKListEngineDisplayLoadCallback> callback) {
  DKAsyncStorageActor_LoadForward *self = [DKAsyncStorageActor_LoadForward alloc];
  DKAsyncStorageActor_LoadForward_initWithNSString_withJavaLangLong_withInt_withDKListEngineDisplayLoadCallback_(self, query, topSortKey, limit, callback);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(DKAsyncStorageActor_LoadForward)

@implementation DKAsyncStorageActor_LoadBackward

- (instancetype)initWithNSString:(NSString *)query
                withJavaLangLong:(JavaLangLong *)topSortKey
                         withInt:(jint)limit
withDKListEngineDisplayLoadCallback:(id<DKListEngineDisplayLoadCallback>)callback {
  DKAsyncStorageActor_LoadBackward_initWithNSString_withJavaLangLong_withInt_withDKListEngineDisplayLoadCallback_(self, query, topSortKey, limit, callback);
  return self;
}

- (NSString *)getQuery {
  return query_;
}

- (JavaLangLong *)getTopSortKey {
  return topSortKey_;
}

- (jint)getLimit {
  return limit_;
}

- (id<DKListEngineDisplayLoadCallback>)getCallback {
  return callback_;
}

@end

void DKAsyncStorageActor_LoadBackward_initWithNSString_withJavaLangLong_withInt_withDKListEngineDisplayLoadCallback_(DKAsyncStorageActor_LoadBackward *self, NSString *query, JavaLangLong *topSortKey, jint limit, id<DKListEngineDisplayLoadCallback> callback) {
  (void) NSObject_init(self);
  self->query_ = query;
  self->topSortKey_ = topSortKey;
  self->limit_ = limit;
  self->callback_ = callback;
}

DKAsyncStorageActor_LoadBackward *new_DKAsyncStorageActor_LoadBackward_initWithNSString_withJavaLangLong_withInt_withDKListEngineDisplayLoadCallback_(NSString *query, JavaLangLong *topSortKey, jint limit, id<DKListEngineDisplayLoadCallback> callback) {
  DKAsyncStorageActor_LoadBackward *self = [DKAsyncStorageActor_LoadBackward alloc];
  DKAsyncStorageActor_LoadBackward_initWithNSString_withJavaLangLong_withInt_withDKListEngineDisplayLoadCallback_(self, query, topSortKey, limit, callback);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(DKAsyncStorageActor_LoadBackward)

@implementation DKAsyncStorageActor_LoadCenter

- (instancetype)initWithJavaLangLong:(JavaLangLong *)centerSortKey
                             withInt:(jint)limit
 withDKListEngineDisplayLoadCallback:(id<DKListEngineDisplayLoadCallback>)callback {
  DKAsyncStorageActor_LoadCenter_initWithJavaLangLong_withInt_withDKListEngineDisplayLoadCallback_(self, centerSortKey, limit, callback);
  return self;
}

- (JavaLangLong *)getCenterSortKey {
  return centerSortKey_;
}

- (jint)getLimit {
  return limit_;
}

- (id<DKListEngineDisplayLoadCallback>)getCallback {
  return callback_;
}

@end

void DKAsyncStorageActor_LoadCenter_initWithJavaLangLong_withInt_withDKListEngineDisplayLoadCallback_(DKAsyncStorageActor_LoadCenter *self, JavaLangLong *centerSortKey, jint limit, id<DKListEngineDisplayLoadCallback> callback) {
  (void) NSObject_init(self);
  self->centerSortKey_ = centerSortKey;
  self->limit_ = limit;
  self->callback_ = callback;
}

DKAsyncStorageActor_LoadCenter *new_DKAsyncStorageActor_LoadCenter_initWithJavaLangLong_withInt_withDKListEngineDisplayLoadCallback_(JavaLangLong *centerSortKey, jint limit, id<DKListEngineDisplayLoadCallback> callback) {
  DKAsyncStorageActor_LoadCenter *self = [DKAsyncStorageActor_LoadCenter alloc];
  DKAsyncStorageActor_LoadCenter_initWithJavaLangLong_withInt_withDKListEngineDisplayLoadCallback_(self, centerSortKey, limit, callback);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(DKAsyncStorageActor_LoadCenter)

J2OBJC_INTERFACE_TYPE_LITERAL_SOURCE(DKAsyncStorageActor_LoadItemCallback)

J2OBJC_INTERFACE_TYPE_LITERAL_SOURCE(DKAsyncStorageActor_LoadCountCallback)
