//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/ex3ndr/Develop/actor-model/library/actor-cocoa-base/build/java/im/actor/model/entity/WrapperEntity.java
//


#include "IOSClass.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "im/actor/model/droidkit/bser/Bser.h"
#include "im/actor/model/droidkit/bser/BserObject.h"
#include "im/actor/model/droidkit/bser/BserValues.h"
#include "im/actor/model/droidkit/bser/BserWriter.h"
#include "im/actor/model/entity/WrapperEntity.h"
#include "java/io/IOException.h"

#pragma clang diagnostic ignored "-Wprotocol"
#pragma clang diagnostic ignored "-Wincomplete-implementation"

@interface AMWrapperEntity () {
 @public
  jint recordField_;
  BSBserObject *wrapped_;
}

@end

J2OBJC_FIELD_SETTER(AMWrapperEntity, wrapped_, id)

@implementation AMWrapperEntity

- (instancetype)initWithInt:(jint)recordField {
  AMWrapperEntity_initWithInt_(self, recordField);
  return self;
}

- (instancetype)initWithInt:(jint)recordField
           withBSBserObject:(BSBserObject *)wrapped {
  AMWrapperEntity_initWithInt_withBSBserObject_(self, recordField, wrapped);
  return self;
}

- (id)getWrapped {
  return wrapped_;
}

- (id)toWrapped {
  return wrapped_;
}

- (void)setWrappedWithBSBserObject:(BSBserObject *)wrapped {
  self->wrapped_ = wrapped;
  [self applyWrappedWithBSBserObject:wrapped];
}

- (void)applyWrappedWithBSBserObject:(BSBserObject *)wrapped {
}

- (void)parseWithBSBserValues:(BSBserValues *)values {
  IOSByteArray *rawWrapper = [((BSBserValues *) nil_chk(values)) optBytesWithInt:recordField_];
  if (rawWrapper != nil) {
    wrapped_ = BSBser_parseWithBSBserObject_withByteArray_([self createInstance], rawWrapper);
    [self applyWrappedWithBSBserObject:wrapped_];
  }
}

- (void)serializeWithBSBserWriter:(BSBserWriter *)writer {
  if (wrapped_ != nil) {
    [((BSBserWriter *) nil_chk(writer)) writeBytesWithInt:recordField_ withByteArray:[wrapped_ toByteArray]];
  }
}

@end

void AMWrapperEntity_initWithInt_(AMWrapperEntity *self, jint recordField) {
  (void) BSBserObject_init(self);
  self->recordField_ = recordField;
}

void AMWrapperEntity_initWithInt_withBSBserObject_(AMWrapperEntity *self, jint recordField, BSBserObject *wrapped) {
  (void) AMWrapperEntity_initWithInt_(self, recordField);
  self->wrapped_ = wrapped;
  [self applyWrappedWithBSBserObject:wrapped];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(AMWrapperEntity)
