//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/ex3ndr/Develop/actor-model/library/actor-cocoa-base/build/java/im/actor/model/entity/Group.java
//


#include "IOSClass.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "im/actor/model/droidkit/bser/Bser.h"
#include "im/actor/model/droidkit/bser/BserObject.h"
#include "im/actor/model/droidkit/bser/BserValues.h"
#include "im/actor/model/droidkit/bser/BserWriter.h"
#include "im/actor/model/entity/Avatar.h"
#include "im/actor/model/entity/Group.h"
#include "im/actor/model/entity/GroupMember.h"
#include "im/actor/model/entity/Peer.h"
#include "im/actor/model/entity/PeerType.h"
#include "java/io/IOException.h"
#include "java/util/ArrayList.h"
#include "java/util/List.h"

@interface AMGroup () {
 @public
  jint groupId_;
  jlong accessHash_;
  NSString *title_;
  AMAvatar *avatar_;
  jint adminId_;
  jboolean isMember__;
  id<JavaUtilList> members_;
}

- (instancetype)init;

@end

J2OBJC_FIELD_SETTER(AMGroup, title_, NSString *)
J2OBJC_FIELD_SETTER(AMGroup, avatar_, AMAvatar *)
J2OBJC_FIELD_SETTER(AMGroup, members_, id<JavaUtilList>)

__attribute__((unused)) static void AMGroup_init(AMGroup *self);

__attribute__((unused)) static AMGroup *new_AMGroup_init() NS_RETURNS_RETAINED;

@implementation AMGroup

+ (AMGroup *)fromBytesWithByteArray:(IOSByteArray *)data {
  return AMGroup_fromBytesWithByteArray_(data);
}

- (instancetype)initWithInt:(jint)groupId
                   withLong:(jlong)accessHash
               withNSString:(NSString *)title
               withAMAvatar:(AMAvatar *)avatar
           withJavaUtilList:(id<JavaUtilList>)members
                    withInt:(jint)adminId
                withBoolean:(jboolean)isMember {
  AMGroup_initWithInt_withLong_withNSString_withAMAvatar_withJavaUtilList_withInt_withBoolean_(self, groupId, accessHash, title, avatar, members, adminId, isMember);
  return self;
}

- (instancetype)init {
  AMGroup_init(self);
  return self;
}

- (AMPeer *)peer {
  return new_AMPeer_initWithAMPeerTypeEnum_withInt_(AMPeerTypeEnum_get_GROUP(), groupId_);
}

- (jint)getGroupId {
  return groupId_;
}

- (jlong)getAccessHash {
  return accessHash_;
}

- (NSString *)getTitle {
  return title_;
}

- (AMAvatar *)getAvatar {
  return avatar_;
}

- (id<JavaUtilList>)getMembers {
  return members_;
}

- (jint)getAdminId {
  return adminId_;
}

- (jboolean)isMember {
  return isMember__;
}

- (AMGroup *)changeMemberWithBoolean:(jboolean)isMember {
  return new_AMGroup_initWithInt_withLong_withNSString_withAMAvatar_withJavaUtilList_withInt_withBoolean_(groupId_, accessHash_, title_, avatar_, members_, adminId_, isMember);
}

- (AMGroup *)clearMembers {
  return new_AMGroup_initWithInt_withLong_withNSString_withAMAvatar_withJavaUtilList_withInt_withBoolean_(groupId_, accessHash_, title_, avatar_, new_JavaUtilArrayList_init(), adminId_, isMember__);
}

- (AMGroup *)removeMemberWithInt:(jint)uid {
  JavaUtilArrayList *nMembers = new_JavaUtilArrayList_init();
  for (AMGroupMember * __strong member in nil_chk(members_)) {
    if ([((AMGroupMember *) nil_chk(member)) getUid] != uid) {
      [nMembers addWithId:member];
    }
  }
  return new_AMGroup_initWithInt_withLong_withNSString_withAMAvatar_withJavaUtilList_withInt_withBoolean_(groupId_, accessHash_, title_, avatar_, nMembers, adminId_, isMember__);
}

- (AMGroup *)addMemberWithInt:(jint)uid
                      withInt:(jint)inviterUid
                     withLong:(jlong)inviteDate
                  withBoolean:(jboolean)isAdmin {
  JavaUtilArrayList *nMembers = new_JavaUtilArrayList_init();
  for (AMGroupMember * __strong member in nil_chk(members_)) {
    if ([((AMGroupMember *) nil_chk(member)) getUid] != uid) {
      [nMembers addWithId:member];
    }
  }
  [nMembers addWithId:new_AMGroupMember_initWithInt_withInt_withLong_withBoolean_(uid, inviterUid, inviteDate, isAdmin)];
  return new_AMGroup_initWithInt_withLong_withNSString_withAMAvatar_withJavaUtilList_withInt_withBoolean_(groupId_, accessHash_, title_, avatar_, nMembers, adminId_, isMember__);
}

- (AMGroup *)editTitleWithNSString:(NSString *)title {
  return new_AMGroup_initWithInt_withLong_withNSString_withAMAvatar_withJavaUtilList_withInt_withBoolean_(groupId_, accessHash_, title, avatar_, members_, adminId_, isMember__);
}

- (AMGroup *)editAvatarWithAMAvatar:(AMAvatar *)avatar {
  return new_AMGroup_initWithInt_withLong_withNSString_withAMAvatar_withJavaUtilList_withInt_withBoolean_(groupId_, accessHash_, title_, avatar, members_, adminId_, isMember__);
}

- (void)parseWithBSBserValues:(BSBserValues *)values {
  groupId_ = [((BSBserValues *) nil_chk(values)) getIntWithInt:1];
  accessHash_ = [values getLongWithInt:2];
  title_ = [values getStringWithInt:3];
  if ([values optBytesWithInt:4] != nil) {
    avatar_ = AMAvatar_fromBytesWithByteArray_([values getBytesWithInt:4]);
  }
  adminId_ = [values getIntWithInt:5];
  jint count = [values getRepeatedCountWithInt:6];
  if (count > 0) {
    JavaUtilArrayList *res = new_JavaUtilArrayList_init();
    for (jint i = 0; i < count; i++) {
      [res addWithId:new_AMGroupMember_init()];
    }
    members_ = [values getRepeatedObjWithInt:6 withJavaUtilList:res];
  }
  else {
    members_ = new_JavaUtilArrayList_init();
  }
  isMember__ = [values getBoolWithInt:7];
}

- (void)serializeWithBSBserWriter:(BSBserWriter *)writer {
  [((BSBserWriter *) nil_chk(writer)) writeIntWithInt:1 withInt:groupId_];
  [writer writeLongWithInt:2 withLong:accessHash_];
  [writer writeStringWithInt:3 withNSString:title_];
  if (avatar_ != nil) {
    [writer writeObjectWithInt:4 withBSBserObject:avatar_];
  }
  [writer writeIntWithInt:5 withInt:adminId_];
  [writer writeRepeatedObjWithInt:6 withJavaUtilList:members_];
  [writer writeBoolWithInt:7 withBoolean:isMember__];
}

- (jlong)getEngineId {
  return groupId_;
}

@end

AMGroup *AMGroup_fromBytesWithByteArray_(IOSByteArray *data) {
  AMGroup_initialize();
  return ((AMGroup *) BSBser_parseWithBSBserObject_withByteArray_(new_AMGroup_init(), data));
}

void AMGroup_initWithInt_withLong_withNSString_withAMAvatar_withJavaUtilList_withInt_withBoolean_(AMGroup *self, jint groupId, jlong accessHash, NSString *title, AMAvatar *avatar, id<JavaUtilList> members, jint adminId, jboolean isMember) {
  (void) BSBserObject_init(self);
  self->groupId_ = groupId;
  self->accessHash_ = accessHash;
  self->title_ = title;
  self->avatar_ = avatar;
  self->members_ = members;
  self->adminId_ = adminId;
  self->isMember__ = isMember;
}

AMGroup *new_AMGroup_initWithInt_withLong_withNSString_withAMAvatar_withJavaUtilList_withInt_withBoolean_(jint groupId, jlong accessHash, NSString *title, AMAvatar *avatar, id<JavaUtilList> members, jint adminId, jboolean isMember) {
  AMGroup *self = [AMGroup alloc];
  AMGroup_initWithInt_withLong_withNSString_withAMAvatar_withJavaUtilList_withInt_withBoolean_(self, groupId, accessHash, title, avatar, members, adminId, isMember);
  return self;
}

void AMGroup_init(AMGroup *self) {
  (void) BSBserObject_init(self);
}

AMGroup *new_AMGroup_init() {
  AMGroup *self = [AMGroup alloc];
  AMGroup_init(self);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(AMGroup)
