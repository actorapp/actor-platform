//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/ex3ndr/Develop/actor-model/library/actor-cocoa-base/build/java/im/actor/model/entity/User.java
//


#include "IOSClass.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "im/actor/model/api/Avatar.h"
#include "im/actor/model/api/ContactRecord.h"
#include "im/actor/model/api/ContactType.h"
#include "im/actor/model/api/Sex.h"
#include "im/actor/model/api/User.h"
#include "im/actor/model/droidkit/bser/BserObject.h"
#include "im/actor/model/droidkit/bser/BserValues.h"
#include "im/actor/model/droidkit/bser/BserWriter.h"
#include "im/actor/model/droidkit/bser/util/SparseArray.h"
#include "im/actor/model/entity/Avatar.h"
#include "im/actor/model/entity/ContactRecord.h"
#include "im/actor/model/entity/ContactRecordType.h"
#include "im/actor/model/entity/Peer.h"
#include "im/actor/model/entity/PeerType.h"
#include "im/actor/model/entity/Sex.h"
#include "im/actor/model/entity/User.h"
#include "im/actor/model/entity/WrapperEntity.h"
#include "java/io/IOException.h"
#include "java/lang/Boolean.h"
#include "java/lang/Long.h"
#include "java/util/ArrayList.h"
#include "java/util/List.h"

#define AMUser_RECORD_ID 10

@interface AMUser () {
 @public
  jint uid_;
  jlong accessHash_;
  NSString *name_;
  NSString *localName_;
  AMAvatar *avatar_;
  AMSexEnum *sex_;
  jboolean isBot__;
  id<JavaUtilList> records_;
}

@end

J2OBJC_FIELD_SETTER(AMUser, name_, NSString *)
J2OBJC_FIELD_SETTER(AMUser, localName_, NSString *)
J2OBJC_FIELD_SETTER(AMUser, avatar_, AMAvatar *)
J2OBJC_FIELD_SETTER(AMUser, sex_, AMSexEnum *)
J2OBJC_FIELD_SETTER(AMUser, records_, id<JavaUtilList>)

J2OBJC_STATIC_FIELD_GETTER(AMUser, RECORD_ID, jint)

@interface AMUser_ObsoleteContactRecord : BSBserObject {
 @public
  jint id__;
  jlong accessHash_;
  jint recordType_;
  NSString *recordData_;
  NSString *recordTitle_;
}

- (jint)getId;

- (jlong)getAccessHash;

- (jint)getRecordType;

- (NSString *)getRecordData;

- (NSString *)getRecordTitle;

- (void)parseWithBSBserValues:(BSBserValues *)values;

- (void)serializeWithBSBserWriter:(BSBserWriter *)writer;

- (instancetype)initWithAMUser:(AMUser *)outer$;

@end

J2OBJC_EMPTY_STATIC_INIT(AMUser_ObsoleteContactRecord)

J2OBJC_FIELD_SETTER(AMUser_ObsoleteContactRecord, recordData_, NSString *)
J2OBJC_FIELD_SETTER(AMUser_ObsoleteContactRecord, recordTitle_, NSString *)

__attribute__((unused)) static void AMUser_ObsoleteContactRecord_initWithAMUser_(AMUser_ObsoleteContactRecord *self, AMUser *outer$);

__attribute__((unused)) static AMUser_ObsoleteContactRecord *new_AMUser_ObsoleteContactRecord_initWithAMUser_(AMUser *outer$) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(AMUser_ObsoleteContactRecord)

@implementation AMUser

- (instancetype)initWithAPUser:(APUser *)wrappedUser {
  AMUser_initWithAPUser_(self, wrappedUser);
  return self;
}

- (instancetype)initWithByteArray:(IOSByteArray *)data {
  AMUser_initWithByteArray_(self, data);
  return self;
}

- (AMPeer *)peer {
  return new_AMPeer_initWithAMPeerTypeEnum_withInt_(AMPeerTypeEnum_get_PRIVATE(), uid_);
}

- (jint)getUid {
  return uid_;
}

- (jlong)getAccessHash {
  return accessHash_;
}

- (NSString *)getServerName {
  return name_;
}

- (NSString *)getLocalName {
  return localName_;
}

- (NSString *)getName {
  if (localName_ == nil) {
    return name_;
  }
  else {
    return localName_;
  }
}

- (AMAvatar *)getAvatar {
  return avatar_;
}

- (AMSexEnum *)getSex {
  return sex_;
}

- (id<JavaUtilList>)getRecords {
  return records_;
}

- (jboolean)isBot {
  return isBot__;
}

- (AMUser *)editNameWithNSString:(NSString *)name {
  APUser *w = [self getWrapped];
  APUser *res = new_APUser_initWithInt_withLong_withNSString_withNSString_withAPSexEnum_withAPAvatar_withJavaUtilList_withJavaLangBoolean_([((APUser *) nil_chk(w)) getId], [w getAccessHash], name, [w getLocalName], [w getSex], [w getAvatar], [w getContactInfo], [w isBot]);
  [res setUnmappedObjectsWithImActorModelDroidkitBserUtilSparseArray:[w getUnmappedObjects]];
  return new_AMUser_initWithAPUser_(res);
}

- (AMUser *)editLocalNameWithNSString:(NSString *)localName {
  APUser *w = [self getWrapped];
  APUser *res = new_APUser_initWithInt_withLong_withNSString_withNSString_withAPSexEnum_withAPAvatar_withJavaUtilList_withJavaLangBoolean_([((APUser *) nil_chk(w)) getId], [w getAccessHash], [w getName], localName, [w getSex], [w getAvatar], [w getContactInfo], [w isBot]);
  [res setUnmappedObjectsWithImActorModelDroidkitBserUtilSparseArray:[w getUnmappedObjects]];
  return new_AMUser_initWithAPUser_(res);
}

- (AMUser *)editAvatarWithAPAvatar:(APAvatar *)avatar {
  APUser *w = [self getWrapped];
  APUser *res = new_APUser_initWithInt_withLong_withNSString_withNSString_withAPSexEnum_withAPAvatar_withJavaUtilList_withJavaLangBoolean_([((APUser *) nil_chk(w)) getId], [w getAccessHash], [w getName], [w getLocalName], [w getSex], avatar, [w getContactInfo], [w isBot]);
  [res setUnmappedObjectsWithImActorModelDroidkitBserUtilSparseArray:[w getUnmappedObjects]];
  return new_AMUser_initWithAPUser_(res);
}

- (void)applyWrappedWithBSBserObject:(APUser *)wrapped {
  self->uid_ = [((APUser *) nil_chk(wrapped)) getId];
  self->accessHash_ = [wrapped getAccessHash];
  self->name_ = [wrapped getName];
  self->localName_ = [wrapped getLocalName];
  self->isBot__ = NO;
  if ([wrapped isBot] != nil) {
    self->isBot__ = [((JavaLangBoolean *) nil_chk([wrapped isBot])) booleanValue];
  }
  self->sex_ = AMSexEnum_get_UNKNOWN();
  if ([wrapped getSex] != nil) {
    switch ([[wrapped getSex] ordinal]) {
      case APSex_FEMALE:
      self->sex_ = AMSexEnum_get_FEMALE();
      break;
      case APSex_MALE:
      self->sex_ = AMSexEnum_get_MALE();
      break;
    }
  }
  self->records_ = new_JavaUtilArrayList_init();
  for (APContactRecord * __strong record in nil_chk([wrapped getContactInfo])) {
    if ([((APContactRecord *) nil_chk(record)) getType] == APContactTypeEnum_get_PHONE()) {
      [self->records_ addWithId:new_AMContactRecord_initWithAMContactRecordTypeEnum_withNSString_withNSString_(AMContactRecordTypeEnum_get_PHONE(), JreStrcat("@", [record getLongValue]), [record getTitle])];
    }
    else if ([record getType] == APContactTypeEnum_get_EMAIL()) {
      [self->records_ addWithId:new_AMContactRecord_initWithAMContactRecordTypeEnum_withNSString_withNSString_(AMContactRecordTypeEnum_get_EMAIL(), [record getStringValue], [record getTitle])];
    }
  }
  if ([wrapped getAvatar] != nil) {
    self->avatar_ = new_AMAvatar_initWithAPAvatar_([wrapped getAvatar]);
  }
}

- (void)parseWithBSBserValues:(BSBserValues *)values {
  if (![((BSBserValues *) nil_chk(values)) getBoolWithInt:8 withBoolean:NO]) {
    jint uid = [values getIntWithInt:1];
    jlong accessHash = [values getLongWithInt:2];
    NSString *name = [values getStringWithInt:3];
    NSString *localName = [values optStringWithInt:4];
    APSexEnum *sex = APSexEnum_get_UNKNOWN();
    switch ([AMSexEnum_fromValueWithInt_([values getIntWithInt:6]) ordinal]) {
      case AMSex_FEMALE:
      sex = APSexEnum_get_FEMALE();
      break;
      case AMSex_MALE:
      sex = APSexEnum_get_MALE();
      break;
    }
    APAvatar *avatar = new_APAvatar_init();
    IOSByteArray *a = [values optBytesWithInt:5];
    if (a != nil) {
      avatar = [new_AMAvatar_initWithByteArray_(a) toWrapped];
    }
    id<JavaUtilList> records = new_JavaUtilArrayList_init();
    jint count = [values getRepeatedCountWithInt:7];
    if (count > 0) {
      id<JavaUtilList> rec = new_JavaUtilArrayList_init();
      for (jint i = 0; i < count; i++) {
        [rec addWithId:new_AMUser_ObsoleteContactRecord_initWithAMUser_(self)];
      }
      rec = [values getRepeatedObjWithInt:7 withJavaUtilList:rec];
      for (AMUser_ObsoleteContactRecord * __strong o in nil_chk(rec)) {
        if ([((AMUser_ObsoleteContactRecord *) nil_chk(o)) getRecordType] == 0) {
          if ([((NSString *) nil_chk([o getRecordData])) isEqual:@"0"]) {
            continue;
          }
          [records addWithId:new_APContactRecord_initWithAPContactTypeEnum_withNSString_withJavaLangLong_withNSString_withNSString_(APContactTypeEnum_get_PHONE(), nil, JavaLangLong_valueOfWithLong_(JavaLangLong_parseLongWithNSString_([o getRecordData])), [o getRecordTitle], nil)];
        }
      }
    }
    [self setWrappedWithBSBserObject:new_APUser_initWithInt_withLong_withNSString_withNSString_withAPSexEnum_withAPAvatar_withJavaUtilList_withJavaLangBoolean_(uid, accessHash, name, localName, sex, avatar, records, JavaLangBoolean_valueOfWithBoolean_(NO))];
  }
  [super parseWithBSBserValues:values];
}

- (void)serializeWithBSBserWriter:(BSBserWriter *)writer {
  [((BSBserWriter *) nil_chk(writer)) writeBoolWithInt:8 withBoolean:YES];
  [super serializeWithBSBserWriter:writer];
}

- (jlong)getEngineId {
  return [self getUid];
}

- (APUser *)createInstance {
  return new_APUser_init();
}

@end

void AMUser_initWithAPUser_(AMUser *self, APUser *wrappedUser) {
  (void) AMWrapperEntity_initWithInt_withBSBserObject_(self, AMUser_RECORD_ID, wrappedUser);
}

AMUser *new_AMUser_initWithAPUser_(APUser *wrappedUser) {
  AMUser *self = [AMUser alloc];
  AMUser_initWithAPUser_(self, wrappedUser);
  return self;
}

void AMUser_initWithByteArray_(AMUser *self, IOSByteArray *data) {
  (void) AMWrapperEntity_initWithInt_withByteArray_(self, AMUser_RECORD_ID, data);
}

AMUser *new_AMUser_initWithByteArray_(IOSByteArray *data) {
  AMUser *self = [AMUser alloc];
  AMUser_initWithByteArray_(self, data);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(AMUser)

@implementation AMUser_ObsoleteContactRecord

- (jint)getId {
  return id__;
}

- (jlong)getAccessHash {
  return accessHash_;
}

- (jint)getRecordType {
  return recordType_;
}

- (NSString *)getRecordData {
  return recordData_;
}

- (NSString *)getRecordTitle {
  return recordTitle_;
}

- (void)parseWithBSBserValues:(BSBserValues *)values {
  id__ = [((BSBserValues *) nil_chk(values)) getIntWithInt:1];
  accessHash_ = [values getLongWithInt:2];
  recordType_ = [values getIntWithInt:3];
  recordData_ = [values getStringWithInt:4];
  recordTitle_ = [values getStringWithInt:5];
}

- (void)serializeWithBSBserWriter:(BSBserWriter *)writer {
  [((BSBserWriter *) nil_chk(writer)) writeIntWithInt:1 withInt:id__];
  [writer writeLongWithInt:2 withLong:accessHash_];
  [writer writeIntWithInt:3 withInt:recordType_];
  [writer writeStringWithInt:4 withNSString:recordData_];
  [writer writeStringWithInt:5 withNSString:recordTitle_];
}

- (instancetype)initWithAMUser:(AMUser *)outer$ {
  AMUser_ObsoleteContactRecord_initWithAMUser_(self, outer$);
  return self;
}

@end

void AMUser_ObsoleteContactRecord_initWithAMUser_(AMUser_ObsoleteContactRecord *self, AMUser *outer$) {
  (void) BSBserObject_init(self);
}

AMUser_ObsoleteContactRecord *new_AMUser_ObsoleteContactRecord_initWithAMUser_(AMUser *outer$) {
  AMUser_ObsoleteContactRecord *self = [AMUser_ObsoleteContactRecord alloc];
  AMUser_ObsoleteContactRecord_initWithAMUser_(self, outer$);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(AMUser_ObsoleteContactRecord)
