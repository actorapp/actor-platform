//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/ex3ndr/Develop/actor-model/library/actor-cocoa-base/build/java/im/actor/model/viewmodel/UploadFileVM.java
//


#include "J2ObjC_source.h"
#include "im/actor/model/modules/Files.h"
#include "im/actor/model/modules/Modules.h"
#include "im/actor/model/mvvm/AsyncVM.h"
#include "im/actor/model/viewmodel/UploadFileCallback.h"
#include "im/actor/model/viewmodel/UploadFileVM.h"
#include "im/actor/model/viewmodel/UploadFileVMCallback.h"

@interface AMUploadFileVM () {
 @public
  jlong rid_;
  ImActorModelModulesModules *modules_;
  id<AMUploadFileVMCallback> vmCallback_;
  id<AMUploadFileCallback> callback_;
}

@end

J2OBJC_FIELD_SETTER(AMUploadFileVM, modules_, ImActorModelModulesModules *)
J2OBJC_FIELD_SETTER(AMUploadFileVM, vmCallback_, id<AMUploadFileVMCallback>)
J2OBJC_FIELD_SETTER(AMUploadFileVM, callback_, id<AMUploadFileCallback>)

@interface AMUploadFileVM_NotUploading : NSObject

- (instancetype)initWithAMUploadFileVM:(AMUploadFileVM *)outer$;

@end

J2OBJC_EMPTY_STATIC_INIT(AMUploadFileVM_NotUploading)

__attribute__((unused)) static void AMUploadFileVM_NotUploading_initWithAMUploadFileVM_(AMUploadFileVM_NotUploading *self, AMUploadFileVM *outer$);

__attribute__((unused)) static AMUploadFileVM_NotUploading *new_AMUploadFileVM_NotUploading_initWithAMUploadFileVM_(AMUploadFileVM *outer$) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(AMUploadFileVM_NotUploading)

@interface AMUploadFileVM_Uploading : NSObject {
 @public
  jfloat progress_;
}

- (instancetype)initWithAMUploadFileVM:(AMUploadFileVM *)outer$
                             withFloat:(jfloat)progress;

- (jfloat)getProgress;

@end

J2OBJC_EMPTY_STATIC_INIT(AMUploadFileVM_Uploading)

__attribute__((unused)) static void AMUploadFileVM_Uploading_initWithAMUploadFileVM_withFloat_(AMUploadFileVM_Uploading *self, AMUploadFileVM *outer$, jfloat progress);

__attribute__((unused)) static AMUploadFileVM_Uploading *new_AMUploadFileVM_Uploading_initWithAMUploadFileVM_withFloat_(AMUploadFileVM *outer$, jfloat progress) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(AMUploadFileVM_Uploading)

@interface AMUploadFileVM_Uploaded : NSObject

- (instancetype)initWithAMUploadFileVM:(AMUploadFileVM *)outer$;

@end

J2OBJC_EMPTY_STATIC_INIT(AMUploadFileVM_Uploaded)

__attribute__((unused)) static void AMUploadFileVM_Uploaded_initWithAMUploadFileVM_(AMUploadFileVM_Uploaded *self, AMUploadFileVM *outer$);

__attribute__((unused)) static AMUploadFileVM_Uploaded *new_AMUploadFileVM_Uploaded_initWithAMUploadFileVM_(AMUploadFileVM *outer$) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(AMUploadFileVM_Uploaded)

@interface AMUploadFileVM_$1 : NSObject < AMUploadFileCallback > {
 @public
  AMUploadFileVM *this$0_;
}

- (void)onNotUploading;

- (void)onUploading:(jfloat)progress;

- (void)onUploaded;

- (instancetype)initWithAMUploadFileVM:(AMUploadFileVM *)outer$;

@end

J2OBJC_EMPTY_STATIC_INIT(AMUploadFileVM_$1)

J2OBJC_FIELD_SETTER(AMUploadFileVM_$1, this$0_, AMUploadFileVM *)

__attribute__((unused)) static void AMUploadFileVM_$1_initWithAMUploadFileVM_(AMUploadFileVM_$1 *self, AMUploadFileVM *outer$);

__attribute__((unused)) static AMUploadFileVM_$1 *new_AMUploadFileVM_$1_initWithAMUploadFileVM_(AMUploadFileVM *outer$) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(AMUploadFileVM_$1)

@implementation AMUploadFileVM

- (instancetype)initWithLong:(jlong)rid
  withAMUploadFileVMCallback:(id<AMUploadFileVMCallback>)vmCallback
withImActorModelModulesModules:(ImActorModelModulesModules *)modules {
  AMUploadFileVM_initWithLong_withAMUploadFileVMCallback_withImActorModelModulesModules_(self, rid, vmCallback, modules);
  return self;
}

- (void)onObjectReceivedWithId:(id)obj {
  if ([obj isKindOfClass:[AMUploadFileVM_NotUploading class]]) {
    [((id<AMUploadFileVMCallback>) nil_chk(vmCallback_)) onNotUploaded];
  }
  else if ([obj isKindOfClass:[AMUploadFileVM_Uploading class]]) {
    [((id<AMUploadFileVMCallback>) nil_chk(vmCallback_)) onUploading:[((AMUploadFileVM_Uploading *) nil_chk(((AMUploadFileVM_Uploading *) check_class_cast(obj, [AMUploadFileVM_Uploading class])))) getProgress]];
  }
  else if ([obj isKindOfClass:[AMUploadFileVM_Uploaded class]]) {
    [((id<AMUploadFileVMCallback>) nil_chk(vmCallback_)) onUploaded];
  }
}

- (void)detach {
  [super detach];
  [((ImActorModelModulesFiles *) nil_chk([((ImActorModelModulesModules *) nil_chk(modules_)) getFilesModule])) unbindUploadFileWithLong:rid_ withAMUploadFileCallback:callback_];
}

@end

void AMUploadFileVM_initWithLong_withAMUploadFileVMCallback_withImActorModelModulesModules_(AMUploadFileVM *self, jlong rid, id<AMUploadFileVMCallback> vmCallback, ImActorModelModulesModules *modules) {
  (void) AMAsyncVM_init(self);
  self->rid_ = rid;
  self->modules_ = modules;
  self->vmCallback_ = vmCallback;
  self->callback_ = new_AMUploadFileVM_$1_initWithAMUploadFileVM_(self);
  [((ImActorModelModulesFiles *) nil_chk([((ImActorModelModulesModules *) nil_chk(modules)) getFilesModule])) bindUploadFileWithLong:rid withAMUploadFileCallback:self->callback_];
}

AMUploadFileVM *new_AMUploadFileVM_initWithLong_withAMUploadFileVMCallback_withImActorModelModulesModules_(jlong rid, id<AMUploadFileVMCallback> vmCallback, ImActorModelModulesModules *modules) {
  AMUploadFileVM *self = [AMUploadFileVM alloc];
  AMUploadFileVM_initWithLong_withAMUploadFileVMCallback_withImActorModelModulesModules_(self, rid, vmCallback, modules);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(AMUploadFileVM)

@implementation AMUploadFileVM_NotUploading

- (instancetype)initWithAMUploadFileVM:(AMUploadFileVM *)outer$ {
  AMUploadFileVM_NotUploading_initWithAMUploadFileVM_(self, outer$);
  return self;
}

@end

void AMUploadFileVM_NotUploading_initWithAMUploadFileVM_(AMUploadFileVM_NotUploading *self, AMUploadFileVM *outer$) {
  (void) NSObject_init(self);
}

AMUploadFileVM_NotUploading *new_AMUploadFileVM_NotUploading_initWithAMUploadFileVM_(AMUploadFileVM *outer$) {
  AMUploadFileVM_NotUploading *self = [AMUploadFileVM_NotUploading alloc];
  AMUploadFileVM_NotUploading_initWithAMUploadFileVM_(self, outer$);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(AMUploadFileVM_NotUploading)

@implementation AMUploadFileVM_Uploading

- (instancetype)initWithAMUploadFileVM:(AMUploadFileVM *)outer$
                             withFloat:(jfloat)progress {
  AMUploadFileVM_Uploading_initWithAMUploadFileVM_withFloat_(self, outer$, progress);
  return self;
}

- (jfloat)getProgress {
  return progress_;
}

@end

void AMUploadFileVM_Uploading_initWithAMUploadFileVM_withFloat_(AMUploadFileVM_Uploading *self, AMUploadFileVM *outer$, jfloat progress) {
  (void) NSObject_init(self);
  self->progress_ = progress;
}

AMUploadFileVM_Uploading *new_AMUploadFileVM_Uploading_initWithAMUploadFileVM_withFloat_(AMUploadFileVM *outer$, jfloat progress) {
  AMUploadFileVM_Uploading *self = [AMUploadFileVM_Uploading alloc];
  AMUploadFileVM_Uploading_initWithAMUploadFileVM_withFloat_(self, outer$, progress);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(AMUploadFileVM_Uploading)

@implementation AMUploadFileVM_Uploaded

- (instancetype)initWithAMUploadFileVM:(AMUploadFileVM *)outer$ {
  AMUploadFileVM_Uploaded_initWithAMUploadFileVM_(self, outer$);
  return self;
}

@end

void AMUploadFileVM_Uploaded_initWithAMUploadFileVM_(AMUploadFileVM_Uploaded *self, AMUploadFileVM *outer$) {
  (void) NSObject_init(self);
}

AMUploadFileVM_Uploaded *new_AMUploadFileVM_Uploaded_initWithAMUploadFileVM_(AMUploadFileVM *outer$) {
  AMUploadFileVM_Uploaded *self = [AMUploadFileVM_Uploaded alloc];
  AMUploadFileVM_Uploaded_initWithAMUploadFileVM_(self, outer$);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(AMUploadFileVM_Uploaded)

@implementation AMUploadFileVM_$1

- (void)onNotUploading {
  [this$0_ postWithId:new_AMUploadFileVM_NotUploading_initWithAMUploadFileVM_(this$0_)];
}

- (void)onUploading:(jfloat)progress {
  [this$0_ postWithId:new_AMUploadFileVM_Uploading_initWithAMUploadFileVM_withFloat_(this$0_, progress)];
}

- (void)onUploaded {
  [this$0_ postWithId:new_AMUploadFileVM_Uploaded_initWithAMUploadFileVM_(this$0_)];
}

- (instancetype)initWithAMUploadFileVM:(AMUploadFileVM *)outer$ {
  AMUploadFileVM_$1_initWithAMUploadFileVM_(self, outer$);
  return self;
}

@end

void AMUploadFileVM_$1_initWithAMUploadFileVM_(AMUploadFileVM_$1 *self, AMUploadFileVM *outer$) {
  self->this$0_ = outer$;
  (void) NSObject_init(self);
}

AMUploadFileVM_$1 *new_AMUploadFileVM_$1_initWithAMUploadFileVM_(AMUploadFileVM *outer$) {
  AMUploadFileVM_$1 *self = [AMUploadFileVM_$1 alloc];
  AMUploadFileVM_$1_initWithAMUploadFileVM_(self, outer$);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(AMUploadFileVM_$1)
