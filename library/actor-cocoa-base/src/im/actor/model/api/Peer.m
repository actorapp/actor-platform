//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/ex3ndr/Develop/actor-model/library/actor-cocoa-base/build/java/im/actor/model/api/Peer.java
//


#include "IOSClass.h"
#include "J2ObjC_source.h"
#include "im/actor/model/api/Peer.h"
#include "im/actor/model/api/PeerType.h"
#include "im/actor/model/droidkit/bser/BserObject.h"
#include "im/actor/model/droidkit/bser/BserValues.h"
#include "im/actor/model/droidkit/bser/BserWriter.h"
#include "java/io/IOException.h"

@interface APPeer () {
 @public
  APPeerTypeEnum *type_;
  jint id__;
}

@end

J2OBJC_FIELD_SETTER(APPeer, type_, APPeerTypeEnum *)

@implementation APPeer

- (instancetype)initWithAPPeerTypeEnum:(APPeerTypeEnum *)type
                               withInt:(jint)id_ {
  APPeer_initWithAPPeerTypeEnum_withInt_(self, type, id_);
  return self;
}

- (instancetype)init {
  APPeer_init(self);
  return self;
}

- (APPeerTypeEnum *)getType {
  return self->type_;
}

- (jint)getId {
  return self->id__;
}

- (void)parseWithBSBserValues:(BSBserValues *)values {
  self->type_ = APPeerTypeEnum_parseWithInt_([((BSBserValues *) nil_chk(values)) getIntWithInt:1]);
  self->id__ = [values getIntWithInt:2];
}

- (void)serializeWithBSBserWriter:(BSBserWriter *)writer {
  if (self->type_ == nil) {
    @throw new_JavaIoIOException_init();
  }
  [((BSBserWriter *) nil_chk(writer)) writeIntWithInt:1 withInt:[((APPeerTypeEnum *) nil_chk(self->type_)) getValue]];
  [writer writeIntWithInt:2 withInt:self->id__];
}

- (NSString *)description {
  NSString *res = @"struct Peer{";
  res = JreStrcat("$$", res, JreStrcat("$@", @"type=", self->type_));
  res = JreStrcat("$$", res, JreStrcat("$I", @", id=", self->id__));
  res = JreStrcat("$C", res, '}');
  return res;
}

@end

void APPeer_initWithAPPeerTypeEnum_withInt_(APPeer *self, APPeerTypeEnum *type, jint id_) {
  (void) BSBserObject_init(self);
  self->type_ = type;
  self->id__ = id_;
}

APPeer *new_APPeer_initWithAPPeerTypeEnum_withInt_(APPeerTypeEnum *type, jint id_) {
  APPeer *self = [APPeer alloc];
  APPeer_initWithAPPeerTypeEnum_withInt_(self, type, id_);
  return self;
}

void APPeer_init(APPeer *self) {
  (void) BSBserObject_init(self);
}

APPeer *new_APPeer_init() {
  APPeer *self = [APPeer alloc];
  APPeer_init(self);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(APPeer)
