//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/ex3ndr/Develop/actor-model/library/actor-cocoa-base/build/java/im/actor/model/api/DocumentMessage.java
//


#line 1 "/Users/ex3ndr/Develop/actor-model/library/actor-cocoa-base/build/java/im/actor/model/api/DocumentMessage.java"

#include "IOSClass.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "im/actor/model/api/DocumentEx.h"
#include "im/actor/model/api/DocumentMessage.h"
#include "im/actor/model/api/EncryptionType.h"
#include "im/actor/model/api/FastThumb.h"
#include "im/actor/model/api/Message.h"
#include "im/actor/model/droidkit/bser/BserValues.h"
#include "im/actor/model/droidkit/bser/BserWriter.h"
#include "java/io/IOException.h"
#include "java/lang/Integer.h"

@interface ImActorModelApiDocumentMessage () {
 @public
  jlong fileId_;
  jlong accessHash_;
  jint fileSize_;
  ImActorModelApiEncryptionTypeEnum *encryptionType_;
  IOSByteArray *encryptionKey_;
  JavaLangInteger *plainFileSize_;
  NSString *name_;
  NSString *mimeType_;
  ImActorModelApiFastThumb *thumb_;
  ImActorModelApiDocumentEx *ext_;
}

@end

J2OBJC_FIELD_SETTER(ImActorModelApiDocumentMessage, encryptionType_, ImActorModelApiEncryptionTypeEnum *)
J2OBJC_FIELD_SETTER(ImActorModelApiDocumentMessage, encryptionKey_, IOSByteArray *)
J2OBJC_FIELD_SETTER(ImActorModelApiDocumentMessage, plainFileSize_, JavaLangInteger *)
J2OBJC_FIELD_SETTER(ImActorModelApiDocumentMessage, name_, NSString *)
J2OBJC_FIELD_SETTER(ImActorModelApiDocumentMessage, mimeType_, NSString *)
J2OBJC_FIELD_SETTER(ImActorModelApiDocumentMessage, thumb_, ImActorModelApiFastThumb *)
J2OBJC_FIELD_SETTER(ImActorModelApiDocumentMessage, ext_, ImActorModelApiDocumentEx *)


#line 19
@implementation ImActorModelApiDocumentMessage


#line 32
- (instancetype)initWithLong:(jlong)fileId
                    withLong:(jlong)accessHash
                     withInt:(jint)fileSize
withImActorModelApiEncryptionTypeEnum:(ImActorModelApiEncryptionTypeEnum *)encryptionType
               withByteArray:(IOSByteArray *)encryptionKey
         withJavaLangInteger:(JavaLangInteger *)plainFileSize
                withNSString:(NSString *)name
                withNSString:(NSString *)mimeType
withImActorModelApiFastThumb:(ImActorModelApiFastThumb *)thumb
withImActorModelApiDocumentEx:(ImActorModelApiDocumentEx *)ext {
  ImActorModelApiDocumentMessage_initWithLong_withLong_withInt_withImActorModelApiEncryptionTypeEnum_withByteArray_withJavaLangInteger_withNSString_withNSString_withImActorModelApiFastThumb_withImActorModelApiDocumentEx_(self, fileId, accessHash, fileSize, encryptionType, encryptionKey, plainFileSize, name, mimeType, thumb, ext);
  return self;
}


#line 45
- (instancetype)init {
  ImActorModelApiDocumentMessage_init(self);
  return self;
}


#line 49
- (jint)getHeader {
  return 3;
}

- (jlong)getFileId {
  return self->fileId_;
}

- (jlong)getAccessHash {
  return self->accessHash_;
}

- (jint)getFileSize {
  return self->fileSize_;
}

- (ImActorModelApiEncryptionTypeEnum *)getEncryptionType {
  return self->encryptionType_;
}

- (IOSByteArray *)getEncryptionKey {
  return self->encryptionKey_;
}

- (JavaLangInteger *)getPlainFileSize {
  return self->plainFileSize_;
}

- (NSString *)getName {
  return self->name_;
}

- (NSString *)getMimeType {
  return self->mimeType_;
}

- (ImActorModelApiFastThumb *)getThumb {
  return self->thumb_;
}

- (ImActorModelApiDocumentEx *)getExt {
  return self->ext_;
}


#line 94
- (void)parseWithBSBserValues:(BSBserValues *)values {
  self->fileId_ = [((BSBserValues *) nil_chk(values)) getLongWithInt:1];
  self->accessHash_ = [values getLongWithInt:2];
  self->fileSize_ = [values getIntWithInt:3];
  jint val_encryptionType = [values getIntWithInt:9 withInt:0];
  if (val_encryptionType != 0) {
    self->encryptionType_ = ImActorModelApiEncryptionTypeEnum_parseWithInt_(val_encryptionType);
  }
  self->encryptionKey_ = [values optBytesWithInt:10];
  self->plainFileSize_ = JavaLangInteger_valueOfWithInt_([values optIntWithInt:11]);
  self->name_ = [values getStringWithInt:4];
  self->mimeType_ = [values getStringWithInt:5];
  self->thumb_ = [values optObjWithInt:6 withBSBserObject:new_ImActorModelApiFastThumb_init()];
  if ([values optBytesWithInt:8] != nil) {
    self->ext_ = ImActorModelApiDocumentEx_fromBytesWithByteArray_([values getBytesWithInt:8]);
  }
}


#line 113
- (void)serializeWithBSBserWriter:(BSBserWriter *)writer {
  [((BSBserWriter *) nil_chk(writer)) writeLongWithInt:1 withLong:self->fileId_];
  [writer writeLongWithInt:2 withLong:self->accessHash_];
  [writer writeIntWithInt:3 withInt:self->fileSize_];
  if (self->encryptionType_ != nil) {
    [writer writeIntWithInt:9 withInt:[self->encryptionType_ getValue]];
  }
  if (self->encryptionKey_ != nil) {
    [writer writeBytesWithInt:10 withByteArray:self->encryptionKey_];
  }
  if (self->plainFileSize_ != nil) {
    [writer writeIntWithInt:11 withInt:[self->plainFileSize_ intValue]];
  }
  if (self->name_ == nil) {
    @throw new_JavaIoIOException_init();
  }
  [writer writeStringWithInt:4 withNSString:self->name_];
  if (self->mimeType_ == nil) {
    @throw new_JavaIoIOException_init();
  }
  [writer writeStringWithInt:5 withNSString:self->mimeType_];
  if (self->thumb_ != nil) {
    [writer writeObjectWithInt:6 withBSBserObject:self->thumb_];
  }
  if (self->ext_ != nil) {
    [writer writeBytesWithInt:8 withByteArray:[self->ext_ buildContainer]];
  }
}


#line 143
- (NSString *)description {
  NSString *res = @"struct DocumentMessage{";
  res = JreStrcat("$$", res, JreStrcat("$J", @"fileId=", self->fileId_));
  res = JreStrcat("$$", res, JreStrcat("$I", @", fileSize=", self->fileSize_));
  res = JreStrcat("$$", res, JreStrcat("$$", @", name=", self->name_));
  res = JreStrcat("$$", res, JreStrcat("$$", @", mimeType=", self->mimeType_));
  res = JreStrcat("$$", res, JreStrcat("$$", @", thumb=", (self->thumb_ != nil ? @"set" : @"empty")));
  res = JreStrcat("$$", res, JreStrcat("$$", @", ext=", (self->ext_ != nil ? @"set" : @"empty")));
  res = JreStrcat("$C", res, '}');
  return res;
}

@end


#line 32
void ImActorModelApiDocumentMessage_initWithLong_withLong_withInt_withImActorModelApiEncryptionTypeEnum_withByteArray_withJavaLangInteger_withNSString_withNSString_withImActorModelApiFastThumb_withImActorModelApiDocumentEx_(ImActorModelApiDocumentMessage *self, jlong fileId, jlong accessHash, jint fileSize, ImActorModelApiEncryptionTypeEnum *encryptionType, IOSByteArray *encryptionKey, JavaLangInteger *plainFileSize, NSString *name, NSString *mimeType, ImActorModelApiFastThumb *thumb, ImActorModelApiDocumentEx *ext) {
  (void) ImActorModelApiMessage_init(self);
  
#line 33
  self->fileId_ = fileId;
  self->accessHash_ = accessHash;
  self->fileSize_ = fileSize;
  self->encryptionType_ = encryptionType;
  self->encryptionKey_ = encryptionKey;
  self->plainFileSize_ = plainFileSize;
  self->name_ = name;
  self->mimeType_ = mimeType;
  self->thumb_ = thumb;
  self->ext_ = ext;
}


#line 32
ImActorModelApiDocumentMessage *new_ImActorModelApiDocumentMessage_initWithLong_withLong_withInt_withImActorModelApiEncryptionTypeEnum_withByteArray_withJavaLangInteger_withNSString_withNSString_withImActorModelApiFastThumb_withImActorModelApiDocumentEx_(jlong fileId, jlong accessHash, jint fileSize, ImActorModelApiEncryptionTypeEnum *encryptionType, IOSByteArray *encryptionKey, JavaLangInteger *plainFileSize, NSString *name, NSString *mimeType, ImActorModelApiFastThumb *thumb, ImActorModelApiDocumentEx *ext) {
  ImActorModelApiDocumentMessage *self = [ImActorModelApiDocumentMessage alloc];
  ImActorModelApiDocumentMessage_initWithLong_withLong_withInt_withImActorModelApiEncryptionTypeEnum_withByteArray_withJavaLangInteger_withNSString_withNSString_withImActorModelApiFastThumb_withImActorModelApiDocumentEx_(self, fileId, accessHash, fileSize, encryptionType, encryptionKey, plainFileSize, name, mimeType, thumb, ext);
  return self;
}


#line 45
void ImActorModelApiDocumentMessage_init(ImActorModelApiDocumentMessage *self) {
  (void) ImActorModelApiMessage_init(self);
}


#line 45
ImActorModelApiDocumentMessage *new_ImActorModelApiDocumentMessage_init() {
  ImActorModelApiDocumentMessage *self = [ImActorModelApiDocumentMessage alloc];
  ImActorModelApiDocumentMessage_init(self);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ImActorModelApiDocumentMessage)
