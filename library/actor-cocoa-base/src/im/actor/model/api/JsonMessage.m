//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/ex3ndr/Develop/actor-model/library/actor-cocoa-base/build/java/im/actor/model/api/JsonMessage.java
//


#include "IOSClass.h"
#include "J2ObjC_source.h"
#include "im/actor/model/api/JsonMessage.h"
#include "im/actor/model/api/Message.h"
#include "im/actor/model/droidkit/bser/BserObject.h"
#include "im/actor/model/droidkit/bser/BserValues.h"
#include "im/actor/model/droidkit/bser/BserWriter.h"
#include "im/actor/model/droidkit/bser/util/SparseArray.h"
#include "java/io/IOException.h"

@interface APJsonMessage () {
 @public
  NSString *rawJson_;
}

@end

J2OBJC_FIELD_SETTER(APJsonMessage, rawJson_, NSString *)

@implementation APJsonMessage

- (instancetype)initWithNSString:(NSString *)rawJson {
  APJsonMessage_initWithNSString_(self, rawJson);
  return self;
}

- (instancetype)init {
  APJsonMessage_init(self);
  return self;
}

- (jint)getHeader {
  return 4;
}

- (NSString *)getRawJson {
  return self->rawJson_;
}

- (void)parseWithBSBserValues:(BSBserValues *)values {
  self->rawJson_ = [((BSBserValues *) nil_chk(values)) getStringWithInt:1];
  if ([values hasRemaining]) {
    [self setUnmappedObjectsWithImActorModelDroidkitBserUtilSparseArray:[values buildRemaining]];
  }
}

- (void)serializeWithBSBserWriter:(BSBserWriter *)writer {
  if (self->rawJson_ == nil) {
    @throw new_JavaIoIOException_init();
  }
  [((BSBserWriter *) nil_chk(writer)) writeStringWithInt:1 withNSString:self->rawJson_];
  if ([self getUnmappedObjects] != nil) {
    ImActorModelDroidkitBserUtilSparseArray *unmapped = [self getUnmappedObjects];
    for (jint i = 0; i < [((ImActorModelDroidkitBserUtilSparseArray *) nil_chk(unmapped)) size]; i++) {
      jint key = [unmapped keyAtWithInt:i];
      [writer writeUnmappedWithInt:key withId:[unmapped getWithInt:key]];
    }
  }
}

- (NSString *)description {
  NSString *res = @"struct JsonMessage{";
  res = JreStrcat("$C", res, '}');
  return res;
}

@end

void APJsonMessage_initWithNSString_(APJsonMessage *self, NSString *rawJson) {
  (void) APMessage_init(self);
  self->rawJson_ = rawJson;
}

APJsonMessage *new_APJsonMessage_initWithNSString_(NSString *rawJson) {
  APJsonMessage *self = [APJsonMessage alloc];
  APJsonMessage_initWithNSString_(self, rawJson);
  return self;
}

void APJsonMessage_init(APJsonMessage *self) {
  (void) APMessage_init(self);
}

APJsonMessage *new_APJsonMessage_init() {
  APJsonMessage *self = [APJsonMessage alloc];
  APJsonMessage_init(self);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(APJsonMessage)
