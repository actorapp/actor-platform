//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/ex3ndr/Develop/actor-model/library/actor-cocoa-base/build/java/im/actor/model/api/rpc/RequestLoadHistory.java
//


#line 1 "/Users/ex3ndr/Develop/actor-model/library/actor-cocoa-base/build/java/im/actor/model/api/rpc/RequestLoadHistory.java"

#include "IOSClass.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "im/actor/model/api/OutPeer.h"
#include "im/actor/model/api/rpc/RequestLoadHistory.h"
#include "im/actor/model/droidkit/bser/Bser.h"
#include "im/actor/model/droidkit/bser/BserObject.h"
#include "im/actor/model/droidkit/bser/BserValues.h"
#include "im/actor/model/droidkit/bser/BserWriter.h"
#include "im/actor/model/network/parser/Request.h"
#include "java/io/IOException.h"

@interface ImActorModelApiRpcRequestLoadHistory () {
 @public
  ImActorModelApiOutPeer *peer_;
  jlong minDate_;
  jint limit_;
}

@end

J2OBJC_FIELD_SETTER(ImActorModelApiRpcRequestLoadHistory, peer_, ImActorModelApiOutPeer *)


#line 24
@implementation ImActorModelApiRpcRequestLoadHistory


#line 27
+ (ImActorModelApiRpcRequestLoadHistory *)fromBytesWithByteArray:(IOSByteArray *)data {
  return ImActorModelApiRpcRequestLoadHistory_fromBytesWithByteArray_(data);
}


#line 35
- (instancetype)initWithImActorModelApiOutPeer:(ImActorModelApiOutPeer *)peer
                                      withLong:(jlong)minDate
                                       withInt:(jint)limit {
  ImActorModelApiRpcRequestLoadHistory_initWithImActorModelApiOutPeer_withLong_withInt_(self, peer, minDate, limit);
  return self;
}


#line 41
- (instancetype)init {
  ImActorModelApiRpcRequestLoadHistory_init(self);
  return self;
}


#line 45
- (ImActorModelApiOutPeer *)getPeer {
  return self->peer_;
}

- (jlong)getMinDate {
  return self->minDate_;
}

- (jint)getLimit {
  return self->limit_;
}


#line 58
- (void)parseWithBSBserValues:(BSBserValues *)values {
  self->peer_ = [((BSBserValues *) nil_chk(values)) getObjWithInt:1 withBSBserObject:new_ImActorModelApiOutPeer_init()];
  self->minDate_ = [values getLongWithInt:3];
  self->limit_ = [values getIntWithInt:4];
}


#line 65
- (void)serializeWithBSBserWriter:(BSBserWriter *)writer {
  if (self->peer_ == nil) {
    @throw new_JavaIoIOException_init();
  }
  [((BSBserWriter *) nil_chk(writer)) writeObjectWithInt:1 withBSBserObject:self->peer_];
  [writer writeLongWithInt:3 withLong:self->minDate_];
  [writer writeIntWithInt:4 withInt:self->limit_];
}


#line 75
- (NSString *)description {
  NSString *res = @"rpc LoadHistory{";
  res = JreStrcat("$$", res, JreStrcat("$@", @"peer=", self->peer_));
  res = JreStrcat("$$", res, JreStrcat("$J", @", minDate=", self->minDate_));
  res = JreStrcat("$$", res, JreStrcat("$I", @", limit=", self->limit_));
  res = JreStrcat("$C", res, '}');
  return res;
}


#line 85
- (jint)getHeaderKey {
  return ImActorModelApiRpcRequestLoadHistory_HEADER;
}

@end


#line 27
ImActorModelApiRpcRequestLoadHistory *ImActorModelApiRpcRequestLoadHistory_fromBytesWithByteArray_(IOSByteArray *data) {
  ImActorModelApiRpcRequestLoadHistory_initialize();
  
#line 28
  return ((ImActorModelApiRpcRequestLoadHistory *) BSBser_parseWithBSBserObject_withByteArray_(new_ImActorModelApiRpcRequestLoadHistory_init(), data));
}


#line 35
void ImActorModelApiRpcRequestLoadHistory_initWithImActorModelApiOutPeer_withLong_withInt_(ImActorModelApiRpcRequestLoadHistory *self, ImActorModelApiOutPeer *peer, jlong minDate, jint limit) {
  (void) ImActorModelNetworkParserRequest_init(self);
  
#line 36
  self->peer_ = peer;
  self->minDate_ = minDate;
  self->limit_ = limit;
}


#line 35
ImActorModelApiRpcRequestLoadHistory *new_ImActorModelApiRpcRequestLoadHistory_initWithImActorModelApiOutPeer_withLong_withInt_(ImActorModelApiOutPeer *peer, jlong minDate, jint limit) {
  ImActorModelApiRpcRequestLoadHistory *self = [ImActorModelApiRpcRequestLoadHistory alloc];
  ImActorModelApiRpcRequestLoadHistory_initWithImActorModelApiOutPeer_withLong_withInt_(self, peer, minDate, limit);
  return self;
}

void ImActorModelApiRpcRequestLoadHistory_init(ImActorModelApiRpcRequestLoadHistory *self) {
  (void) ImActorModelNetworkParserRequest_init(self);
}


#line 41
ImActorModelApiRpcRequestLoadHistory *new_ImActorModelApiRpcRequestLoadHistory_init() {
  ImActorModelApiRpcRequestLoadHistory *self = [ImActorModelApiRpcRequestLoadHistory alloc];
  ImActorModelApiRpcRequestLoadHistory_init(self);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ImActorModelApiRpcRequestLoadHistory)
