//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/ex3ndr/Develop/actor-model/library/actor-cocoa-base/build/java/im/actor/model/api/rpc/ResponseGetAvailableInterests.java
//


#include "IOSClass.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "im/actor/model/api/Interest.h"
#include "im/actor/model/api/rpc/ResponseGetAvailableInterests.h"
#include "im/actor/model/droidkit/bser/Bser.h"
#include "im/actor/model/droidkit/bser/BserObject.h"
#include "im/actor/model/droidkit/bser/BserValues.h"
#include "im/actor/model/droidkit/bser/BserWriter.h"
#include "im/actor/model/network/parser/Response.h"
#include "java/io/IOException.h"
#include "java/util/ArrayList.h"
#include "java/util/List.h"

@interface ImActorModelApiRpcResponseGetAvailableInterests () {
 @public
  id<JavaUtilList> rootInterests_;
}

@end

J2OBJC_FIELD_SETTER(ImActorModelApiRpcResponseGetAvailableInterests, rootInterests_, id<JavaUtilList>)

@implementation ImActorModelApiRpcResponseGetAvailableInterests

+ (ImActorModelApiRpcResponseGetAvailableInterests *)fromBytesWithByteArray:(IOSByteArray *)data {
  return ImActorModelApiRpcResponseGetAvailableInterests_fromBytesWithByteArray_(data);
}

- (instancetype)initWithJavaUtilList:(id<JavaUtilList>)rootInterests {
  ImActorModelApiRpcResponseGetAvailableInterests_initWithJavaUtilList_(self, rootInterests);
  return self;
}

- (instancetype)init {
  ImActorModelApiRpcResponseGetAvailableInterests_init(self);
  return self;
}

- (id<JavaUtilList>)getRootInterests {
  return self->rootInterests_;
}

- (void)parseWithBSBserValues:(BSBserValues *)values {
  id<JavaUtilList> _rootInterests = new_JavaUtilArrayList_init();
  for (jint i = 0; i < [((BSBserValues *) nil_chk(values)) getRepeatedCountWithInt:1]; i++) {
    [_rootInterests addWithId:new_ImActorModelApiInterest_init()];
  }
  self->rootInterests_ = [values getRepeatedObjWithInt:1 withJavaUtilList:_rootInterests];
}

- (void)serializeWithBSBserWriter:(BSBserWriter *)writer {
  [((BSBserWriter *) nil_chk(writer)) writeRepeatedObjWithInt:1 withJavaUtilList:self->rootInterests_];
}

- (NSString *)description {
  NSString *res = @"tuple GetAvailableInterests{";
  res = JreStrcat("$C", res, '}');
  return res;
}

- (jint)getHeaderKey {
  return ImActorModelApiRpcResponseGetAvailableInterests_HEADER;
}

@end

ImActorModelApiRpcResponseGetAvailableInterests *ImActorModelApiRpcResponseGetAvailableInterests_fromBytesWithByteArray_(IOSByteArray *data) {
  ImActorModelApiRpcResponseGetAvailableInterests_initialize();
  return ((ImActorModelApiRpcResponseGetAvailableInterests *) BSBser_parseWithBSBserObject_withByteArray_(new_ImActorModelApiRpcResponseGetAvailableInterests_init(), data));
}

void ImActorModelApiRpcResponseGetAvailableInterests_initWithJavaUtilList_(ImActorModelApiRpcResponseGetAvailableInterests *self, id<JavaUtilList> rootInterests) {
  (void) ImActorModelNetworkParserResponse_init(self);
  self->rootInterests_ = rootInterests;
}

ImActorModelApiRpcResponseGetAvailableInterests *new_ImActorModelApiRpcResponseGetAvailableInterests_initWithJavaUtilList_(id<JavaUtilList> rootInterests) {
  ImActorModelApiRpcResponseGetAvailableInterests *self = [ImActorModelApiRpcResponseGetAvailableInterests alloc];
  ImActorModelApiRpcResponseGetAvailableInterests_initWithJavaUtilList_(self, rootInterests);
  return self;
}

void ImActorModelApiRpcResponseGetAvailableInterests_init(ImActorModelApiRpcResponseGetAvailableInterests *self) {
  (void) ImActorModelNetworkParserResponse_init(self);
}

ImActorModelApiRpcResponseGetAvailableInterests *new_ImActorModelApiRpcResponseGetAvailableInterests_init() {
  ImActorModelApiRpcResponseGetAvailableInterests *self = [ImActorModelApiRpcResponseGetAvailableInterests alloc];
  ImActorModelApiRpcResponseGetAvailableInterests_init(self);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ImActorModelApiRpcResponseGetAvailableInterests)
