//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/ex3ndr/Develop/actor-model/library/actor-cocoa-base/build/java/im/actor/model/api/updates/UpdateCallRing.java
//


#include "IOSClass.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "im/actor/model/api/User.h"
#include "im/actor/model/api/updates/UpdateCallRing.h"
#include "im/actor/model/droidkit/bser/Bser.h"
#include "im/actor/model/droidkit/bser/BserObject.h"
#include "im/actor/model/droidkit/bser/BserValues.h"
#include "im/actor/model/droidkit/bser/BserWriter.h"
#include "im/actor/model/network/parser/Update.h"
#include "java/io/IOException.h"

@interface ImActorModelApiUpdatesUpdateCallRing () {
 @public
  ImActorModelApiUser *user_;
  NSString *callId_;
}

@end

J2OBJC_FIELD_SETTER(ImActorModelApiUpdatesUpdateCallRing, user_, ImActorModelApiUser *)
J2OBJC_FIELD_SETTER(ImActorModelApiUpdatesUpdateCallRing, callId_, NSString *)

@implementation ImActorModelApiUpdatesUpdateCallRing

+ (ImActorModelApiUpdatesUpdateCallRing *)fromBytesWithByteArray:(IOSByteArray *)data {
  return ImActorModelApiUpdatesUpdateCallRing_fromBytesWithByteArray_(data);
}

- (instancetype)initWithImActorModelApiUser:(ImActorModelApiUser *)user
                               withNSString:(NSString *)callId {
  ImActorModelApiUpdatesUpdateCallRing_initWithImActorModelApiUser_withNSString_(self, user, callId);
  return self;
}

- (instancetype)init {
  ImActorModelApiUpdatesUpdateCallRing_init(self);
  return self;
}

- (ImActorModelApiUser *)getUser {
  return self->user_;
}

- (NSString *)getCallId {
  return self->callId_;
}

- (void)parseWithBSBserValues:(BSBserValues *)values {
  self->user_ = [((BSBserValues *) nil_chk(values)) getObjWithInt:1 withBSBserObject:new_ImActorModelApiUser_init()];
  self->callId_ = [values getStringWithInt:2];
}

- (void)serializeWithBSBserWriter:(BSBserWriter *)writer {
  if (self->user_ == nil) {
    @throw new_JavaIoIOException_init();
  }
  [((BSBserWriter *) nil_chk(writer)) writeObjectWithInt:1 withBSBserObject:self->user_];
  if (self->callId_ == nil) {
    @throw new_JavaIoIOException_init();
  }
  [writer writeStringWithInt:2 withNSString:self->callId_];
}

- (NSString *)description {
  NSString *res = @"update CallRing{";
  res = JreStrcat("$C", res, '}');
  return res;
}

- (jint)getHeaderKey {
  return ImActorModelApiUpdatesUpdateCallRing_HEADER;
}

@end

ImActorModelApiUpdatesUpdateCallRing *ImActorModelApiUpdatesUpdateCallRing_fromBytesWithByteArray_(IOSByteArray *data) {
  ImActorModelApiUpdatesUpdateCallRing_initialize();
  return ((ImActorModelApiUpdatesUpdateCallRing *) BSBser_parseWithBSBserObject_withByteArray_(new_ImActorModelApiUpdatesUpdateCallRing_init(), data));
}

void ImActorModelApiUpdatesUpdateCallRing_initWithImActorModelApiUser_withNSString_(ImActorModelApiUpdatesUpdateCallRing *self, ImActorModelApiUser *user, NSString *callId) {
  (void) ImActorModelNetworkParserUpdate_init(self);
  self->user_ = user;
  self->callId_ = callId;
}

ImActorModelApiUpdatesUpdateCallRing *new_ImActorModelApiUpdatesUpdateCallRing_initWithImActorModelApiUser_withNSString_(ImActorModelApiUser *user, NSString *callId) {
  ImActorModelApiUpdatesUpdateCallRing *self = [ImActorModelApiUpdatesUpdateCallRing alloc];
  ImActorModelApiUpdatesUpdateCallRing_initWithImActorModelApiUser_withNSString_(self, user, callId);
  return self;
}

void ImActorModelApiUpdatesUpdateCallRing_init(ImActorModelApiUpdatesUpdateCallRing *self) {
  (void) ImActorModelNetworkParserUpdate_init(self);
}

ImActorModelApiUpdatesUpdateCallRing *new_ImActorModelApiUpdatesUpdateCallRing_init() {
  ImActorModelApiUpdatesUpdateCallRing *self = [ImActorModelApiUpdatesUpdateCallRing alloc];
  ImActorModelApiUpdatesUpdateCallRing_init(self);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ImActorModelApiUpdatesUpdateCallRing)
