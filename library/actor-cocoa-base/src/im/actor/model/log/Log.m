//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/ex3ndr/Develop/actor-model/library/actor-cocoa-base/build/java/im/actor/model/log/Log.java
//


#include "J2ObjC_source.h"
#include "im/actor/model/LogProvider.h"
#include "im/actor/model/log/Log.h"
#include "java/lang/Throwable.h"

static id<AMLogProvider> AMLog_log_;
J2OBJC_STATIC_FIELD_GETTER(AMLog, log_, id<AMLogProvider>)
J2OBJC_STATIC_FIELD_SETTER(AMLog, log_, id<AMLogProvider>)

@implementation AMLog

+ (id<AMLogProvider>)getLog {
  return AMLog_getLog();
}

+ (void)setLogWithAMLogProvider:(id<AMLogProvider>)log {
  AMLog_setLogWithAMLogProvider_(log);
}

+ (void)wWithNSString:(NSString *)tag
         withNSString:(NSString *)message {
  AMLog_wWithNSString_withNSString_(tag, message);
}

+ (void)eWithNSString:(NSString *)tag
withJavaLangThrowable:(JavaLangThrowable *)throwable {
  AMLog_eWithNSString_withJavaLangThrowable_(tag, throwable);
}

+ (void)dWithNSString:(NSString *)tag
         withNSString:(NSString *)message {
  AMLog_dWithNSString_withNSString_(tag, message);
}

+ (void)vWithNSString:(NSString *)tag
         withNSString:(NSString *)message {
  AMLog_vWithNSString_withNSString_(tag, message);
}

- (instancetype)init {
  AMLog_init(self);
  return self;
}

@end

id<AMLogProvider> AMLog_getLog() {
  AMLog_initialize();
  return AMLog_log_;
}

void AMLog_setLogWithAMLogProvider_(id<AMLogProvider> log) {
  AMLog_initialize();
  AMLog_log_ = log;
}

void AMLog_wWithNSString_withNSString_(NSString *tag, NSString *message) {
  AMLog_initialize();
  if (AMLog_log_ != nil) {
    [AMLog_log_ w:tag withMessage:message];
  }
}

void AMLog_eWithNSString_withJavaLangThrowable_(NSString *tag, JavaLangThrowable *throwable) {
  AMLog_initialize();
  if (AMLog_log_ != nil) {
    [AMLog_log_ v:tag withError:throwable];
  }
}

void AMLog_dWithNSString_withNSString_(NSString *tag, NSString *message) {
  AMLog_initialize();
  if (AMLog_log_ != nil) {
    [AMLog_log_ d:tag withMessage:message];
  }
}

void AMLog_vWithNSString_withNSString_(NSString *tag, NSString *message) {
  AMLog_initialize();
  if (AMLog_log_ != nil) {
    [AMLog_log_ v:tag withMessage:message];
  }
}

void AMLog_init(AMLog *self) {
  (void) NSObject_init(self);
}

AMLog *new_AMLog_init() {
  AMLog *self = [AMLog alloc];
  AMLog_init(self);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(AMLog)
