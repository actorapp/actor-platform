############################
# Networking
############################

im.actor.model.NetworkProvider.createConnection(IIIILim/actor/model/network/ConnectionEndpoint;Lim/actor/model/network/ConnectionCallback;Lim/actor/model/network/CreateConnectionCallback;)V = createConnection:withMTProtoVersion:withApiMajorVersion:withApiMinorVersion:withEndpoint:withCallback:withCreateCallback:

im.actor.model.network.ConnectionCallback.onMessage([BII)V = onMessage:withOffset:withLen:
im.actor.model.network.ConnectionCallback.onConnectionRedirect(Ljava/lang/String;II)V = onConnectionRedirect:withPort:withTimeout:

im.actor.model.network.CreateConnectionCallback.onConnectionCreated(Lim/actor/model/network/Connection;)V = onConnectionCreated:

im.actor.model.network.Connection.post([BII)V = post:withOffset:withLen:

############################
# Storage
############################

# Not working
# im.actor.model.Storage.createMessagesEngine(Lim/actor/entity/Peer;)Lim/actor/model/mvvm/ListEngine<Lim/actor/model/entity/Message;>; = AMStorage createMessagesEngine:(AMPeer *)peer;

im.actor.model.StorageProvider.createKeyValue(Ljava/lang/String;)Lim/actor/model/droidkit/engine/KeyValueStorage; = createKeyValueWithName:
im.actor.model.StorageProvider.createList(Ljava/lang/String;)Lim/actor/model/droidkit/engine/ListStorage; = createListWithName:

im.actor.model.droidkit.engine.PreferencesStorage.putLong(Ljava/lang/String;J)V = putLong:withValue:
im.actor.model.droidkit.engine.PreferencesStorage.getLong(Ljava/lang/String;J)J = getLong:withDefault:
im.actor.model.droidkit.engine.PreferencesStorage.putInt(Ljava/lang/String;I)V = putInt:withValue:
im.actor.model.droidkit.engine.PreferencesStorage.getInt(Ljava/lang/String;I)I = getInt:withDefault:
im.actor.model.droidkit.engine.PreferencesStorage.putBool(Ljava/lang/String;Z)V = putBool:withValue:
im.actor.model.droidkit.engine.PreferencesStorage.getBool(Ljava/lang/String;Z)Z = getBool:withDefault:
im.actor.model.droidkit.engine.PreferencesStorage.putBytes(Ljava/lang/String;[B)V = putBytes:withValue:
im.actor.model.droidkit.engine.PreferencesStorage.getBytes(Ljava/lang/String;)[B = getBytes:
im.actor.model.droidkit.engine.PreferencesStorage.putString(Ljava/lang/String;Ljava/lang/String;)V = putString:withValue:
im.actor.model.droidkit.engine.PreferencesStorage.getString(Ljava/lang/String;)Ljava/lang/String; = getString:

############################
# File system
############################

im.actor.model.FileSystemProvider.commitTempFile(Lim/actor/model/files/FileSystemReference;Lim/actor/model/entity/FileReference;)Lim/actor/model/files/FileSystemReference; = commitTempFile:withReference:
im.actor.model.FileSystemProvider.fileFromDescriptor(Ljava/lang/String;)Lim/actor/model/files/FileSystemReference; = fileFromDescriptor:
im.actor.model.files.FileSystemReference.openWrite(I)Lim/actor/model/files/OutputFile; = openWriteWithSize:
im.actor.model.files.OutputFile.write(I[BII)Z = writeWithOffset:withData:withDataOffset:withDataLen:
im.actor.model.files.InputFile.read(I[BII)Z = readAtOffset:toArray:withArrayOffset:withArrayLen:

############################
# Threading
############################

im.actor.model.Threading.createAtomicInt(I)Lim/actor/model/util/AtomicIntegerCompat; = createAtomicInt:
im.actor.model.Threading.createAtomicLong(J)Lim/actor/model/util/AtomicLongCompat; = createAtomicLong:
im.actor.model.jvm.JavaThreading.createAtomicInt(I)Lim/actor/model/util/AtomicIntegerCompat; = createAtomicInt:
im.actor.model.jvm.JavaThreading.createAtomicLong(J)Lim/actor/model/util/AtomicLongCompat; = createAtomicLong:

# Not working
# im.actor.model.jvm.JavaThreading.createDispatcher(Ljava/lang/String;ILim/actor/model/droidkit/actors/ThreadPriority;Lim/actor/model/droidkit/actors/ActorSystem)Lim/actor/model/droidkit/actors/mailbox/ActorDispatcher; = AMThreading createDispatcher:(NSString *)name withThreads:(jint)threadsCount withPriority:(DKThreadPriorityEnum *)priority withActorSystem:(DKActorSystem *)actorSystem;

############################
# MainThread
############################

im.actor.model.MainThreadProvider.postToMainThread(Ljava/lang/Runnable;)V = postToMainThread:

############################
# Log Callback
############################

im.actor.model.LogProvider.w(Ljava/lang/String;Ljava/lang/String;)V = w:withMessage:
im.actor.model.LogProvider.d(Ljava/lang/String;Ljava/lang/String;)V = d:withMessage:
im.actor.model.LogProvider.v(Ljava/lang/String;Ljava/lang/String;)V = v:withMessage:
im.actor.model.LogProvider.e(Ljava/lang/String;Ljava/lang/Throwable;)V = v:withError:

############################
# Configuration builder
############################

im.actor.model.ConfigurationBuilder.setApiConfiguration(Lim/actor/model/ApiConfiguration;)Lim/actor/model/ConfigurationBuilder; = setApiConfiguration:
im.actor.model.ConfigurationBuilder.setFileSystemProvider(Lim/actor/model/FileSystemProvider;)Lim/actor/model/ConfigurationBuilder; = setFileSystemProvider:
im.actor.model.ConfigurationBuilder.setNotificationProvider(Lim/actor/model/NotificationProvider;)Lim/actor/model/ConfigurationBuilder; = setNotificationProvider:
im.actor.model.ConfigurationBuilder.setCryptoProvider(Lim/actor/model/CryptoProvider;)Lim/actor/model/ConfigurationBuilder; = setCryptoProvider:
im.actor.model.ConfigurationBuilder.setPhoneBookProvider(Lim/actor/model/PhoneBookProvider;)Lim/actor/model/ConfigurationBuilder; = setPhoneBookProvider:
im.actor.model.ConfigurationBuilder.setLog(Lim/actor/model/LogProvider;)Lim/actor/model/ConfigurationBuilder; = setLogProvider:
im.actor.model.ConfigurationBuilder.setNetworkProvider(Lim/actor/model/NetworkProvider;)Lim/actor/model/ConfigurationBuilder; = setNetworkProvider:
im.actor.model.ConfigurationBuilder.setThreadingProvider(Lim/actor/model/ThreadingProvider;)Lim/actor/model/ConfigurationBuilder; = setThreadingProvider:
im.actor.model.ConfigurationBuilder.setStorage(Lim/actor/model/StorageProvider;)Lim/actor/model/ConfigurationBuilder; = setStorageProvider:
im.actor.model.ConfigurationBuilder.setCallback(Lim/actor/model/MessengerCallback;)Lim/actor/model/ConfigurationBuilder; = setCallback:
im.actor.model.ConfigurationBuilder.setMainThreadProvider(Lim/actor/model/MainThreadProvider;)Lim/actor/model/ConfigurationBuilder; = setMainThreadProvider:
im.actor.model.ConfigurationBuilder.addEndpoint(Ljava/lang/String;)Lim/actor/model/ConfigurationBuilder; = addEndpoint:
im.actor.model.ConfigurationBuilder.setLocale(Lim/actor/model/LocaleProvider;)Lim/actor/model/ConfigurationBuilder; = setLocaleProvider:
im.actor.model.ConfigurationBuilder.setDispatcherProvider(Lim/actor/model/DispatcherProvider;)Lim/actor/model/ConfigurationBuilder; = setDispatcherProvider:

im.actor.model.ConfigurationBuilder.setEnableContactsLogging(Z)Lim/actor/model/ConfigurationBuilder; = setEnableContactsLogging:
im.actor.model.ConfigurationBuilder.setEnableNetworkLogging(Z)Lim/actor/model/ConfigurationBuilder; = setEnableNetworkLogging:

############################
# Messenger
############################

# Not working properly
# im.actor.model.Messenger.Messenger(Lim/actor/model/Configuration;)V = AMMessenger initWithConfig:(AMConfiguration *)configuration;

im.actor.model.Messenger.getTyping(I)Lim/actor/model/viewmodel/UserTypingVM; = getTyping:
im.actor.model.Messenger.getGroupTyping(I)Lim/actor/model/viewmodel/GroupTypingVM; = getGroupTyping:
im.actor.model.Messenger.onConversationOpen(Lim/actor/model/entity/Peer;)V = onConversationOpen:
im.actor.model.Messenger.onConversationClosed(Lim/actor/model/entity/Peer;)V = onConversationClosed:
im.actor.model.Messenger.onProfileOpen(I)V = onProfileOpen:
im.actor.model.Messenger.onProfileClosed(I)V = onProfileClosed:
im.actor.model.Messenger.onInMessageShown(Lim/actor/model/entity/Peer;JJZ)V = onInMessageShown:withRid:withDate:withEncrypted:
im.actor.model.Messenger.onTyping(Lim/actor/model/entity/Peer;)V = onTyping:
im.actor.model.Messenger.loadLastReadSortDate(Lim/actor/model/entity/Peer;)J = loadLastReadDate:
im.actor.model.Messenger.saveDraft(Lim/actor/model/entity/Peer;Ljava/lang/String;)V = saveDraft:withText:
im.actor.model.Messenger.loadDraft(Lim/actor/model/entity/Peer;)Ljava/lang/String; = loadDraft:
im.actor.model.Messenger.sendMessage(Lim/actor/model/entity/Peer;Ljava/lang/String;)V = sendMessage:withText:
im.actor.model.Messenger.bindRawFile(Lim/actor/model/entity/FileReference;ZLim/actor/model/viewmodel/FileCallback;)V = bindRawFileWith:withAutoStart:withCallback:
im.actor.model.Messenger.unbindRawFile(JZLim/actor/model/viewmodel/FileCallback;)V = unbindRawFile:withAutoCancel:withCallback:
im.actor.model.Messenger.bindRawUploadFile(JLim/actor/model/viewmodel/UploadFileCallback;)V = bindRawUploadFile:withCallback:
im.actor.model.Messenger.unbindRawUploadFile(JLim/actor/model/viewmodel/UploadFileCallback;)V = unbindRawUploadFile:withCallback:

# Not working
# im.actor.model.Messenger.requestSms(J)Lim/actor/model/concurrency/Command<Lim/actor/model/AuthState;>; = AMMessenger requestSms:(jlong)phone;