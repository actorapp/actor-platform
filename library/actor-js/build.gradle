repositories {
    mavenCentral()
}

buildscript {
    repositories {
        jcenter()
        mavenCentral()
    }
    dependencies {
        classpath 'de.richsource.gradle.plugins:gwt-gradle-plugin:0.6'
    }
}

apply plugin: 'war'
apply plugin: 'gwt'

task cleanGenSources(type: Delete) {
    delete "${projectDir}/src/gen/java/"
}

task cleanGenResources(type: Delete) {
    delete "${projectDir}/src/gen/resources/"
}

task cleanWebAppSources(type: Delete) {
    delete "${projectDir}/src/main/webapp/"
}

task copyGenSources(type: Copy, dependsOn: ['cleanGenSources']) {
    from fileTree("${projectDir}/../actor-common/src/main/java/")
    from fileTree("${projectDir}/../actor-bc/src/main/java/")

    into "${projectDir}/src/gen/java/"
}

task copyGenResources(type: Copy, dependsOn: ['cleanGenSources']) {
    from fileTree("${projectDir}/../actor-common/src/main/resources/")

    into "${projectDir}/src/gen/resources/"
}

task copyWebAppSources(type: Copy, dependsOn: ['cleanWebAppSources']) {
    from fileTree("${projectDir}/../../apps/actor-web/")

    exclude "ActorMessenger/**"
    into "${projectDir}/src/main/webapp/"
}

task npmInstall(type: Exec, dependsOn: ['copyWebAppSources']) {
    workingDir "${projectDir}/src/main/webapp/"
    commandLine 'npm', 'install'
}

task bowerInstall(type: Exec, dependsOn: ['npmInstall']) {
    workingDir "${projectDir}/src/main/webapp/"
    commandLine 'bower', 'install'
}

task gulpBuild(type: Exec, dependsOn: ['bowerInstall']) {
    workingDir "${projectDir}/src/main/webapp/"
    commandLine 'gulp', 'build'
}

task buildWebApp(dependsOn: ['gulpBuild']) {

}

tasks.compileJava.dependsOn(copyGenResources)
tasks.compileJava.dependsOn(copyGenSources)
// tasks.compileJava.dependsOn(buildWebApp)

tasks.clean.dependsOn(cleanGenSources)
tasks.clean.dependsOn(cleanGenResources)
tasks.clean.dependsOn(cleanWebAppSources)

dependencies {
    providedCompile 'com.google.gwt:gwt-user:2.7.0'
    providedCompile 'org.timepedia.exporter:gwtexporter:2.4.0'
    gwt 'org.timepedia.exporter:gwtexporter:2.4.0'
}

sourceSets {
    main {
        java {
            srcDirs = ['src/main/java', 'src/gen/java']
        }
        resources {
            srcDirs = ['src/main/resources', 'src/gen/resources']
        }
    }
}

gwt {
    gwtVersion = '2.7.0'
    modules 'im.actor.ActorMessenger'

    compiler {
        strict = true;
        style = "PRETTY"
        //        enableClosureCompiler = true;
//        disableClassMetadata = true;
//        disableCastChecking = true;
    }
}

task explodedWar(type: Copy) {
    into "$buildDir/exploded"
    with war
}

tasks.war.dependsOn(explodedWar)

task buildPackage(type: Zip, dependsOn: ['war']) {
    from "$buildDir/exploded"
    exclude "WEB-INF/**"
    exclude "META-INF/**"
}
