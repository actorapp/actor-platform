package im.actor.model.api;
/*
 *  Generated by the Actor API Scheme generator.  DO NOT EDIT!
 */

import im.actor.model.droidkit.bser.Bser;
import im.actor.model.droidkit.bser.BserParser;
import im.actor.model.droidkit.bser.BserObject;
import im.actor.model.droidkit.bser.BserValues;
import im.actor.model.droidkit.bser.BserWriter;
import im.actor.model.droidkit.bser.DataInput;
import im.actor.model.droidkit.bser.DataOutput;
import im.actor.model.droidkit.bser.util.SparseArray;
import org.jetbrains.annotations.Nullable;
import org.jetbrains.annotations.NotNull;
import com.google.j2objc.annotations.ObjectiveCName;
import static im.actor.model.droidkit.bser.Utils.*;
import java.io.IOException;
import im.actor.model.network.parser.*;
import java.util.List;
import java.util.ArrayList;

public class Dialog extends BserObject {

    private Peer peer;
    private int unreadCount;
    private long sortDate;
    private int senderUid;
    private long rid;
    private long date;
    private Message message;
    private MessageState state;

    public Dialog(@NotNull Peer peer, int unreadCount, long sortDate, int senderUid, long rid, long date, @NotNull Message message, @Nullable MessageState state) {
        this.peer = peer;
        this.unreadCount = unreadCount;
        this.sortDate = sortDate;
        this.senderUid = senderUid;
        this.rid = rid;
        this.date = date;
        this.message = message;
        this.state = state;
    }

    public Dialog() {

    }

    @NotNull
    public Peer getPeer() {
        return this.peer;
    }

    public int getUnreadCount() {
        return this.unreadCount;
    }

    public long getSortDate() {
        return this.sortDate;
    }

    public int getSenderUid() {
        return this.senderUid;
    }

    public long getRid() {
        return this.rid;
    }

    public long getDate() {
        return this.date;
    }

    @NotNull
    public Message getMessage() {
        return this.message;
    }

    @Nullable
    public MessageState getState() {
        return this.state;
    }

    @Override
    public void parse(BserValues values) throws IOException {
        this.peer = values.getObj(1, new Peer());
        this.unreadCount = values.getInt(3);
        this.sortDate = values.getLong(4);
        this.senderUid = values.getInt(5);
        this.rid = values.getLong(6);
        this.date = values.getLong(7);
        this.message = Message.fromBytes(values.getBytes(8));
        int val_state = values.getInt(9, 0);
        if (val_state != 0) {
            this.state = MessageState.parse(val_state);
        }
    }

    @Override
    public void serialize(BserWriter writer) throws IOException {
        if (this.peer == null) {
            throw new IOException();
        }
        writer.writeObject(1, this.peer);
        writer.writeInt(3, this.unreadCount);
        writer.writeLong(4, this.sortDate);
        writer.writeInt(5, this.senderUid);
        writer.writeLong(6, this.rid);
        writer.writeLong(7, this.date);
        if (this.message == null) {
            throw new IOException();
        }

        writer.writeBytes(8, this.message.buildContainer());
        if (this.state != null) {
            writer.writeInt(9, this.state.getValue());
        }
    }

    @Override
    public String toString() {
        String res = "struct Dialog{";
        res += "peer=" + this.peer;
        res += ", unreadCount=" + this.unreadCount;
        res += ", sortDate=" + this.sortDate;
        res += ", senderUid=" + this.senderUid;
        res += ", rid=" + this.rid;
        res += ", date=" + this.date;
        res += ", message=" + this.message;
        res += "}";
        return res;
    }

}
