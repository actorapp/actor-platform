{
  "version": "1.6",
  "scala-package": "im.actor.api.rpc",
  "java-package": "im.actor.core.api",
  "aliases": [
    {
      "type": "bytes",
      "alias": "seq_state"
    },
    {
      "type": "int64",
      "alias": "date"
    },
    {
      "type": "int64",
      "alias": "randomId"
    },
    {
      "type": "int64",
      "alias": "msec"
    },
    {
      "type": "int32",
      "alias": "sec"
    },
    {
      "type": "int32",
      "alias": "userId"
    },
    {
      "type": "int32",
      "alias": "groupId"
    }
  ],
  "sections": [
    {
      "title": "Authentication",
      "package": "auth",
      "doc": [
        "<p>Actor now support only one way for authentication - by SMS or phone call.</p>",
        "<p>Authorization steps:",
        "<ol>",
        "<li>Request SMS Code by calling RequestAuthCode</li>",
        "<li>If SMS arrives than send Authorization code in SignIn/SignUp</li>",
        "<li>If sms doesn't arrive for a long time - request phone activation by",
        "calling AuthCodeCall</li>",
        "</ol>",
        "</p>",
        "Some rules<br/>",
        "If RequestAuthCode return isRegistered = false than use SignUp method else SignIn.<br/>",
        "If on any step API return PHONE_CODE_EXPIRED than application MUST start",
        "authorization process from begining.<br/>"
      ],
      "items": [
        {
          "type": "enum",
          "content": {
            "name": "PhoneActivationType",
            "values": [
              {
                "name": "CODE",
                "id": 1
              },
              {
                "name": "PASSWORD",
                "id": 2
              }
            ]
          }
        },
        {
          "type": "enum",
          "content": {
            "name": "EmailActivationType",
            "values": [
              {
                "name": "CODE",
                "id": 1
              },
              {
                "name": "OAUTH2",
                "id": 2
              },
              {
                "name": "PASSWORD",
                "id": 3
              }
            ]
          }
        },
        {
          "type": "rpc",
          "content": {
            "name": "StartPhoneAuth",
            "header": 191,
            "response": {
              "type": "anonymous",
              "header": 193,
              "doc": [
                "Phone Activation response",
                {
                  "type": "reference",
                  "argument": "transactionHash",
                  "category": "danger",
                  "description": "  Hash of transaction"
                },
                {
                  "type": "reference",
                  "argument": "isRegistered",
                  "category": "full",
                  "description": "  Is User registered"
                }
              ],
              "attributes": [
                {
                  "type": "string",
                  "id": 1,
                  "name": "transactionHash"
                },
                {
                  "type": "bool",
                  "id": 2,
                  "name": "isRegistered"
                },
                {
                  "type": {
                    "type": "opt",
                    "childType": {
                      "type": "enum",
                      "childType": "PhoneActivationType"
                    }
                  },
                  "id": 3,
                  "name": "activationType"
                }
              ]
            },
            "doc": [
              "Start Phone Activation",
              {
                "type": "reference",
                "argument": "phoneNumber",
                "category": "full",
                "description": "Phone number"
              },
              {
                "type": "reference",
                "argument": "appId",
                "category": "hidden",
                "description": "Appication Id"
              },
              {
                "type": "reference",
                "argument": "apiKey",
                "category": "hidden",
                "description": "Application API key"
              },
              {
                "type": "reference",
                "argument": "deviceHash",
                "category": "full",
                "description": "Hash of device unique id and app bundle id. Used for autologout users when app is reinstalled"
              },
              {
                "type": "reference",
                "argument": "deviceTitle",
                "category": "full",
                "description": "Device Title"
              },
              {
                "type": "reference",
                "argument": "timeZone",
                "category": "full",
                "description": "TimeZone of device"
              },
              {
                "type": "reference",
                "argument": "preferredLanguages",
                "category": "full",
                "description": "Preferred languages of device"
              }
            ],
            "attributes": [
              {
                "type": "int64",
                "id": 1,
                "name": "phoneNumber"
              },
              {
                "type": "int32",
                "id": 2,
                "name": "appId"
              },
              {
                "type": "string",
                "id": 3,
                "name": "apiKey"
              },
              {
                "type": "bytes",
                "id": 4,
                "name": "deviceHash"
              },
              {
                "type": "string",
                "id": 5,
                "name": "deviceTitle"
              },
              {
                "type": {
                  "type": "opt",
                  "childType": "string"
                },
                "id": 6,
                "name": "timeZone"
              },
              {
                "type": {
                  "type": "list",
                  "childType": "string"
                },
                "id": 7,
                "name": "preferredLanguages"
              }
            ]
          }
        },
        {
          "type": "rpc",
          "content": {
            "name": "SendCodeByPhoneCall",
            "header": 197,
            "response": {
              "type": "reference",
              "name": "Void"
            },
            "doc": [
              "Dial phone and dictate auth code",
              {
                "type": "reference",
                "argument": "transactionHash",
                "category": "danger",
                "description": "Transaction hash"
              }
            ],
            "attributes": [
              {
                "type": "string",
                "id": 1,
                "name": "transactionHash"
              }
            ]
          }
        },
        {
          "type": "rpc",
          "content": {
            "name": "StartEmailAuth",
            "header": 185,
            "response": {
              "type": "anonymous",
              "header": 186,
              "doc": [
                "Email Activation response",
                {
                  "type": "reference",
                  "argument": "transactionHash",
                  "category": "danger",
                  "description": "  Hash of activation transaction"
                },
                {
                  "type": "reference",
                  "argument": "isRegistered",
                  "category": "full",
                  "description": "  true if user is registered"
                },
                {
                  "type": "reference",
                  "argument": "activationType",
                  "category": "full",
                  "description": "  Email Activation type"
                }
              ],
              "attributes": [
                {
                  "type": "string",
                  "id": 1,
                  "name": "transactionHash"
                },
                {
                  "type": "bool",
                  "id": 2,
                  "name": "isRegistered"
                },
                {
                  "type": {
                    "type": "enum",
                    "childType": "EmailActivationType"
                  },
                  "id": 3,
                  "name": "activationType"
                }
              ]
            },
            "doc": [
              "Start EMail Activation",
              {
                "type": "reference",
                "argument": "email",
                "category": "full",
                "description": "Email"
              },
              {
                "type": "reference",
                "argument": "appId",
                "category": "hidden",
                "description": "Application Id"
              },
              {
                "type": "reference",
                "argument": "apiKey",
                "category": "hidden",
                "description": "Application API key"
              },
              {
                "type": "reference",
                "argument": "deviceHash",
                "category": "full",
                "description": "Hash of device unique id and app bundle id. Used for autologout users when app is reinstalled"
              },
              {
                "type": "reference",
                "argument": "deviceTitle",
                "category": "full",
                "description": "Device Title"
              },
              {
                "type": "reference",
                "argument": "timeZone",
                "category": "full",
                "description": "TimeZone of device"
              },
              {
                "type": "reference",
                "argument": "preferredLanguages",
                "category": "full",
                "description": "Preferred languages"
              }
            ],
            "attributes": [
              {
                "type": "string",
                "id": 1,
                "name": "email"
              },
              {
                "type": "int32",
                "id": 2,
                "name": "appId"
              },
              {
                "type": "string",
                "id": 3,
                "name": "apiKey"
              },
              {
                "type": "bytes",
                "id": 4,
                "name": "deviceHash"
              },
              {
                "type": "string",
                "id": 5,
                "name": "deviceTitle"
              },
              {
                "type": {
                  "type": "opt",
                  "childType": "string"
                },
                "id": 6,
                "name": "timeZone"
              },
              {
                "type": {
                  "type": "list",
                  "childType": "string"
                },
                "id": 7,
                "name": "preferredLanguages"
              }
            ]
          }
        },
        {
          "type": "rpc",
          "content": {
            "name": "StartAnonymousAuth",
            "header": 198,
            "response": {
              "type": "reference",
              "name": "Auth"
            },
            "doc": [
              "Starting Anonymous login",
              {
                "type": "reference",
                "argument": "name",
                "category": "full",
                "description": "Name of new user"
              },
              {
                "type": "reference",
                "argument": "appId",
                "category": "hidden",
                "description": "Application Id"
              },
              {
                "type": "reference",
                "argument": "apiKey",
                "category": "hidden",
                "description": "Application API key"
              },
              {
                "type": "reference",
                "argument": "deviceHash",
                "category": "full",
                "description": "Hash of device unique id and app bundle id. Used for autologout users when app is reinstalled"
              },
              {
                "type": "reference",
                "argument": "deviceTitle",
                "category": "full",
                "description": "Device Title"
              },
              {
                "type": "reference",
                "argument": "timeZone",
                "category": "full",
                "description": "TimeZone of device"
              },
              {
                "type": "reference",
                "argument": "preferredLanguages",
                "category": "full",
                "description": "Preferred languages"
              }
            ],
            "attributes": [
              {
                "type": "string",
                "id": 1,
                "name": "name"
              },
              {
                "type": "int32",
                "id": 2,
                "name": "appId"
              },
              {
                "type": "string",
                "id": 3,
                "name": "apiKey"
              },
              {
                "type": "bytes",
                "id": 4,
                "name": "deviceHash"
              },
              {
                "type": "string",
                "id": 5,
                "name": "deviceTitle"
              },
              {
                "type": {
                  "type": "opt",
                  "childType": "string"
                },
                "id": 6,
                "name": "timeZone"
              },
              {
                "type": {
                  "type": "list",
                  "childType": "string"
                },
                "id": 7,
                "name": "preferredLanguages"
              }
            ]
          }
        },
        {
          "type": "rpc",
          "content": {
            "name": "StartTokenAuth",
            "header": 203,
            "response": {
              "type": "reference",
              "name": "Auth"
            },
            "doc": [
              "Starting token-based login",
              {
                "type": "reference",
                "argument": "token",
                "category": "full",
                "description": "Token for authentication"
              },
              {
                "type": "reference",
                "argument": "appId",
                "category": "hidden",
                "description": "Application Id"
              },
              {
                "type": "reference",
                "argument": "apiKey",
                "category": "hidden",
                "description": "Application API key"
              },
              {
                "type": "reference",
                "argument": "deviceHash",
                "category": "full",
                "description": "Hash of device unique id and app bundle id. Used for autologout users when app is reinstalled"
              },
              {
                "type": "reference",
                "argument": "deviceTitle",
                "category": "full",
                "description": "Device Title"
              },
              {
                "type": "reference",
                "argument": "timeZone",
                "category": "full",
                "description": "TimeZone of device"
              },
              {
                "type": "reference",
                "argument": "preferredLanguages",
                "category": "full",
                "description": "Preferred languages"
              }
            ],
            "attributes": [
              {
                "type": "string",
                "id": 1,
                "name": "token"
              },
              {
                "type": "int32",
                "id": 2,
                "name": "appId"
              },
              {
                "type": "string",
                "id": 3,
                "name": "apiKey"
              },
              {
                "type": "bytes",
                "id": 4,
                "name": "deviceHash"
              },
              {
                "type": "string",
                "id": 5,
                "name": "deviceTitle"
              },
              {
                "type": {
                  "type": "opt",
                  "childType": "string"
                },
                "id": 6,
                "name": "timeZone"
              },
              {
                "type": {
                  "type": "list",
                  "childType": "string"
                },
                "id": 7,
                "name": "preferredLanguages"
              }
            ]
          }
        },
        {
          "type": "rpc",
          "content": {
            "name": "StartUsernameAuth",
            "header": 2571,
            "response": {
              "type": "anonymous",
              "header": 2572,
              "doc": [
                "Result of login auth start. If is not registered move to signup.",
                {
                  "type": "reference",
                  "argument": "transactionHash",
                  "category": "danger",
                  "description": "  Authentication transaction hash"
                },
                {
                  "type": "reference",
                  "argument": "isRegistered",
                  "category": "full",
                  "description": "  If user is registered with this username"
                }
              ],
              "attributes": [
                {
                  "type": "string",
                  "id": 1,
                  "name": "transactionHash"
                },
                {
                  "type": "bool",
                  "id": 2,
                  "name": "isRegistered"
                }
              ]
            },
            "doc": [
              "Starting Login Authentication",
              {
                "type": "reference",
                "argument": "username",
                "category": "full",
                "description": "Username for signing in"
              },
              {
                "type": "reference",
                "argument": "appId",
                "category": "hidden",
                "description": "Application id"
              },
              {
                "type": "reference",
                "argument": "apiKey",
                "category": "hidden",
                "description": "Application API key"
              },
              {
                "type": "reference",
                "argument": "deviceHash",
                "category": "full",
                "description": "Hash of device unique id and app bundle id. Used for autologout users when app is reinstalled"
              },
              {
                "type": "reference",
                "argument": "deviceTitle",
                "category": "full",
                "description": "Device Title"
              },
              {
                "type": "reference",
                "argument": "timeZone",
                "category": "full",
                "description": "Time Zone of device"
              },
              {
                "type": "reference",
                "argument": "preferredLanguages",
                "category": "full",
                "description": "Preferred languages of device"
              }
            ],
            "attributes": [
              {
                "type": "string",
                "id": 1,
                "name": "username"
              },
              {
                "type": "int32",
                "id": 2,
                "name": "appId"
              },
              {
                "type": "string",
                "id": 3,
                "name": "apiKey"
              },
              {
                "type": "bytes",
                "id": 4,
                "name": "deviceHash"
              },
              {
                "type": "string",
                "id": 5,
                "name": "deviceTitle"
              },
              {
                "type": {
                  "type": "opt",
                  "childType": "string"
                },
                "id": 6,
                "name": "timeZone"
              },
              {
                "type": {
                  "type": "list",
                  "childType": "string"
                },
                "id": 7,
                "name": "preferredLanguages"
              }
            ]
          }
        },
        {
          "type": "rpc",
          "content": {
            "name": "ValidateCode",
            "header": 189,
            "response": {
              "type": "reference",
              "name": "Auth"
            },
            "doc": [
              "Performing user sign in.",
              {
                "type": "reference",
                "argument": "transactionHash",
                "category": "danger",
                "description": "Hash of transaction"
              },
              {
                "type": "reference",
                "argument": "code",
                "category": "hidden",
                "description": "Activation code"
              }
            ],
            "attributes": [
              {
                "type": "string",
                "id": 1,
                "name": "transactionHash"
              },
              {
                "type": "string",
                "id": 2,
                "name": "code"
              }
            ]
          }
        },
        {
          "type": "rpc",
          "content": {
            "name": "ValidatePassword",
            "header": 207,
            "response": {
              "type": "reference",
              "name": "Auth"
            },
            "doc": [
              "Validation of account password",
              {
                "type": "reference",
                "argument": "transactionHash",
                "category": "full",
                "description": "Hash of transaction"
              },
              {
                "type": "reference",
                "argument": "password",
                "category": "full",
                "description": "Password for account"
              }
            ],
            "attributes": [
              {
                "type": "string",
                "id": 1,
                "name": "transactionHash"
              },
              {
                "type": "string",
                "id": 2,
                "name": "password"
              }
            ]
          }
        },
        {
          "type": "rpc",
          "content": {
            "name": "GetOAuth2Params",
            "header": 194,
            "response": {
              "type": "anonymous",
              "header": 195,
              "doc": [
                {
                  "type": "reference",
                  "argument": "authUrl",
                  "category": "hidden",
                  "description": "  Authentication url"
                }
              ],
              "attributes": [
                {
                  "type": "string",
                  "id": 1,
                  "name": "authUrl"
                }
              ]
            },
            "doc": [
              "Loading OAuth2 Parameters",
              {
                "type": "reference",
                "argument": "transactionHash",
                "category": "danger",
                "description": "Hash of transaction"
              },
              {
                "type": "reference",
                "argument": "redirectUrl",
                "category": "full",
                "description": "Redirect URL for Application"
              }
            ],
            "attributes": [
              {
                "type": "string",
                "id": 1,
                "name": "transactionHash"
              },
              {
                "type": "string",
                "id": 2,
                "name": "redirectUrl"
              }
            ]
          }
        },
        {
          "type": "rpc",
          "content": {
            "name": "CompleteOAuth2",
            "header": 196,
            "response": {
              "type": "reference",
              "name": "Auth"
            },
            "doc": [
              "Complete OAuth2 Authentication",
              {
                "type": "reference",
                "argument": "transactionHash",
                "category": "danger",
                "description": "Hash of transaction"
              },
              {
                "type": "reference",
                "argument": "code",
                "category": "danger",
                "description": "Authentication Code"
              }
            ],
            "attributes": [
              {
                "type": "string",
                "id": 1,
                "name": "transactionHash"
              },
              {
                "type": "string",
                "id": 2,
                "name": "code"
              }
            ]
          }
        },
        {
          "type": "rpc",
          "content": {
            "name": "SignUp",
            "header": 190,
            "response": {
              "type": "reference",
              "name": "Auth"
            },
            "doc": [
              "Perform user SignUp",
              {
                "type": "reference",
                "argument": "transactionHash",
                "category": "danger",
                "description": "Hash of transaction"
              },
              {
                "type": "reference",
                "argument": "name",
                "category": "full",
                "description": "User name"
              },
              {
                "type": "reference",
                "argument": "sex",
                "category": "full",
                "description": "Optional user sex"
              },
              {
                "type": "reference",
                "argument": "password",
                "category": "full",
                "description": "Password for password-based accounts"
              }
            ],
            "attributes": [
              {
                "type": "string",
                "id": 1,
                "name": "transactionHash"
              },
              {
                "type": "string",
                "id": 2,
                "name": "name"
              },
              {
                "type": {
                  "type": "opt",
                  "childType": {
                    "type": "enum",
                    "childType": "Sex"
                  }
                },
                "id": 3,
                "name": "sex"
              },
              {
                "type": {
                  "type": "opt",
                  "childType": "string"
                },
                "id": 4,
                "name": "password"
              }
            ]
          }
        },
        {
          "type": "response",
          "content": {
            "name": "Auth",
            "header": 5,
            "doc": [
              "Authentication result",
              {
                "type": "reference",
                "argument": "user",
                "category": "compact",
                "description": "  The authenticated User"
              },
              {
                "type": "reference",
                "argument": "config",
                "category": "full",
                "description": "  Current config of server"
              }
            ],
            "attributes": [
              {
                "type": {
                  "type": "struct",
                  "childType": "User"
                },
                "id": 2,
                "name": "user"
              },
              {
                "type": {
                  "type": "struct",
                  "childType": "Config"
                },
                "id": 3,
                "name": "config"
              }
            ]
          }
        },
        {
          "type": "struct",
          "content": {
            "name": "AuthSession",
            "doc": [
              "Authentication session",
              {
                "type": "reference",
                "argument": "id",
                "category": "full",
                "description": "  Unuque ID of session"
              },
              {
                "type": "reference",
                "argument": "authHolder",
                "category": "full",
                "description": "  holder of session. 0 - this device, 1 - other."
              },
              {
                "type": "reference",
                "argument": "appId",
                "category": "full",
                "description": "  Application Id (user in SignIn/SignUp)"
              },
              {
                "type": "reference",
                "argument": "appTitle",
                "category": "full",
                "description": "  Title of application"
              },
              {
                "type": "reference",
                "argument": "deviceTitle",
                "category": "full",
                "description": "  Title of device"
              },
              {
                "type": "reference",
                "argument": "authTime",
                "category": "full",
                "description": "  Time of session creating"
              },
              {
                "type": "reference",
                "argument": "authLocation",
                "category": "hidden",
                "description": "  two-letter country code of session create"
              },
              {
                "type": "reference",
                "argument": "latitude",
                "category": "hidden",
                "description": "  optional latitude of auth if available"
              },
              {
                "type": "reference",
                "argument": "longitude",
                "category": "hidden",
                "description": "  optional longitude of auth if available"
              }
            ],
            "attributes": [
              {
                "type": "int32",
                "id": 1,
                "name": "id"
              },
              {
                "type": {
                  "type": "enum",
                  "childType": "AuthHolder"
                },
                "id": 2,
                "name": "authHolder"
              },
              {
                "type": "int32",
                "id": 3,
                "name": "appId"
              },
              {
                "type": "string",
                "id": 4,
                "name": "appTitle"
              },
              {
                "type": "string",
                "id": 5,
                "name": "deviceTitle"
              },
              {
                "type": "int32",
                "id": 6,
                "name": "authTime"
              },
              {
                "type": "string",
                "id": 7,
                "name": "authLocation"
              },
              {
                "type": {
                  "type": "opt",
                  "childType": "double"
                },
                "id": 8,
                "name": "latitude"
              },
              {
                "type": {
                  "type": "opt",
                  "childType": "double"
                },
                "id": 9,
                "name": "longitude"
              }
            ]
          }
        },
        {
          "type": "enum",
          "content": {
            "name": "AuthHolder",
            "values": [
              {
                "name": "ThisDevice",
                "id": 1
              },
              {
                "name": "OtherDevice",
                "id": 2
              }
            ]
          }
        },
        {
          "type": "rpc",
          "content": {
            "name": "GetAuthSessions",
            "header": 80,
            "response": {
              "type": "anonymous",
              "header": 81,
              "doc": [
                "Current Auth sessions",
                {
                  "type": "reference",
                  "argument": "userAuths",
                  "category": "compact",
                  "description": "  User authentications"
                }
              ],
              "attributes": [
                {
                  "type": {
                    "type": "list",
                    "childType": {
                      "type": "struct",
                      "childType": "AuthSession"
                    }
                  },
                  "id": 1,
                  "name": "userAuths"
                }
              ]
            },
            "doc": [
              "Getting of all active user's authentication sessions"
            ],
            "attributes": []
          }
        },
        {
          "type": "rpc",
          "content": {
            "name": "TerminateSession",
            "header": 82,
            "response": {
              "type": "reference",
              "name": "Void"
            },
            "doc": [
              "SignOut on specified user's session",
              {
                "type": "reference",
                "argument": "id",
                "category": "full",
                "description": "id from AuthItem"
              }
            ],
            "attributes": [
              {
                "type": "int32",
                "id": 1,
                "name": "id"
              }
            ]
          }
        },
        {
          "type": "rpc",
          "content": {
            "name": "TerminateAllSessions",
            "header": 83,
            "response": {
              "type": "reference",
              "name": "Void"
            },
            "doc": [
              "SignOut on all exept current sessions"
            ],
            "attributes": []
          }
        },
        {
          "type": "rpc",
          "content": {
            "name": "SignOut",
            "header": 84,
            "response": {
              "type": "reference",
              "name": "Void"
            },
            "doc": [
              "SignOut current session"
            ],
            "attributes": []
          }
        },
        {
          "type": "comment",
          "content": "OBSOLETE METHODS"
        },
        {
          "type": "rpc",
          "content": {
            "name": "SignInObsolete",
            "header": 3,
            "response": {
              "type": "reference",
              "name": "Auth"
            },
            "doc": [
              "Performing user signin",
              {
                "type": "reference",
                "argument": "phoneNumber",
                "category": "danger",
                "description": "Phone number in international format"
              },
              {
                "type": "reference",
                "argument": "smsHash",
                "category": "danger",
                "description": "Code request hash from RequestAuthCode"
              },
              {
                "type": "reference",
                "argument": "smsCode",
                "category": "danger",
                "description": "Confirmation code from SMS"
              },
              {
                "type": "reference",
                "argument": "deviceHash",
                "category": "full",
                "description": "Hash of device unique id and app bundle id. Used for autologout users when app is reinstalled"
              },
              {
                "type": "reference",
                "argument": "deviceTitle",
                "category": "full",
                "description": "Device title like 'Steven's iPhone'"
              },
              {
                "type": "reference",
                "argument": "appId",
                "category": "hidden",
                "description": "Application ID"
              },
              {
                "type": "reference",
                "argument": "appKey",
                "category": "hidden",
                "description": "Application API key"
              }
            ],
            "attributes": [
              {
                "type": "int64",
                "id": 1,
                "name": "phoneNumber"
              },
              {
                "type": "string",
                "id": 2,
                "name": "smsHash"
              },
              {
                "type": "string",
                "id": 3,
                "name": "smsCode"
              },
              {
                "type": "bytes",
                "id": 5,
                "name": "deviceHash"
              },
              {
                "type": "string",
                "id": 6,
                "name": "deviceTitle"
              },
              {
                "type": "int32",
                "id": 7,
                "name": "appId"
              },
              {
                "type": "string",
                "id": 8,
                "name": "appKey"
              }
            ]
          }
        },
        {
          "type": "rpc",
          "content": {
            "name": "SignUpObsolete",
            "header": 4,
            "response": {
              "type": "reference",
              "name": "Auth"
            },
            "doc": [
              "Performing user signup. If user perform signup on already registered user it just override previous",
              "profile information",
              {
                "type": "reference",
                "argument": "phoneNumber",
                "category": "danger",
                "description": "Phone number in international format"
              },
              {
                "type": "reference",
                "argument": "smsHash",
                "category": "danger",
                "description": "Code request hash from RequestAuthCode"
              },
              {
                "type": "reference",
                "argument": "smsCode",
                "category": "danger",
                "description": "Confirmation code from SMS"
              },
              {
                "type": "reference",
                "argument": "name",
                "category": "full",
                "description": "User name"
              },
              {
                "type": "reference",
                "argument": "deviceHash",
                "category": "full",
                "description": "Hash of device unique id and app bundle id. Used for autologout users when app is reinstalled"
              },
              {
                "type": "reference",
                "argument": "deviceTitle",
                "category": "full",
                "description": "Device title like 'Steven's iPhone'"
              },
              {
                "type": "reference",
                "argument": "appId",
                "category": "hidden",
                "description": "Application ID"
              },
              {
                "type": "reference",
                "argument": "appKey",
                "category": "hidden",
                "description": "pplication API key"
              }
            ],
            "attributes": [
              {
                "type": "int64",
                "id": 1,
                "name": "phoneNumber"
              },
              {
                "type": "string",
                "id": 2,
                "name": "smsHash"
              },
              {
                "type": "string",
                "id": 3,
                "name": "smsCode"
              },
              {
                "type": "string",
                "id": 4,
                "name": "name"
              },
              {
                "type": "bytes",
                "id": 7,
                "name": "deviceHash"
              },
              {
                "type": "string",
                "id": 8,
                "name": "deviceTitle"
              },
              {
                "type": "int32",
                "id": 9,
                "name": "appId"
              },
              {
                "type": "string",
                "id": 10,
                "name": "appKey"
              },
              {
                "type": "bool",
                "id": 11,
                "name": "isSilent"
              }
            ]
          }
        },
        {
          "type": "rpc",
          "content": {
            "name": "SendAuthCodeObsolete",
            "header": 1,
            "response": {
              "type": "anonymous",
              "header": 2,
              "doc": [
                "Sms Request response",
                {
                  "type": "reference",
                  "argument": "smsHash",
                  "category": "danger",
                  "description": "  Hash of SMS request"
                },
                {
                  "type": "reference",
                  "argument": "isRegistered",
                  "category": "full",
                  "description": "  true if user is registered"
                }
              ],
              "attributes": [
                {
                  "type": "string",
                  "id": 1,
                  "name": "smsHash"
                },
                {
                  "type": "bool",
                  "id": 2,
                  "name": "isRegistered"
                }
              ]
            },
            "doc": [
              "Sending SMS with activation code",
              {
                "type": "reference",
                "argument": "phoneNumber",
                "category": "full",
                "description": "Phone number in international format"
              },
              {
                "type": "reference",
                "argument": "appId",
                "category": "hidden",
                "description": "Application ID"
              },
              {
                "type": "reference",
                "argument": "apiKey",
                "category": "hidden",
                "description": "Application API key"
              }
            ],
            "attributes": [
              {
                "type": "int64",
                "id": 1,
                "name": "phoneNumber"
              },
              {
                "type": "int32",
                "id": 2,
                "name": "appId"
              },
              {
                "type": "string",
                "id": 3,
                "name": "apiKey"
              }
            ]
          }
        },
        {
          "type": "rpc",
          "content": {
            "name": "SendAuthCallObsolete",
            "header": 90,
            "response": {
              "type": "reference",
              "name": "Void"
            },
            "doc": [
              "Requesting Phone activation",
              {
                "type": "reference",
                "argument": "phoneNumber",
                "category": "full",
                "description": "Phone number in international format"
              },
              {
                "type": "reference",
                "argument": "smsHash",
                "category": "danger",
                "description": "Code request hash from RequestAuthCode"
              },
              {
                "type": "reference",
                "argument": "appId",
                "category": "hidden",
                "description": "Application ID"
              },
              {
                "type": "reference",
                "argument": "apiKey",
                "category": "hidden",
                "description": "Application API key"
              }
            ],
            "attributes": [
              {
                "type": "int64",
                "id": 1,
                "name": "phoneNumber"
              },
              {
                "type": "string",
                "id": 2,
                "name": "smsHash"
              },
              {
                "type": "int32",
                "id": 3,
                "name": "appId"
              },
              {
                "type": "string",
                "id": 4,
                "name": "apiKey"
              }
            ]
          }
        }
      ]
    },
    {
      "title": "Users",
      "package": "users",
      "doc": [
        "Users are objects that secured by accessHash. You can't load user profile by it's id.",
        "You can't send message to user without finding it's object in Updates or by calling",
        "method for user search, contacts import or some other methods.",
        "",
        "Applications need to keep all Users information forever.",
        "",
        "Each User have optional localName - name of user that was set by current user and can be changed",
        "any time by calling EditUserLocalName method."
      ],
      "items": [
        {
          "type": "enum",
          "content": {
            "name": "Sex",
            "values": [
              {
                "name": "Unknown",
                "id": 1
              },
              {
                "name": "Male",
                "id": 2
              },
              {
                "name": "Female",
                "id": 3
              }
            ]
          }
        },
        {
          "type": "enum",
          "content": {
            "name": "ContactType",
            "values": [
              {
                "name": "Phone",
                "id": 1
              },
              {
                "name": "Email",
                "id": 2
              },
              {
                "name": "Web",
                "id": 3
              },
              {
                "name": "Social",
                "id": 4
              }
            ]
          }
        },
        {
          "type": "struct",
          "content": {
            "name": "ContactRecord",
            "doc": [
              "Contact information record",
              {
                "type": "reference",
                "argument": "type",
                "category": "full",
                "description": "  Record type"
              },
              {
                "type": "reference",
                "argument": "typeSpec",
                "category": "hidden",
                "description": "  Value for specification type of contact, for example 'mobile/standalone/office' for phones or 'vk/fb/telegram' for extenrnal networks."
              },
              {
                "type": "reference",
                "argument": "stringValue",
                "category": "full",
                "description": "  String value of record"
              },
              {
                "type": "reference",
                "argument": "longValue",
                "category": "full",
                "description": "  Long value of record"
              },
              {
                "type": "reference",
                "argument": "title",
                "category": "full",
                "description": "  Title of record"
              },
              {
                "type": "reference",
                "argument": "subtitle",
                "category": "hidden",
                "description": "  Subtitle of record"
              }
            ],
            "expandable": "true",
            "attributes": [
              {
                "type": {
                  "type": "enum",
                  "childType": "ContactType"
                },
                "id": 1,
                "name": "type"
              },
              {
                "type": {
                  "type": "opt",
                  "childType": "string"
                },
                "id": 6,
                "name": "typeSpec"
              },
              {
                "type": {
                  "type": "opt",
                  "childType": "string"
                },
                "id": 2,
                "name": "stringValue"
              },
              {
                "type": {
                  "type": "opt",
                  "childType": "int64"
                },
                "id": 3,
                "name": "longValue"
              },
              {
                "type": {
                  "type": "opt",
                  "childType": "string"
                },
                "id": 4,
                "name": "title"
              },
              {
                "type": {
                  "type": "opt",
                  "childType": "string"
                },
                "id": 5,
                "name": "subtitle"
              }
            ]
          }
        },
        {
          "type": "struct",
          "content": {
            "name": "User",
            "doc": [
              "Main user object",
              {
                "type": "reference",
                "argument": "id",
                "category": "full",
                "description": "  uid"
              },
              {
                "type": "reference",
                "argument": "accessHash",
                "category": "danger",
                "description": "  user's access hash"
              },
              {
                "type": "reference",
                "argument": "name",
                "category": "full",
                "description": "  user's name"
              },
              {
                "type": "reference",
                "argument": "localName",
                "category": "full",
                "description": "  user's local name"
              },
              {
                "type": "reference",
                "argument": "nick",
                "category": "full",
                "description": "  User's nickname"
              },
              {
                "type": "reference",
                "argument": "about",
                "category": "full",
                "description": "  User's about information"
              },
              {
                "type": "reference",
                "argument": "sex",
                "category": "full",
                "description": "  optional sex of user"
              },
              {
                "type": "reference",
                "argument": "avatar",
                "category": "compact",
                "description": "  avatar of user"
              },
              {
                "type": "reference",
                "argument": "phone",
                "category": "full",
                "description": "  Obsolete phone number. Need to be set for API <= 1.5, not set for >= 1.5"
              },
              {
                "type": "reference",
                "argument": "contactInfo",
                "category": "compact",
                "description": "  phones of user"
              },
              {
                "type": "reference",
                "argument": "isBot",
                "category": "full",
                "description": "  Is user actually bot. By default is false."
              },
              {
                "type": "reference",
                "argument": "external",
                "category": "full",
                "description": "  If not null, is user come from outer network"
              },
              {
                "type": "reference",
                "argument": "preferredLanguages",
                "category": "full",
                "description": "  Preferred user languages"
              },
              {
                "type": "reference",
                "argument": "timeZone",
                "category": "full",
                "description": "  Time Zone of user in TZ format"
              }
            ],
            "expandable": "true",
            "attributes": [
              {
                "type": {
                  "type": "alias",
                  "childType": "userId"
                },
                "id": 1,
                "name": "id"
              },
              {
                "type": "int64",
                "id": 2,
                "name": "accessHash"
              },
              {
                "type": "string",
                "id": 3,
                "name": "name"
              },
              {
                "type": {
                  "type": "opt",
                  "childType": "string"
                },
                "id": 4,
                "name": "localName"
              },
              {
                "type": {
                  "type": "opt",
                  "childType": {
                    "type": "enum",
                    "childType": "Sex"
                  }
                },
                "id": 5,
                "name": "sex"
              },
              {
                "type": {
                  "type": "opt",
                  "childType": {
                    "type": "struct",
                    "childType": "Avatar"
                  }
                },
                "id": 8,
                "name": "avatar"
              },
              {
                "type": {
                  "type": "opt",
                  "childType": "int64"
                },
                "id": 7,
                "name": "phone",
                "deprecated": "true"
              },
              {
                "type": {
                  "type": "list",
                  "childType": {
                    "type": "struct",
                    "childType": "ContactRecord"
                  }
                },
                "id": 12,
                "name": "contactInfo"
              },
              {
                "type": {
                  "type": "opt",
                  "childType": "bool"
                },
                "id": 11,
                "name": "isBot"
              },
              {
                "type": {
                  "type": "opt",
                  "childType": "string"
                },
                "id": 13,
                "name": "nick"
              },
              {
                "type": {
                  "type": "opt",
                  "childType": "string"
                },
                "id": 14,
                "name": "about"
              },
              {
                "type": {
                  "type": "opt",
                  "childType": "string"
                },
                "id": 15,
                "name": "external"
              },
              {
                "type": {
                  "type": "list",
                  "childType": "string"
                },
                "id": 16,
                "name": "preferredLanguages"
              },
              {
                "type": {
                  "type": "opt",
                  "childType": "string"
                },
                "id": 17,
                "name": "timeZone"
              }
            ]
          }
        },
        {
          "type": "rpc",
          "content": {
            "name": "EditUserLocalName",
            "header": 96,
            "response": {
              "type": "reference",
              "name": "Seq"
            },
            "doc": [
              "Renaming of user's visible name",
              {
                "type": "reference",
                "argument": "uid",
                "category": "full",
                "description": "target User's uid"
              },
              {
                "type": "reference",
                "argument": "accessHash",
                "category": "danger",
                "description": "User's accessHash"
              },
              {
                "type": "reference",
                "argument": "name",
                "category": "full",
                "description": "New user name"
              }
            ],
            "attributes": [
              {
                "type": {
                  "type": "alias",
                  "childType": "userId"
                },
                "id": 1,
                "name": "uid"
              },
              {
                "type": "int64",
                "id": 2,
                "name": "accessHash"
              },
              {
                "type": "string",
                "id": 3,
                "name": "name"
              }
            ]
          }
        },
        {
          "type": "update",
          "content": {
            "name": "UserAvatarChanged",
            "header": 16,
            "doc": [
              "Update about avatar changed",
              {
                "type": "reference",
                "argument": "uid",
                "category": "full",
                "description": "  user's uid"
              },
              {
                "type": "reference",
                "argument": "avatar",
                "category": "compact",
                "description": "  user's new avatar"
              }
            ],
            "attributes": [
              {
                "type": {
                  "type": "alias",
                  "childType": "userId"
                },
                "id": 1,
                "name": "uid"
              },
              {
                "type": {
                  "type": "opt",
                  "childType": {
                    "type": "struct",
                    "childType": "Avatar"
                  }
                },
                "id": 2,
                "name": "avatar"
              }
            ]
          }
        },
        {
          "type": "update",
          "content": {
            "name": "UserNameChanged",
            "header": 32,
            "doc": [
              "Update about name changed",
              {
                "type": "reference",
                "argument": "uid",
                "category": "full",
                "description": "  user's uid"
              },
              {
                "type": "reference",
                "argument": "name",
                "category": "full",
                "description": "  user's name"
              }
            ],
            "attributes": [
              {
                "type": {
                  "type": "alias",
                  "childType": "userId"
                },
                "id": 1,
                "name": "uid"
              },
              {
                "type": "string",
                "id": 2,
                "name": "name"
              }
            ]
          }
        },
        {
          "type": "update",
          "content": {
            "name": "UserLocalNameChanged",
            "header": 51,
            "doc": [
              "Update about local name changed",
              {
                "type": "reference",
                "argument": "uid",
                "category": "full",
                "description": "  user's uid"
              },
              {
                "type": "reference",
                "argument": "localName",
                "category": "full",
                "description": "  new user's local name"
              }
            ],
            "attributes": [
              {
                "type": {
                  "type": "alias",
                  "childType": "userId"
                },
                "id": 1,
                "name": "uid"
              },
              {
                "type": {
                  "type": "opt",
                  "childType": "string"
                },
                "id": 2,
                "name": "localName"
              }
            ]
          }
        },
        {
          "type": "update",
          "content": {
            "name": "UserContactsChanged",
            "header": 134,
            "doc": [
              "Update about contact information change",
              {
                "type": "reference",
                "argument": "uid",
                "category": "full",
                "description": "  user's uid"
              },
              {
                "type": "reference",
                "argument": "contactRecords",
                "category": "compact",
                "description": "  new phones list"
              }
            ],
            "attributes": [
              {
                "type": {
                  "type": "alias",
                  "childType": "userId"
                },
                "id": 1,
                "name": "uid"
              },
              {
                "type": {
                  "type": "list",
                  "childType": {
                    "type": "struct",
                    "childType": "ContactRecord"
                  }
                },
                "id": 4,
                "name": "contactRecords"
              }
            ]
          }
        },
        {
          "type": "update",
          "content": {
            "name": "UserNickChanged",
            "header": 209,
            "doc": [
              "Update about nick changed",
              {
                "type": "reference",
                "argument": "uid",
                "category": "full",
                "description": "  user's uid"
              },
              {
                "type": "reference",
                "argument": "nickname",
                "category": "full",
                "description": "  user's new nickname"
              }
            ],
            "attributes": [
              {
                "type": {
                  "type": "alias",
                  "childType": "userId"
                },
                "id": 1,
                "name": "uid"
              },
              {
                "type": {
                  "type": "opt",
                  "childType": "string"
                },
                "id": 2,
                "name": "nickname"
              }
            ]
          }
        },
        {
          "type": "update",
          "content": {
            "name": "UserAboutChanged",
            "header": 210,
            "doc": [
              "Update about user's about changed",
              {
                "type": "reference",
                "argument": "uid",
                "category": "full",
                "description": "  User's uid"
              },
              {
                "type": "reference",
                "argument": "about",
                "category": "full",
                "description": "  User's about"
              }
            ],
            "attributes": [
              {
                "type": {
                  "type": "alias",
                  "childType": "userId"
                },
                "id": 1,
                "name": "uid"
              },
              {
                "type": {
                  "type": "opt",
                  "childType": "string"
                },
                "id": 2,
                "name": "about"
              }
            ]
          }
        },
        {
          "type": "update",
          "content": {
            "name": "UserPreferredLanguagesChanged",
            "header": 212,
            "doc": [
              "Update about user's preferred languages",
              {
                "type": "reference",
                "argument": "uid",
                "category": "full",
                "description": "  User's uid"
              },
              {
                "type": "reference",
                "argument": "preferredLanguages",
                "category": "full",
                "description": "  User's preferred languages. Can be empty."
              }
            ],
            "attributes": [
              {
                "type": {
                  "type": "alias",
                  "childType": "userId"
                },
                "id": 1,
                "name": "uid"
              },
              {
                "type": {
                  "type": "list",
                  "childType": "string"
                },
                "id": 2,
                "name": "preferredLanguages"
              }
            ]
          }
        },
        {
          "type": "update",
          "content": {
            "name": "UserTimeZoneChanged",
            "header": 216,
            "doc": [
              "User TimeZone changed",
              {
                "type": "reference",
                "argument": "uid",
                "category": "full",
                "description": "  User's uid"
              },
              {
                "type": "reference",
                "argument": "timeZone",
                "category": "full",
                "description": "  User's new time zone in TZ format"
              }
            ],
            "attributes": [
              {
                "type": {
                  "type": "alias",
                  "childType": "userId"
                },
                "id": 1,
                "name": "uid"
              },
              {
                "type": {
                  "type": "opt",
                  "childType": "string"
                },
                "id": 2,
                "name": "timeZone"
              }
            ]
          }
        }
      ]
    },
    {
      "title": "Profile",
      "package": "profile",
      "items": [
        {
          "type": "rpc",
          "content": {
            "name": "EditName",
            "header": 53,
            "response": {
              "type": "reference",
              "name": "Seq"
            },
            "doc": [
              "Changing account's name",
              {
                "type": "reference",
                "argument": "name",
                "category": "full",
                "description": "New name"
              }
            ],
            "attributes": [
              {
                "type": "string",
                "id": 1,
                "name": "name"
              }
            ]
          }
        },
        {
          "type": "rpc",
          "content": {
            "name": "EditNickName",
            "header": 205,
            "response": {
              "type": "reference",
              "name": "Seq"
            },
            "doc": [
              "Changing account's nickname",
              {
                "type": "reference",
                "argument": "nickname",
                "category": "full",
                "description": "New Nickname"
              }
            ],
            "attributes": [
              {
                "type": {
                  "type": "opt",
                  "childType": "string"
                },
                "id": 1,
                "name": "nickname"
              }
            ]
          }
        },
        {
          "type": "rpc",
          "content": {
            "name": "CheckNickName",
            "header": 206,
            "response": {
              "type": "reference",
              "name": "Bool"
            },
            "doc": [
              "Checking availability of nickname",
              {
                "type": "reference",
                "argument": "nickname",
                "category": "full",
                "description": "Nickname for checking"
              }
            ],
            "attributes": [
              {
                "type": "string",
                "id": 1,
                "name": "nickname"
              }
            ]
          }
        },
        {
          "type": "rpc",
          "content": {
            "name": "EditAbout",
            "header": 212,
            "response": {
              "type": "reference",
              "name": "Seq"
            },
            "doc": [
              "Changing about information",
              {
                "type": "reference",
                "argument": "about",
                "category": "full",
                "description": "new about information"
              }
            ],
            "attributes": [
              {
                "type": {
                  "type": "opt",
                  "childType": "string"
                },
                "id": 1,
                "name": "about"
              }
            ]
          }
        },
        {
          "type": "rpc",
          "content": {
            "name": "EditAvatar",
            "header": 31,
            "response": {
              "type": "anonymous",
              "header": 103,
              "doc": [
                "Response for change account avatar",
                {
                  "type": "reference",
                  "argument": "avatar",
                  "category": "full",
                  "description": "  New avatar"
                },
                {
                  "type": "reference",
                  "argument": "seq",
                  "category": "full",
                  "description": "  Sequence number"
                },
                {
                  "type": "reference",
                  "argument": "state",
                  "category": "compact",
                  "description": "  Sequence state"
                }
              ],
              "attributes": [
                {
                  "type": {
                    "type": "struct",
                    "childType": "Avatar"
                  },
                  "id": 1,
                  "name": "avatar"
                },
                {
                  "type": "int32",
                  "id": 2,
                  "name": "seq"
                },
                {
                  "type": {
                    "type": "alias",
                    "childType": "seq_state"
                  },
                  "id": 3,
                  "name": "state"
                }
              ]
            },
            "doc": [
              "Changing account's avatar",
              {
                "type": "reference",
                "argument": "fileLocation",
                "category": "compact",
                "description": "File Location of uploaded unencrypted avatar"
              }
            ],
            "attributes": [
              {
                "type": {
                  "type": "struct",
                  "childType": "FileLocation"
                },
                "id": 1,
                "name": "fileLocation"
              }
            ]
          }
        },
        {
          "type": "rpc",
          "content": {
            "name": "RemoveAvatar",
            "header": 91,
            "response": {
              "type": "reference",
              "name": "Seq"
            },
            "doc": [
              "Removing account's avatar"
            ],
            "attributes": []
          }
        },
        {
          "type": "rpc",
          "content": {
            "name": "EditMyTimeZone",
            "header": 144,
            "response": {
              "type": "reference",
              "name": "Seq"
            },
            "doc": [
              "Updating user's time zone",
              {
                "type": "reference",
                "argument": "tz",
                "category": "full",
                "description": "New Time Zone"
              }
            ],
            "attributes": [
              {
                "type": "string",
                "id": 1,
                "name": "tz"
              }
            ]
          }
        },
        {
          "type": "rpc",
          "content": {
            "name": "EditMyPreferredLanguages",
            "header": 145,
            "response": {
              "type": "reference",
              "name": "Seq"
            },
            "doc": [
              "Changing preffered languages",
              {
                "type": "reference",
                "argument": "preferredLanguages",
                "category": "full",
                "description": "Preffered Languages"
              }
            ],
            "attributes": [
              {
                "type": {
                  "type": "list",
                  "childType": "string"
                },
                "id": 1,
                "name": "preferredLanguages"
              }
            ]
          }
        }
      ]
    },
    {
      "title": "Contacts",
      "package": "contacts",
      "doc": [
        "Before working with contact list is is useful to import contacts from phone first by calling",
        "method ImportContacts#0x07.",
        "",
        "All phone numbers MUST be preprocessed before import by some library (like libphonenumber)",
        "and build international phone number depending on current users phone and/or locale.",
        "",
        "For loading contact list from server use GetContacts#0x57.",
        "If during this call there are some updates about contact list change",
        "it is recommended to call it again. Also applications need to sync contacts on application start.",
        "",
        "For searching for users without adding to contacts list use method FindContacts#0x70.",
        "",
        "For adding/deleting contacts AddContact#0x72 and DeleteContact#0x59."
      ],
      "items": [
        {
          "type": "struct",
          "content": {
            "name": "PhoneToImport",
            "doc": [
              "Phone for import",
              {
                "type": "reference",
                "argument": "phoneNumber",
                "category": "full",
                "description": "  phone number for import in international format"
              },
              {
                "type": "reference",
                "argument": "name",
                "category": "full",
                "description": "  optional name for contact"
              }
            ],
            "attributes": [
              {
                "type": "int64",
                "id": 1,
                "name": "phoneNumber"
              },
              {
                "type": {
                  "type": "opt",
                  "childType": "string"
                },
                "id": 2,
                "name": "name"
              }
            ]
          }
        },
        {
          "type": "struct",
          "content": {
            "name": "EmailToImport",
            "doc": [
              "Email for import",
              {
                "type": "reference",
                "argument": "email",
                "category": "full",
                "description": "  email for importing"
              },
              {
                "type": "reference",
                "argument": "name",
                "category": "full",
                "description": "  optional name for contact"
              }
            ],
            "attributes": [
              {
                "type": "string",
                "id": 1,
                "name": "email"
              },
              {
                "type": {
                  "type": "opt",
                  "childType": "string"
                },
                "id": 2,
                "name": "name"
              }
            ]
          }
        },
        {
          "type": "rpc",
          "content": {
            "name": "ImportContacts",
            "header": 7,
            "response": {
              "type": "anonymous",
              "header": 8,
              "doc": [
                "Imported contacts",
                {
                  "type": "reference",
                  "argument": "users",
                  "category": "compact",
                  "description": "  Imported users"
                },
                {
                  "type": "reference",
                  "argument": "seq",
                  "category": "full",
                  "description": "  Sequence number if users are imported"
                },
                {
                  "type": "reference",
                  "argument": "state",
                  "category": "compact",
                  "description": "  Sequence state if users are imported"
                }
              ],
              "attributes": [
                {
                  "type": {
                    "type": "list",
                    "childType": {
                      "type": "struct",
                      "childType": "User"
                    }
                  },
                  "id": 1,
                  "name": "users"
                },
                {
                  "type": "int32",
                  "id": 2,
                  "name": "seq"
                },
                {
                  "type": {
                    "type": "alias",
                    "childType": "seq_state"
                  },
                  "id": 3,
                  "name": "state"
                }
              ]
            },
            "doc": [
              "Importing phones and emails for building contact list",
              "Maximum amount of items for import per method call equals to 100.",
              {
                "type": "reference",
                "argument": "phones",
                "category": "compact",
                "description": "Phones for import"
              },
              {
                "type": "reference",
                "argument": "emails",
                "category": "compact",
                "description": "Emails for import"
              }
            ],
            "attributes": [
              {
                "type": {
                  "type": "list",
                  "childType": {
                    "type": "struct",
                    "childType": "PhoneToImport"
                  }
                },
                "id": 1,
                "name": "phones"
              },
              {
                "type": {
                  "type": "list",
                  "childType": {
                    "type": "struct",
                    "childType": "EmailToImport"
                  }
                },
                "id": 2,
                "name": "emails"
              }
            ]
          }
        },
        {
          "type": "empty"
        },
        {
          "type": "rpc",
          "content": {
            "name": "GetContacts",
            "header": 87,
            "response": {
              "type": "anonymous",
              "header": 88,
              "doc": [
                "Current contact list",
                {
                  "type": "reference",
                  "argument": "users",
                  "category": "hidden",
                  "description": "  User list if list is changed"
                },
                {
                  "type": "reference",
                  "argument": "isNotChanged",
                  "category": "full",
                  "description": "  is list changed"
                }
              ],
              "attributes": [
                {
                  "type": {
                    "type": "list",
                    "childType": {
                      "type": "struct",
                      "childType": "User"
                    }
                  },
                  "id": 1,
                  "name": "users"
                },
                {
                  "type": "bool",
                  "id": 2,
                  "name": "isNotChanged"
                }
              ]
            },
            "doc": [
              "Getting current contact list",
              "SHA256 hash of list of a comma-separated list of contact UIDs in ascending",
              "order may be passed in contactsHash parameter.",
              "If the contact list was not changed, isNotChanged will be true.",
              {
                "type": "reference",
                "argument": "contactsHash",
                "category": "full",
                "description": "Hash of saved list in application"
              }
            ],
            "attributes": [
              {
                "type": "string",
                "id": 1,
                "name": "contactsHash"
              }
            ]
          }
        },
        {
          "type": "rpc",
          "content": {
            "name": "RemoveContact",
            "header": 89,
            "response": {
              "type": "reference",
              "name": "Seq"
            },
            "doc": [
              "Removing contact from contact list",
              {
                "type": "reference",
                "argument": "uid",
                "category": "full",
                "description": "Contact's UID"
              },
              {
                "type": "reference",
                "argument": "accessHash",
                "category": "danger",
                "description": "Contact's AccessHash"
              }
            ],
            "attributes": [
              {
                "type": {
                  "type": "alias",
                  "childType": "userId"
                },
                "id": 1,
                "name": "uid"
              },
              {
                "type": "int64",
                "id": 2,
                "name": "accessHash"
              }
            ]
          }
        },
        {
          "type": "rpc",
          "content": {
            "name": "AddContact",
            "header": 114,
            "response": {
              "type": "reference",
              "name": "Seq"
            },
            "doc": [
              "Adding contact to contact list",
              {
                "type": "reference",
                "argument": "uid",
                "category": "full",
                "description": "Contact's UID"
              },
              {
                "type": "reference",
                "argument": "accessHash",
                "category": "danger",
                "description": "Contact's AccessHash"
              }
            ],
            "attributes": [
              {
                "type": {
                  "type": "alias",
                  "childType": "userId"
                },
                "id": 1,
                "name": "uid"
              },
              {
                "type": "int64",
                "id": 2,
                "name": "accessHash"
              }
            ]
          }
        },
        {
          "type": "rpc",
          "content": {
            "name": "SearchContacts",
            "header": 112,
            "response": {
              "type": "anonymous",
              "header": 113,
              "doc": [
                "Founded users",
                {
                  "type": "reference",
                  "argument": "users",
                  "category": "compact",
                  "description": "  Founded users"
                }
              ],
              "attributes": [
                {
                  "type": {
                    "type": "list",
                    "childType": {
                      "type": "struct",
                      "childType": "User"
                    }
                  },
                  "id": 1,
                  "name": "users"
                }
              ]
            },
            "doc": [
              "Searching contacts by user's query",
              {
                "type": "reference",
                "argument": "request",
                "category": "full",
                "description": "Search query"
              }
            ],
            "attributes": [
              {
                "type": "string",
                "id": 1,
                "name": "request"
              }
            ]
          }
        },
        {
          "type": "empty"
        },
        {
          "type": "update",
          "content": {
            "name": "ContactRegistered",
            "header": 5,
            "doc": [
              "Update about contact registration",
              {
                "type": "reference",
                "argument": "uid",
                "category": "full",
                "description": "  contact's uid"
              },
              {
                "type": "reference",
                "argument": "isSilent",
                "category": "full",
                "description": "  is registration silent. If this value is true then don't show notification about registration"
              },
              {
                "type": "reference",
                "argument": "date",
                "category": "full",
                "description": "  date of registration"
              }
            ],
            "attributes": [
              {
                "type": {
                  "type": "alias",
                  "childType": "userId"
                },
                "id": 1,
                "name": "uid"
              },
              {
                "type": "bool",
                "id": 2,
                "name": "isSilent"
              },
              {
                "type": {
                  "type": "alias",
                  "childType": "date"
                },
                "id": 3,
                "name": "date"
              },
              {
                "type": {
                  "type": "alias",
                  "childType": "randomId"
                },
                "id": 4,
                "name": "rid"
              }
            ]
          }
        },
        {
          "type": "update",
          "content": {
            "name": "ContactsAdded",
            "header": 40,
            "doc": [
              "Update about contacts added",
              {
                "type": "reference",
                "argument": "uids",
                "category": "compact",
                "description": "  added contacts"
              }
            ],
            "attributes": [
              {
                "type": {
                  "type": "list",
                  "childType": {
                    "type": "alias",
                    "childType": "userId"
                  }
                },
                "id": 1,
                "name": "uids"
              }
            ]
          }
        },
        {
          "type": "update",
          "content": {
            "name": "ContactsRemoved",
            "header": 41,
            "doc": [
              "Update about contacts removed",
              {
                "type": "reference",
                "argument": "uids",
                "category": "compact",
                "description": "  removed contacts"
              }
            ],
            "attributes": [
              {
                "type": {
                  "type": "list",
                  "childType": {
                    "type": "alias",
                    "childType": "userId"
                  }
                },
                "id": 1,
                "name": "uids"
              }
            ]
          }
        }
      ]
    },
    {
      "title": "Messaging",
      "package": "messaging",
      "doc": [
        "Actor can work with encrypted and plain messages in one conversation. For both types of messages API",
        "contains a bit different methods. Also encrypted and plain messages have different schemes.",
        "<h3>Messages</h3>",
        "Message entity contains:",
        "<ul>",
        "<li>PeerType - group chat or private</li>",
        "<li>PeerId - group or user id of conversation</li>",
        "<li>RandomId - unique id of message that generated by sender. In Encrypted messages random id is encrypted.</li>",
        "<li>Date - date of message (calculated on server)</li>",
        "<li>Content</li>",
        "</ul>",
        "<h3>Message content</h3>",
        "Message can be one of three basic types of messages: Text Message, File Message and Service message.",
        "All messages can contain extensions. For example we can send text message and add markdown extension with",
        "formatted text in markdown and clients that support this extension will show markdown, and that clients that",
        "not supported extension then show simple text. File messages can have photo, video or voice extensions.",
        "Service message can have extensions extensions such as \"user added\", \"group created\", \"avatar changed\", etc.",
        "<h3>Send messages</h3>",
        "Sending messages looks same for encrypted and plain messages. Client MUST prepare all required data",
        "before sending message (for example FastThumb for photo/video/documents) and call required methods.",
        "Encrypted messages differs here only by a little different scheme and encryption.",
        "<h3>WRONG_KEYS and incorrect keys</h3>",
        "For sending encrypted messages client MUST send messages encrypted for all own and receivers keys.",
        "If client send encryption with missing, old or incorrect keys it will receive WRONG_KEYS.",
        "In WRONG_KEYS you need to deserialize relatedData from RpcError to WrongKeysErrorData",
        "and get detailed information about keys. Sometimes there are some broken keys on server and client can't",
        "encrypt messages with it than client MUST send empty encrypted key in request elsewhere API return WRONG_KEYS.",
        "<h3>Encrypted messages and New Devices</h3>",
        "When you send message to someone and when he registered with new device there are no way to receive old encrypted",
        "messages on new device and because of this there are a problem about read/delivery statuses.",
        "Alice send messages to Bob, but Bob lose his device and  buy new iPhone and installed Actor.",
        "Alice receive notification about new device and send another message. Bob open chat with Alice and",
        "send read status with maximum message read date. Alice will mark all sent messages as read and one that",
        "was not delivered. We can use status notifications per message, but in VERY heavy conversations it will be",
        "a lot of unnecessary traffic. For resolving this small issue we have different ways of message statuses",
        "for encrypted and plain messages. Also it is recomended to mark all undelivered messages on new device update as",
        "not devered with warring sign.",
        "<h3>Message Read and Delivery</h3>",
        "There are two different ways for read and delivery statuses for encrypted and plain messages.",
        "For encrypted messages used status change by RandomId and for plain messages used by maximum",
        "date of read/delivered message."
      ],
      "items": [
        {
          "type": "trait",
          "content": {
            "isContainer": "true",
            "name": "Message",
            "attributes": []
          }
        },
        {
          "type": "struct",
          "content": {
            "name": "TextMessage",
            "doc": [
              "Text message",
              {
                "type": "reference",
                "argument": "text",
                "category": "danger",
                "description": "  the text"
              },
              {
                "type": "reference",
                "argument": "mentions",
                "category": "full",
                "description": "  User mentions in message"
              },
              {
                "type": "reference",
                "argument": "ext",
                "category": "full",
                "description": "  Optional bytes of extension"
              }
            ],
            "trait": {
              "name": "Message",
              "key": 1
            },
            "expandable": "true",
            "attributes": [
              {
                "type": "string",
                "id": 1,
                "name": "text"
              },
              {
                "type": {
                  "type": "list",
                  "childType": {
                    "type": "alias",
                    "childType": "userId"
                  }
                },
                "id": 2,
                "name": "mentions"
              },
              {
                "type": {
                  "type": "opt",
                  "childType": {
                    "type": "trait",
                    "childType": "TextMessageEx"
                  }
                },
                "id": 3,
                "name": "ext"
              }
            ]
          }
        },
        {
          "type": "trait",
          "content": {
            "isContainer": "true",
            "name": "TextMessageEx",
            "attributes": []
          }
        },
        {
          "type": "struct",
          "content": {
            "name": "TextExMarkdown",
            "doc": [
              "Markdown extension",
              {
                "type": "reference",
                "argument": "markdown",
                "category": "full",
                "description": "  Markdown text"
              }
            ],
            "trait": {
              "name": "TextMessageEx",
              "key": 1
            },
            "expandable": "true",
            "attributes": [
              {
                "type": "string",
                "id": 2,
                "name": "markdown"
              }
            ]
          }
        },
        {
          "type": "struct",
          "content": {
            "name": "TextModernMessage",
            "doc": [
              "Modern text message",
              {
                "type": "reference",
                "argument": "text",
                "category": "full",
                "description": "  optional text of message"
              },
              {
                "type": "reference",
                "argument": "senderNameOverride",
                "category": "full",
                "description": "  optional overriding of sender"
              },
              {
                "type": "reference",
                "argument": "senderPhotoOverride",
                "category": "full",
                "description": "  optional overriding sender's photo"
              },
              {
                "type": "reference",
                "argument": "style",
                "category": "full",
                "description": "  optional paragraph style"
              },
              {
                "type": "reference",
                "argument": "attaches",
                "category": "full",
                "description": "  optional Attaches of message"
              }
            ],
            "trait": {
              "name": "TextMessageEx",
              "key": 2
            },
            "expandable": "true",
            "attributes": [
              {
                "type": {
                  "type": "opt",
                  "childType": "string"
                },
                "id": 1,
                "name": "text"
              },
              {
                "type": {
                  "type": "opt",
                  "childType": "string"
                },
                "id": 2,
                "name": "senderNameOverride"
              },
              {
                "type": {
                  "type": "opt",
                  "childType": {
                    "type": "struct",
                    "childType": "Avatar"
                  }
                },
                "id": 3,
                "name": "senderPhotoOverride"
              },
              {
                "type": {
                  "type": "opt",
                  "childType": {
                    "type": "struct",
                    "childType": "ParagraphStyle"
                  }
                },
                "id": 4,
                "name": "style"
              },
              {
                "type": {
                  "type": "list",
                  "childType": {
                    "type": "struct",
                    "childType": "TextModernAttach"
                  }
                },
                "id": 5,
                "name": "attaches"
              }
            ]
          }
        },
        {
          "type": "struct",
          "content": {
            "name": "ParagraphStyle",
            "doc": [
              "Paragraph style",
              {
                "type": "reference",
                "argument": "showParagraph",
                "category": "full",
                "description": "  Show quote-like paragraph?"
              },
              {
                "type": "reference",
                "argument": "paragraphColor",
                "category": "full",
                "description": "  Override paragraph color"
              },
              {
                "type": "reference",
                "argument": "bgColor",
                "category": "full",
                "description": "  Override background color"
              }
            ],
            "attributes": [
              {
                "type": {
                  "type": "opt",
                  "childType": "bool"
                },
                "id": 1,
                "name": "showParagraph"
              },
              {
                "type": {
                  "type": "opt",
                  "childType": {
                    "type": "trait",
                    "childType": "Color"
                  }
                },
                "id": 2,
                "name": "paragraphColor"
              },
              {
                "type": {
                  "type": "opt",
                  "childType": {
                    "type": "trait",
                    "childType": "Color"
                  }
                },
                "id": 3,
                "name": "bgColor"
              }
            ]
          }
        },
        {
          "type": "struct",
          "content": {
            "name": "TextModernAttach",
            "doc": [
              "Attaches to message",
              {
                "type": "reference",
                "argument": "title",
                "category": "full",
                "description": "  Attach of message"
              },
              {
                "type": "reference",
                "argument": "titleUrl",
                "category": "full",
                "description": "  Attach title url"
              },
              {
                "type": "reference",
                "argument": "titleIcon",
                "category": "full",
                "description": "  Attach title icon"
              },
              {
                "type": "reference",
                "argument": "text",
                "category": "full",
                "description": "  Attach text"
              },
              {
                "type": "reference",
                "argument": "style",
                "category": "full",
                "description": "  Attach style"
              }
            ],
            "expandable": "true",
            "attributes": [
              {
                "type": {
                  "type": "opt",
                  "childType": "string"
                },
                "id": 1,
                "name": "title"
              },
              {
                "type": {
                  "type": "opt",
                  "childType": "string"
                },
                "id": 2,
                "name": "titleUrl"
              },
              {
                "type": {
                  "type": "opt",
                  "childType": {
                    "type": "struct",
                    "childType": "ImageLocation"
                  }
                },
                "id": 3,
                "name": "titleIcon"
              },
              {
                "type": {
                  "type": "opt",
                  "childType": "string"
                },
                "id": 4,
                "name": "text"
              },
              {
                "type": {
                  "type": "opt",
                  "childType": {
                    "type": "struct",
                    "childType": "ParagraphStyle"
                  }
                },
                "id": 5,
                "name": "style"
              },
              {
                "type": {
                  "type": "list",
                  "childType": {
                    "type": "struct",
                    "childType": "TextModernField"
                  }
                },
                "id": 6,
                "name": "fields"
              }
            ]
          }
        },
        {
          "type": "struct",
          "content": {
            "name": "TextModernField",
            "doc": [
              "Modern message fields",
              {
                "type": "reference",
                "argument": "title",
                "category": "full",
                "description": "  Field title"
              },
              {
                "type": "reference",
                "argument": "value",
                "category": "full",
                "description": "  Field value"
              },
              {
                "type": "reference",
                "argument": "isShort",
                "category": "full",
                "description": "  Is field can be shown in compact way (default is TRUE)"
              }
            ],
            "expandable": "true",
            "attributes": [
              {
                "type": "string",
                "id": 1,
                "name": "title"
              },
              {
                "type": "string",
                "id": 2,
                "name": "value"
              },
              {
                "type": {
                  "type": "opt",
                  "childType": "bool"
                },
                "id": 3,
                "name": "isShort"
              }
            ]
          }
        },
        {
          "type": "struct",
          "content": {
            "name": "ServiceMessage",
            "doc": [
              "Service message",
              {
                "type": "reference",
                "argument": "text",
                "category": "full",
                "description": "  service message text"
              },
              {
                "type": "reference",
                "argument": "ext",
                "category": "compact",
                "description": "  Extension"
              }
            ],
            "trait": {
              "name": "Message",
              "key": 2
            },
            "expandable": "true",
            "attributes": [
              {
                "type": "string",
                "id": 1,
                "name": "text"
              },
              {
                "type": {
                  "type": "opt",
                  "childType": {
                    "type": "trait",
                    "childType": "ServiceEx"
                  }
                },
                "id": 3,
                "name": "ext"
              }
            ]
          }
        },
        {
          "type": "trait",
          "content": {
            "isContainer": "true",
            "name": "ServiceEx",
            "attributes": []
          }
        },
        {
          "type": "struct",
          "content": {
            "name": "ServiceExUserInvited",
            "doc": [
              "Service message about adding user to group",
              {
                "type": "reference",
                "argument": "invitedUid",
                "category": "full",
                "description": "  added user id"
              }
            ],
            "trait": {
              "name": "ServiceEx",
              "key": 1
            },
            "expandable": "true",
            "attributes": [
              {
                "type": {
                  "type": "alias",
                  "childType": "userId"
                },
                "id": 1,
                "name": "invitedUid"
              }
            ]
          }
        },
        {
          "type": "struct",
          "content": {
            "name": "ServiceExUserJoined",
            "doc": [
              "Service message about user join to group"
            ],
            "trait": {
              "name": "ServiceEx",
              "key": 17
            },
            "expandable": "true",
            "attributes": []
          }
        },
        {
          "type": "struct",
          "content": {
            "name": "ServiceExUserKicked",
            "doc": [
              "Service message about kicking user from group",
              {
                "type": "reference",
                "argument": "kickedUid",
                "category": "full",
                "description": "  kicked user id"
              }
            ],
            "trait": {
              "name": "ServiceEx",
              "key": 2
            },
            "expandable": "true",
            "attributes": [
              {
                "type": {
                  "type": "alias",
                  "childType": "userId"
                },
                "id": 1,
                "name": "kickedUid"
              }
            ]
          }
        },
        {
          "type": "struct",
          "content": {
            "name": "ServiceExUserLeft",
            "doc": [
              "Service message about user left group"
            ],
            "trait": {
              "name": "ServiceEx",
              "key": 3
            },
            "expandable": "true",
            "attributes": []
          }
        },
        {
          "type": "struct",
          "content": {
            "name": "ServiceExGroupCreated",
            "doc": [
              "Service message about group creating"
            ],
            "trait": {
              "name": "ServiceEx",
              "key": 4
            },
            "expandable": "true",
            "attributes": []
          }
        },
        {
          "type": "struct",
          "content": {
            "name": "ServiceExChangedTitle",
            "doc": [
              "Service message about group title change",
              {
                "type": "reference",
                "argument": "title",
                "category": "full",
                "description": "  New group title"
              }
            ],
            "trait": {
              "name": "ServiceEx",
              "key": 5
            },
            "expandable": "true",
            "attributes": [
              {
                "type": "string",
                "id": 1,
                "name": "title"
              }
            ]
          }
        },
        {
          "type": "struct",
          "content": {
            "name": "ServiceExChangedTopic",
            "doc": [
              "Service message on group topic change",
              {
                "type": "reference",
                "argument": "topic",
                "category": "full",
                "description": "  New group topic"
              }
            ],
            "trait": {
              "name": "ServiceEx",
              "key": 18
            },
            "expandable": "true",
            "attributes": [
              {
                "type": {
                  "type": "opt",
                  "childType": "string"
                },
                "id": 1,
                "name": "topic"
              }
            ]
          }
        },
        {
          "type": "struct",
          "content": {
            "name": "ServiceExChangedAbout",
            "doc": [
              "Service message on group about change",
              {
                "type": "reference",
                "argument": "about",
                "category": "full",
                "description": "  New group about"
              }
            ],
            "trait": {
              "name": "ServiceEx",
              "key": 19
            },
            "expandable": "true",
            "attributes": [
              {
                "type": {
                  "type": "opt",
                  "childType": "string"
                },
                "id": 1,
                "name": "about"
              }
            ]
          }
        },
        {
          "type": "struct",
          "content": {
            "name": "ServiceExChangedAvatar",
            "doc": [
              "Service message about avatar change",
              {
                "type": "reference",
                "argument": "avatar",
                "category": "compact",
                "description": "  Updated avatar"
              }
            ],
            "trait": {
              "name": "ServiceEx",
              "key": 6
            },
            "expandable": "true",
            "attributes": [
              {
                "type": {
                  "type": "opt",
                  "childType": {
                    "type": "struct",
                    "childType": "Avatar"
                  }
                },
                "id": 1,
                "name": "avatar"
              }
            ]
          }
        },
        {
          "type": "struct",
          "content": {
            "name": "ServiceExContactRegistered",
            "doc": [
              "Service message about user registration",
              {
                "type": "reference",
                "argument": "uid",
                "category": "full",
                "description": "  User Id"
              }
            ],
            "trait": {
              "name": "ServiceEx",
              "key": 8
            },
            "expandable": "true",
            "attributes": [
              {
                "type": {
                  "type": "alias",
                  "childType": "userId"
                },
                "id": 1,
                "name": "uid"
              }
            ]
          }
        },
        {
          "type": "struct",
          "content": {
            "name": "ServiceExPhoneMissed",
            "doc": [
              "Update about missing phone call"
            ],
            "trait": {
              "name": "ServiceEx",
              "key": 9
            },
            "expandable": "true",
            "attributes": []
          }
        },
        {
          "type": "struct",
          "content": {
            "name": "ServiceExPhoneCall",
            "doc": [
              "Update about phone call"
            ],
            "trait": {
              "name": "ServiceEx",
              "key": 16
            },
            "expandable": "true",
            "attributes": [
              {
                "type": "int32",
                "id": 1,
                "name": "duration"
              }
            ]
          }
        },
        {
          "type": "struct",
          "content": {
            "name": "DocumentMessage",
            "doc": [
              "File message",
              {
                "type": "reference",
                "argument": "fileId",
                "category": "full",
                "description": "  file id"
              },
              {
                "type": "reference",
                "argument": "accessHash",
                "category": "danger",
                "description": "  file access hash"
              },
              {
                "type": "reference",
                "argument": "fileSize",
                "category": "full",
                "description": "  file size"
              },
              {
                "type": "reference",
                "argument": "name",
                "category": "full",
                "description": "  name of file"
              },
              {
                "type": "reference",
                "argument": "mimeType",
                "category": "full",
                "description": "  mimetype of file"
              },
              {
                "type": "reference",
                "argument": "thumb",
                "category": "compact",
                "description": "  optional thumb of file. JPEG less that 90x90 with 60-70 quality."
              },
              {
                "type": "reference",
                "argument": "ext",
                "category": "compact",
                "description": "  Extension"
              }
            ],
            "trait": {
              "name": "Message",
              "key": 3
            },
            "expandable": "true",
            "attributes": [
              {
                "type": "int64",
                "id": 1,
                "name": "fileId"
              },
              {
                "type": "int64",
                "id": 2,
                "name": "accessHash"
              },
              {
                "type": "int32",
                "id": 3,
                "name": "fileSize"
              },
              {
                "type": "string",
                "id": 4,
                "name": "name"
              },
              {
                "type": "string",
                "id": 5,
                "name": "mimeType"
              },
              {
                "type": {
                  "type": "opt",
                  "childType": {
                    "type": "struct",
                    "childType": "FastThumb"
                  }
                },
                "id": 6,
                "name": "thumb"
              },
              {
                "type": {
                  "type": "opt",
                  "childType": {
                    "type": "trait",
                    "childType": "DocumentEx"
                  }
                },
                "id": 8,
                "name": "ext"
              }
            ]
          }
        },
        {
          "type": "trait",
          "content": {
            "isContainer": "true",
            "name": "DocumentEx",
            "attributes": []
          }
        },
        {
          "type": "struct",
          "content": {
            "name": "DocumentExPhoto",
            "doc": [
              "File photo extension",
              {
                "type": "reference",
                "argument": "w",
                "category": "full",
                "description": "  image width"
              },
              {
                "type": "reference",
                "argument": "h",
                "category": "full",
                "description": "  image height"
              }
            ],
            "trait": {
              "name": "DocumentEx",
              "key": 1
            },
            "expandable": "true",
            "attributes": [
              {
                "type": "int32",
                "id": 1,
                "name": "w"
              },
              {
                "type": "int32",
                "id": 2,
                "name": "h"
              }
            ]
          }
        },
        {
          "type": "struct",
          "content": {
            "name": "DocumentExVideo",
            "doc": [
              "File video extension",
              {
                "type": "reference",
                "argument": "w",
                "category": "full",
                "description": "  video width"
              },
              {
                "type": "reference",
                "argument": "h",
                "category": "full",
                "description": "  video height"
              },
              {
                "type": "reference",
                "argument": "duration",
                "category": "full",
                "description": "  video duration"
              }
            ],
            "trait": {
              "name": "DocumentEx",
              "key": 2
            },
            "expandable": "true",
            "attributes": [
              {
                "type": "int32",
                "id": 1,
                "name": "w"
              },
              {
                "type": "int32",
                "id": 2,
                "name": "h"
              },
              {
                "type": "int32",
                "id": 3,
                "name": "duration"
              }
            ]
          }
        },
        {
          "type": "struct",
          "content": {
            "name": "DocumentExVoice",
            "doc": [
              "File voice extension",
              {
                "type": "reference",
                "argument": "duration",
                "category": "full",
                "description": "  voice duration"
              }
            ],
            "trait": {
              "name": "DocumentEx",
              "key": 3
            },
            "expandable": "true",
            "attributes": [
              {
                "type": "int32",
                "id": 1,
                "name": "duration"
              }
            ]
          }
        },
        {
          "type": "struct",
          "content": {
            "name": "JsonMessage",
            "doc": [
              "Custom-data JsonMessage",
              {
                "type": "reference",
                "argument": "rawJson",
                "category": "danger",
                "description": "  JSON object"
              }
            ],
            "trait": {
              "name": "Message",
              "key": 4
            },
            "expandable": "true",
            "attributes": [
              {
                "type": "string",
                "id": 1,
                "name": "rawJson"
              }
            ]
          }
        },
        {
          "type": "struct",
          "content": {
            "name": "UnsupportedMessage",
            "doc": [
              "Explicit type for unsupported message"
            ],
            "trait": {
              "name": "Message",
              "key": 5
            },
            "expandable": "true",
            "attributes": []
          }
        },
        {
          "type": "struct",
          "content": {
            "name": "StickerMessage",
            "doc": [
              "Sticker message",
              {
                "type": "reference",
                "argument": "stickerId",
                "category": "full",
                "description": "  Optional Unique ID of sticker"
              },
              {
                "type": "reference",
                "argument": "fastPreview",
                "category": "full",
                "description": "  Optional Fast preview of sticker in webp format"
              },
              {
                "type": "reference",
                "argument": "image512",
                "category": "full",
                "description": "  Optional 512x512 sticker image in webp format"
              },
              {
                "type": "reference",
                "argument": "image256",
                "category": "full",
                "description": "  Optional 256x256 sticker image in webp format"
              },
              {
                "type": "reference",
                "argument": "stickerCollectionId",
                "category": "full",
                "description": "  Optional Collection ID"
              },
              {
                "type": "reference",
                "argument": "stickerCollectionAccessHash",
                "category": "full",
                "description": "  Optional Collection Access Hash"
              }
            ],
            "trait": {
              "name": "Message",
              "key": 6
            },
            "expandable": "true",
            "attributes": [
              {
                "type": {
                  "type": "opt",
                  "childType": "int32"
                },
                "id": 1,
                "name": "stickerId"
              },
              {
                "type": {
                  "type": "opt",
                  "childType": "bytes"
                },
                "id": 2,
                "name": "fastPreview"
              },
              {
                "type": {
                  "type": "opt",
                  "childType": {
                    "type": "struct",
                    "childType": "ImageLocation"
                  }
                },
                "id": 3,
                "name": "image512"
              },
              {
                "type": {
                  "type": "opt",
                  "childType": {
                    "type": "struct",
                    "childType": "ImageLocation"
                  }
                },
                "id": 4,
                "name": "image256"
              },
              {
                "type": {
                  "type": "opt",
                  "childType": "int32"
                },
                "id": 5,
                "name": "stickerCollectionId"
              },
              {
                "type": {
                  "type": "opt",
                  "childType": "int64"
                },
                "id": 6,
                "name": "stickerCollectionAccessHash"
              }
            ]
          }
        },
        {
          "type": "struct",
          "content": {
            "name": "DialogShort",
            "doc": [
              "Short Dialog from grouped conversation list",
              {
                "type": "reference",
                "argument": "peer",
                "category": "full",
                "description": "  Peer of conversation"
              },
              {
                "type": "reference",
                "argument": "counter",
                "category": "full",
                "description": "  Conversation unread count"
              },
              {
                "type": "reference",
                "argument": "date",
                "category": "full",
                "description": "  Conversation top message date"
              }
            ],
            "attributes": [
              {
                "type": {
                  "type": "struct",
                  "childType": "Peer"
                },
                "id": 1,
                "name": "peer"
              },
              {
                "type": "int32",
                "id": 2,
                "name": "counter"
              },
              {
                "type": {
                  "type": "alias",
                  "childType": "date"
                },
                "id": 4,
                "name": "date"
              }
            ]
          }
        },
        {
          "type": "struct",
          "content": {
            "name": "DialogGroup",
            "doc": [
              "Grouped dialog list",
              {
                "type": "reference",
                "argument": "title",
                "category": "full",
                "description": "  Title of group"
              },
              {
                "type": "reference",
                "argument": "key",
                "category": "full",
                "description": "  Key of group"
              },
              {
                "type": "reference",
                "argument": "dialogs",
                "category": "full",
                "description": "  Conversations in group"
              }
            ],
            "attributes": [
              {
                "type": "string",
                "id": 1,
                "name": "title"
              },
              {
                "type": "string",
                "id": 2,
                "name": "key"
              },
              {
                "type": {
                  "type": "list",
                  "childType": {
                    "type": "struct",
                    "childType": "DialogShort"
                  }
                },
                "id": 3,
                "name": "dialogs"
              }
            ]
          }
        },
        {
          "type": "struct",
          "content": {
            "name": "MessageReaction",
            "doc": [
              "Reaction to message",
              {
                "type": "reference",
                "argument": "users",
                "category": "full",
                "description": "  User's reaction"
              },
              {
                "type": "reference",
                "argument": "code",
                "category": "full",
                "description": "  Reaction EMOJI code"
              }
            ],
            "attributes": [
              {
                "type": {
                  "type": "list",
                  "childType": {
                    "type": "alias",
                    "childType": "userId"
                  }
                },
                "id": 1,
                "name": "users"
              },
              {
                "type": "string",
                "id": 2,
                "name": "code"
              }
            ]
          }
        },
        {
          "type": "rpc",
          "content": {
            "name": "SendMessage",
            "header": 92,
            "response": {
              "type": "reference",
              "name": "SeqDate"
            },
            "doc": [
              "Sending plain message",
              {
                "type": "reference",
                "argument": "peer",
                "category": "full",
                "description": "Destination peer for message (now supported only user's peer)"
              },
              {
                "type": "reference",
                "argument": "rid",
                "category": "full",
                "description": "Message random id (generated on clien side)"
              },
              {
                "type": "reference",
                "argument": "message",
                "category": "full",
                "description": "The message"
              }
            ],
            "attributes": [
              {
                "type": {
                  "type": "struct",
                  "childType": "OutPeer"
                },
                "id": 1,
                "name": "peer"
              },
              {
                "type": {
                  "type": "alias",
                  "childType": "randomId"
                },
                "id": 3,
                "name": "rid"
              },
              {
                "type": {
                  "type": "trait",
                  "childType": "Message"
                },
                "id": 4,
                "name": "message"
              }
            ]
          }
        },
        {
          "type": "rpc",
          "content": {
            "name": "MessageReceived",
            "header": 55,
            "response": {
              "type": "reference",
              "name": "Void"
            },
            "doc": [
              "Confirmation of plain message receive by device",
              {
                "type": "reference",
                "argument": "peer",
                "category": "full",
                "description": "Destination peer"
              },
              {
                "type": "reference",
                "argument": "date",
                "category": "full",
                "description": "Maximum date of received messages"
              }
            ],
            "attributes": [
              {
                "type": {
                  "type": "struct",
                  "childType": "OutPeer"
                },
                "id": 1,
                "name": "peer"
              },
              {
                "type": {
                  "type": "alias",
                  "childType": "date"
                },
                "id": 3,
                "name": "date"
              }
            ]
          }
        },
        {
          "type": "rpc",
          "content": {
            "name": "MessageRead",
            "header": 57,
            "response": {
              "type": "reference",
              "name": "Void"
            },
            "doc": [
              "Marking plain messages as read",
              {
                "type": "reference",
                "argument": "peer",
                "category": "full",
                "description": "Destination peer"
              },
              {
                "type": "reference",
                "argument": "date",
                "category": "full",
                "description": "Maximum date of read messages"
              }
            ],
            "attributes": [
              {
                "type": {
                  "type": "struct",
                  "childType": "OutPeer"
                },
                "id": 1,
                "name": "peer"
              },
              {
                "type": {
                  "type": "alias",
                  "childType": "date"
                },
                "id": 3,
                "name": "date"
              }
            ]
          }
        },
        {
          "type": "rpc",
          "content": {
            "name": "DeleteMessage",
            "header": 98,
            "response": {
              "type": "reference",
              "name": "Seq"
            },
            "doc": [
              "Deleting messages",
              {
                "type": "reference",
                "argument": "peer",
                "category": "full",
                "description": "Destination peer"
              },
              {
                "type": "reference",
                "argument": "rids",
                "category": "full",
                "description": "Message random id"
              }
            ],
            "attributes": [
              {
                "type": {
                  "type": "struct",
                  "childType": "OutPeer"
                },
                "id": 1,
                "name": "peer"
              },
              {
                "type": {
                  "type": "list",
                  "childType": {
                    "type": "alias",
                    "childType": "randomId"
                  }
                },
                "id": 3,
                "name": "rids"
              }
            ]
          }
        },
        {
          "type": "rpc",
          "content": {
            "name": "ClearChat",
            "header": 99,
            "response": {
              "type": "reference",
              "name": "Seq"
            },
            "doc": [
              "Clearing of conversation (without removing dialog from dialogs list)",
              {
                "type": "reference",
                "argument": "peer",
                "category": "full",
                "description": "Conversation peer"
              }
            ],
            "attributes": [
              {
                "type": {
                  "type": "struct",
                  "childType": "OutPeer"
                },
                "id": 1,
                "name": "peer"
              }
            ]
          }
        },
        {
          "type": "rpc",
          "content": {
            "name": "DeleteChat",
            "header": 100,
            "response": {
              "type": "reference",
              "name": "Seq"
            },
            "doc": [
              "Deleting of conversation (also leave group for group conversations)",
              {
                "type": "reference",
                "argument": "peer",
                "category": "full",
                "description": "Conversation peer"
              }
            ],
            "attributes": [
              {
                "type": {
                  "type": "struct",
                  "childType": "OutPeer"
                },
                "id": 1,
                "name": "peer"
              }
            ]
          }
        },
        {
          "type": "rpc",
          "content": {
            "name": "MessageSetReaction",
            "header": 210,
            "response": {
              "type": "reference",
              "name": "ReactionsResponse"
            },
            "doc": [
              "Setting Message reaction",
              {
                "type": "reference",
                "argument": "peer",
                "category": "full",
                "description": "Destination peer"
              },
              {
                "type": "reference",
                "argument": "rid",
                "category": "full",
                "description": "Message random id"
              },
              {
                "type": "reference",
                "argument": "code",
                "category": "full",
                "description": "Reaction code"
              }
            ],
            "attributes": [
              {
                "type": {
                  "type": "struct",
                  "childType": "OutPeer"
                },
                "id": 1,
                "name": "peer"
              },
              {
                "type": {
                  "type": "alias",
                  "childType": "randomId"
                },
                "id": 2,
                "name": "rid"
              },
              {
                "type": "string",
                "id": 3,
                "name": "code"
              }
            ]
          }
        },
        {
          "type": "rpc",
          "content": {
            "name": "MessageRemoveReaction",
            "header": 220,
            "response": {
              "type": "reference",
              "name": "ReactionsResponse"
            },
            "doc": [
              "Removing Message reaction",
              {
                "type": "reference",
                "argument": "peer",
                "category": "full",
                "description": "Destination peer"
              },
              {
                "type": "reference",
                "argument": "rid",
                "category": "full",
                "description": "Message random id"
              },
              {
                "type": "reference",
                "argument": "code",
                "category": "full",
                "description": "Reaction code"
              }
            ],
            "attributes": [
              {
                "type": {
                  "type": "struct",
                  "childType": "OutPeer"
                },
                "id": 1,
                "name": "peer"
              },
              {
                "type": {
                  "type": "alias",
                  "childType": "randomId"
                },
                "id": 2,
                "name": "rid"
              },
              {
                "type": "string",
                "id": 3,
                "name": "code"
              }
            ]
          }
        },
        {
          "type": "response",
          "content": {
            "name": "ReactionsResponse",
            "header": 219,
            "doc": [
              "Response for reactions change"
            ],
            "attributes": [
              {
                "type": "int32",
                "id": 1,
                "name": "seq"
              },
              {
                "type": {
                  "type": "alias",
                  "childType": "seq_state"
                },
                "id": 2,
                "name": "state"
              },
              {
                "type": {
                  "type": "list",
                  "childType": {
                    "type": "struct",
                    "childType": "MessageReaction"
                  }
                },
                "id": 3,
                "name": "reactions"
              }
            ]
          }
        },
        {
          "type": "update",
          "content": {
            "name": "Message",
            "header": 55,
            "doc": [
              "Update about plain message",
              {
                "type": "reference",
                "argument": "peer",
                "category": "full",
                "description": "  Destination peer"
              },
              {
                "type": "reference",
                "argument": "senderUid",
                "category": "full",
                "description": "  Sender of message"
              },
              {
                "type": "reference",
                "argument": "date",
                "category": "full",
                "description": "  date of message"
              },
              {
                "type": "reference",
                "argument": "rid",
                "category": "full",
                "description": "  Rid of message"
              },
              {
                "type": "reference",
                "argument": "message",
                "category": "full",
                "description": "  message content"
              }
            ],
            "attributes": [
              {
                "type": {
                  "type": "struct",
                  "childType": "Peer"
                },
                "id": 1,
                "name": "peer"
              },
              {
                "type": {
                  "type": "alias",
                  "childType": "userId"
                },
                "id": 2,
                "name": "senderUid"
              },
              {
                "type": {
                  "type": "alias",
                  "childType": "date"
                },
                "id": 3,
                "name": "date"
              },
              {
                "type": {
                  "type": "alias",
                  "childType": "randomId"
                },
                "id": 4,
                "name": "rid"
              },
              {
                "type": {
                  "type": "trait",
                  "childType": "Message"
                },
                "id": 5,
                "name": "message"
              }
            ]
          }
        },
        {
          "type": "update",
          "content": {
            "name": "MessageContentChanged",
            "header": 162,
            "doc": [
              "Update about message change",
              {
                "type": "reference",
                "argument": "peer",
                "category": "full",
                "description": "  Destination peer"
              },
              {
                "type": "reference",
                "argument": "rid",
                "category": "full",
                "description": "  Rid of message"
              },
              {
                "type": "reference",
                "argument": "message",
                "category": "full",
                "description": "  Message content"
              }
            ],
            "attributes": [
              {
                "type": {
                  "type": "struct",
                  "childType": "Peer"
                },
                "id": 1,
                "name": "peer"
              },
              {
                "type": {
                  "type": "alias",
                  "childType": "randomId"
                },
                "id": 2,
                "name": "rid"
              },
              {
                "type": {
                  "type": "trait",
                  "childType": "Message"
                },
                "id": 3,
                "name": "message"
              }
            ]
          }
        },
        {
          "type": "update",
          "content": {
            "name": "MessageDateChanged",
            "header": 163,
            "doc": [
              "Update about message date changed",
              {
                "type": "reference",
                "argument": "peer",
                "category": "full",
                "description": "  Destination peer"
              },
              {
                "type": "reference",
                "argument": "rid",
                "category": "full",
                "description": "  Rid of message"
              },
              {
                "type": "reference",
                "argument": "date",
                "category": "full",
                "description": "  Date of message"
              }
            ],
            "attributes": [
              {
                "type": {
                  "type": "struct",
                  "childType": "Peer"
                },
                "id": 1,
                "name": "peer"
              },
              {
                "type": {
                  "type": "alias",
                  "childType": "randomId"
                },
                "id": 2,
                "name": "rid"
              },
              {
                "type": {
                  "type": "alias",
                  "childType": "date"
                },
                "id": 3,
                "name": "date"
              }
            ]
          }
        },
        {
          "type": "update",
          "content": {
            "name": "MessageSent",
            "header": 4,
            "doc": [
              "Update about message sent",
              {
                "type": "reference",
                "argument": "peer",
                "category": "full",
                "description": "  Destination peer"
              },
              {
                "type": "reference",
                "argument": "rid",
                "category": "full",
                "description": "  Rid of message"
              },
              {
                "type": "reference",
                "argument": "date",
                "category": "full",
                "description": "  Date of message"
              }
            ],
            "attributes": [
              {
                "type": {
                  "type": "struct",
                  "childType": "Peer"
                },
                "id": 1,
                "name": "peer"
              },
              {
                "type": {
                  "type": "alias",
                  "childType": "randomId"
                },
                "id": 2,
                "name": "rid"
              },
              {
                "type": {
                  "type": "alias",
                  "childType": "date"
                },
                "id": 3,
                "name": "date"
              }
            ]
          }
        },
        {
          "type": "update",
          "content": {
            "name": "MessageReceived",
            "header": 54,
            "doc": [
              "Update about message received",
              {
                "type": "reference",
                "argument": "peer",
                "category": "full",
                "description": "  Destination peer"
              },
              {
                "type": "reference",
                "argument": "startDate",
                "category": "full",
                "description": "  Start date of received message"
              },
              {
                "type": "reference",
                "argument": "receivedDate",
                "category": "full",
                "description": "  Date of receive"
              }
            ],
            "attributes": [
              {
                "type": {
                  "type": "struct",
                  "childType": "Peer"
                },
                "id": 1,
                "name": "peer"
              },
              {
                "type": {
                  "type": "alias",
                  "childType": "date"
                },
                "id": 2,
                "name": "startDate"
              },
              {
                "type": {
                  "type": "alias",
                  "childType": "date"
                },
                "id": 3,
                "name": "receivedDate"
              }
            ]
          }
        },
        {
          "type": "update",
          "content": {
            "name": "MessageRead",
            "header": 19,
            "doc": [
              "Update about message read",
              {
                "type": "reference",
                "argument": "peer",
                "category": "full",
                "description": "  Destination peer"
              },
              {
                "type": "reference",
                "argument": "startDate",
                "category": "full",
                "description": "  Start date of read message"
              },
              {
                "type": "reference",
                "argument": "readDate",
                "category": "full",
                "description": "  Date of read"
              }
            ],
            "attributes": [
              {
                "type": {
                  "type": "struct",
                  "childType": "Peer"
                },
                "id": 1,
                "name": "peer"
              },
              {
                "type": {
                  "type": "alias",
                  "childType": "date"
                },
                "id": 2,
                "name": "startDate"
              },
              {
                "type": {
                  "type": "alias",
                  "childType": "date"
                },
                "id": 3,
                "name": "readDate"
              }
            ]
          }
        },
        {
          "type": "update",
          "content": {
            "name": "MessageReadByMe",
            "header": 50,
            "doc": [
              "Update about message read by me",
              {
                "type": "reference",
                "argument": "peer",
                "category": "full",
                "description": "  Destination peer"
              },
              {
                "type": "reference",
                "argument": "startDate",
                "category": "full",
                "description": "  Start date of read message"
              }
            ],
            "attributes": [
              {
                "type": {
                  "type": "struct",
                  "childType": "Peer"
                },
                "id": 1,
                "name": "peer"
              },
              {
                "type": {
                  "type": "alias",
                  "childType": "date"
                },
                "id": 2,
                "name": "startDate"
              }
            ]
          }
        },
        {
          "type": "update",
          "content": {
            "name": "MessageDelete",
            "header": 46,
            "doc": [
              "Update about message delete",
              {
                "type": "reference",
                "argument": "peer",
                "category": "full",
                "description": "  Destination peer"
              },
              {
                "type": "reference",
                "argument": "rids",
                "category": "full",
                "description": "  Deleted messages"
              }
            ],
            "attributes": [
              {
                "type": {
                  "type": "struct",
                  "childType": "Peer"
                },
                "id": 1,
                "name": "peer"
              },
              {
                "type": {
                  "type": "list",
                  "childType": {
                    "type": "alias",
                    "childType": "randomId"
                  }
                },
                "id": 2,
                "name": "rids"
              }
            ]
          }
        },
        {
          "type": "update",
          "content": {
            "name": "ChatClear",
            "header": 47,
            "doc": [
              "Update about chat clear",
              {
                "type": "reference",
                "argument": "peer",
                "category": "full",
                "description": "  Destination peer"
              }
            ],
            "attributes": [
              {
                "type": {
                  "type": "struct",
                  "childType": "Peer"
                },
                "id": 1,
                "name": "peer"
              }
            ]
          }
        },
        {
          "type": "update",
          "content": {
            "name": "ChatDelete",
            "header": 48,
            "doc": [
              "Update about chat delete",
              {
                "type": "reference",
                "argument": "peer",
                "category": "full",
                "description": "  Destination peer"
              }
            ],
            "attributes": [
              {
                "type": {
                  "type": "struct",
                  "childType": "Peer"
                },
                "id": 1,
                "name": "peer"
              }
            ]
          }
        },
        {
          "type": "update",
          "content": {
            "name": "ChatGroupsChanged",
            "header": 1,
            "doc": [
              "Update about chat groups changed. Called only when adding, removing and reordering of grouped dialog.",
              {
                "type": "reference",
                "argument": "dialogs",
                "category": "full",
                "description": "  New dialgos list"
              }
            ],
            "attributes": [
              {
                "type": {
                  "type": "list",
                  "childType": {
                    "type": "struct",
                    "childType": "DialogGroup"
                  }
                },
                "id": 1,
                "name": "dialogs"
              }
            ]
          }
        },
        {
          "type": "update",
          "content": {
            "name": "ReactionsUpdate",
            "header": 222,
            "doc": [
              "Update about reactions change",
              {
                "type": "reference",
                "argument": "peer",
                "category": "full",
                "description": "  Destination peer"
              },
              {
                "type": "reference",
                "argument": "rid",
                "category": "full",
                "description": "  Message random id"
              },
              {
                "type": "reference",
                "argument": "reactions",
                "category": "full",
                "description": "  New Reactions"
              }
            ],
            "attributes": [
              {
                "type": {
                  "type": "struct",
                  "childType": "Peer"
                },
                "id": 1,
                "name": "peer"
              },
              {
                "type": {
                  "type": "alias",
                  "childType": "randomId"
                },
                "id": 2,
                "name": "rid"
              },
              {
                "type": {
                  "type": "list",
                  "childType": {
                    "type": "struct",
                    "childType": "MessageReaction"
                  }
                },
                "id": 3,
                "name": "reactions"
              }
            ]
          }
        },
        {
          "type": "enum",
          "content": {
            "name": "MessageState",
            "values": [
              {
                "name": "Sent",
                "id": 1
              },
              {
                "name": "Received",
                "id": 2
              },
              {
                "name": "Read",
                "id": 3
              }
            ]
          }
        },
        {
          "type": "struct",
          "content": {
            "name": "HistoryMessage",
            "doc": [
              "Message from history",
              {
                "type": "reference",
                "argument": "senderUid",
                "category": "full",
                "description": "  Sender of mesasge"
              },
              {
                "type": "reference",
                "argument": "rid",
                "category": "full",
                "description": "  Random Id of message"
              },
              {
                "type": "reference",
                "argument": "date",
                "category": "full",
                "description": "  Date of message"
              },
              {
                "type": "reference",
                "argument": "message",
                "category": "full",
                "description": "  Content of message"
              },
              {
                "type": "reference",
                "argument": "reactions",
                "category": "full",
                "description": "  Message reactions"
              }
            ],
            "attributes": [
              {
                "type": {
                  "type": "alias",
                  "childType": "userId"
                },
                "id": 1,
                "name": "senderUid"
              },
              {
                "type": {
                  "type": "alias",
                  "childType": "randomId"
                },
                "id": 2,
                "name": "rid"
              },
              {
                "type": {
                  "type": "alias",
                  "childType": "date"
                },
                "id": 3,
                "name": "date"
              },
              {
                "type": {
                  "type": "trait",
                  "childType": "Message"
                },
                "id": 5,
                "name": "message"
              },
              {
                "type": {
                  "type": "opt",
                  "childType": {
                    "type": "enum",
                    "childType": "MessageState"
                  }
                },
                "id": 6,
                "name": "state"
              },
              {
                "type": {
                  "type": "list",
                  "childType": {
                    "type": "struct",
                    "childType": "MessageReaction"
                  }
                },
                "id": 7,
                "name": "reactions"
              }
            ]
          }
        },
        {
          "type": "rpc",
          "content": {
            "name": "LoadHistory",
            "header": 118,
            "response": {
              "type": "anonymous",
              "header": 119,
              "doc": [
                "Loaded history",
                {
                  "type": "reference",
                  "argument": "history",
                  "category": "compact",
                  "description": "  Messages"
                },
                {
                  "type": "reference",
                  "argument": "users",
                  "category": "compact",
                  "description": "  Loaded users"
                }
              ],
              "attributes": [
                {
                  "type": {
                    "type": "list",
                    "childType": {
                      "type": "struct",
                      "childType": "HistoryMessage"
                    }
                  },
                  "id": 1,
                  "name": "history"
                },
                {
                  "type": {
                    "type": "list",
                    "childType": {
                      "type": "struct",
                      "childType": "User"
                    }
                  },
                  "id": 2,
                  "name": "users"
                }
              ]
            },
            "doc": [
              "Loading history of chat",
              {
                "type": "reference",
                "argument": "peer",
                "category": "full",
                "description": "Peer of conversation"
              },
              {
                "type": "reference",
                "argument": "minDate",
                "category": "full",
                "description": "start date of messages for loading or 0 for loading from start"
              },
              {
                "type": "reference",
                "argument": "limit",
                "category": "full",
                "description": "maximum amount of messages (max is 100)"
              }
            ],
            "attributes": [
              {
                "type": {
                  "type": "struct",
                  "childType": "OutPeer"
                },
                "id": 1,
                "name": "peer"
              },
              {
                "type": {
                  "type": "alias",
                  "childType": "date"
                },
                "id": 3,
                "name": "minDate"
              },
              {
                "type": "int32",
                "id": 4,
                "name": "limit"
              }
            ]
          }
        },
        {
          "type": "struct",
          "content": {
            "name": "Dialog",
            "doc": [
              "Conversation from history",
              {
                "type": "reference",
                "argument": "peer",
                "category": "full",
                "description": "  Peer of conversation"
              },
              {
                "type": "reference",
                "argument": "unreadCount",
                "category": "full",
                "description": "  plain messages unread messages count"
              },
              {
                "type": "reference",
                "argument": "sortDate",
                "category": "full",
                "description": "  date of conversation for sorting"
              },
              {
                "type": "reference",
                "argument": "senderUid",
                "category": "full",
                "description": "  Sender of top message (may be zero)"
              },
              {
                "type": "reference",
                "argument": "rid",
                "category": "full",
                "description": "  Random ID of top message (may be zero)"
              },
              {
                "type": "reference",
                "argument": "date",
                "category": "full",
                "description": "  Date of top message (can't be zero)"
              },
              {
                "type": "reference",
                "argument": "message",
                "category": "full",
                "description": "  Content of message"
              }
            ],
            "attributes": [
              {
                "type": {
                  "type": "struct",
                  "childType": "Peer"
                },
                "id": 1,
                "name": "peer"
              },
              {
                "type": "int32",
                "id": 3,
                "name": "unreadCount"
              },
              {
                "type": {
                  "type": "alias",
                  "childType": "date"
                },
                "id": 4,
                "name": "sortDate"
              },
              {
                "type": {
                  "type": "alias",
                  "childType": "userId"
                },
                "id": 5,
                "name": "senderUid"
              },
              {
                "type": {
                  "type": "alias",
                  "childType": "randomId"
                },
                "id": 6,
                "name": "rid"
              },
              {
                "type": {
                  "type": "alias",
                  "childType": "date"
                },
                "id": 7,
                "name": "date"
              },
              {
                "type": {
                  "type": "trait",
                  "childType": "Message"
                },
                "id": 8,
                "name": "message"
              },
              {
                "type": {
                  "type": "opt",
                  "childType": {
                    "type": "enum",
                    "childType": "MessageState"
                  }
                },
                "id": 9,
                "name": "state"
              }
            ]
          }
        },
        {
          "type": "rpc",
          "content": {
            "name": "LoadDialogs",
            "header": 104,
            "response": {
              "type": "anonymous",
              "header": 105,
              "doc": [
                "Loaded dialogs",
                {
                  "type": "reference",
                  "argument": "groups",
                  "category": "compact",
                  "description": "  Loaded groups"
                },
                {
                  "type": "reference",
                  "argument": "users",
                  "category": "compact",
                  "description": "  Loaded users"
                },
                {
                  "type": "reference",
                  "argument": "dialogs",
                  "category": "compact",
                  "description": "  Loaded dialogs"
                }
              ],
              "attributes": [
                {
                  "type": {
                    "type": "list",
                    "childType": {
                      "type": "struct",
                      "childType": "Group"
                    }
                  },
                  "id": 1,
                  "name": "groups"
                },
                {
                  "type": {
                    "type": "list",
                    "childType": {
                      "type": "struct",
                      "childType": "User"
                    }
                  },
                  "id": 2,
                  "name": "users"
                },
                {
                  "type": {
                    "type": "list",
                    "childType": {
                      "type": "struct",
                      "childType": "Dialog"
                    }
                  },
                  "id": 3,
                  "name": "dialogs"
                }
              ]
            },
            "doc": [
              "Loading conversation history",
              {
                "type": "reference",
                "argument": "minDate",
                "category": "full",
                "description": "start date of conversation loading. Use 0 to load latest messages"
              },
              {
                "type": "reference",
                "argument": "limit",
                "category": "full",
                "description": "limit maximum amount of messages (max is 100)"
              }
            ],
            "attributes": [
              {
                "type": {
                  "type": "alias",
                  "childType": "date"
                },
                "id": 1,
                "name": "minDate"
              },
              {
                "type": "int32",
                "id": 2,
                "name": "limit"
              }
            ]
          }
        },
        {
          "type": "rpc",
          "content": {
            "name": "LoadGroupedDialogs",
            "header": 225,
            "response": {
              "type": "anonymous",
              "header": 226,
              "doc": [
                "Loaded grouped dialogs",
                {
                  "type": "reference",
                  "argument": "dialogs",
                  "category": "compact",
                  "description": "  Loaded groups of dialogs"
                },
                {
                  "type": "reference",
                  "argument": "users",
                  "category": "compact",
                  "description": "  Loaded users"
                },
                {
                  "type": "reference",
                  "argument": "groups",
                  "category": "full",
                  "description": "  Loaded groups"
                }
              ],
              "attributes": [
                {
                  "type": {
                    "type": "list",
                    "childType": {
                      "type": "struct",
                      "childType": "DialogGroup"
                    }
                  },
                  "id": 1,
                  "name": "dialogs"
                },
                {
                  "type": {
                    "type": "list",
                    "childType": {
                      "type": "struct",
                      "childType": "User"
                    }
                  },
                  "id": 2,
                  "name": "users"
                },
                {
                  "type": {
                    "type": "list",
                    "childType": {
                      "type": "struct",
                      "childType": "Group"
                    }
                  },
                  "id": 3,
                  "name": "groups"
                }
              ]
            },
            "doc": [
              "Load all dialogs from grouped list"
            ],
            "attributes": []
          }
        },
        {
          "type": "response",
          "content": {
            "name": "DialogsOrder",
            "header": 235,
            "doc": [
              "Dialogs order response",
              {
                "type": "reference",
                "argument": "seq",
                "category": "full",
                "description": "  update seq"
              },
              {
                "type": "reference",
                "argument": "state",
                "category": "full",
                "description": "  update state"
              },
              {
                "type": "reference",
                "argument": "groups",
                "category": "full",
                "description": "  Update groups"
              }
            ],
            "attributes": [
              {
                "type": "int32",
                "id": 1,
                "name": "seq"
              },
              {
                "type": {
                  "type": "alias",
                  "childType": "seq_state"
                },
                "id": 2,
                "name": "state"
              },
              {
                "type": {
                  "type": "list",
                  "childType": {
                    "type": "struct",
                    "childType": "DialogGroup"
                  }
                },
                "id": 3,
                "name": "groups"
              }
            ]
          }
        },
        {
          "type": "rpc",
          "content": {
            "name": "HideDialog",
            "header": 231,
            "response": {
              "type": "reference",
              "name": "DialogsOrder"
            },
            "doc": [
              "Hide Dialog from grouped list",
              {
                "type": "reference",
                "argument": "peer",
                "category": "full",
                "description": "Dialog peer"
              }
            ],
            "attributes": [
              {
                "type": {
                  "type": "struct",
                  "childType": "OutPeer"
                },
                "id": 1,
                "name": "peer"
              }
            ]
          }
        },
        {
          "type": "rpc",
          "content": {
            "name": "ShowDialog",
            "header": 232,
            "response": {
              "type": "reference",
              "name": "DialogsOrder"
            },
            "doc": [
              "Show Dialog in grouped list"
            ],
            "attributes": [
              {
                "type": {
                  "type": "struct",
                  "childType": "OutPeer"
                },
                "id": 1,
                "name": "peer"
              }
            ]
          }
        },
        {
          "type": "rpc",
          "content": {
            "name": "FavouriteDialog",
            "header": 224,
            "response": {
              "type": "reference",
              "name": "DialogsOrder"
            },
            "doc": [
              "Marking dialog as favourite",
              {
                "type": "reference",
                "argument": "peer",
                "category": "full",
                "description": "Peer for favouriting"
              }
            ],
            "attributes": [
              {
                "type": {
                  "type": "struct",
                  "childType": "OutPeer"
                },
                "id": 1,
                "name": "peer"
              }
            ]
          }
        },
        {
          "type": "rpc",
          "content": {
            "name": "UnfavouriteDialog",
            "header": 227,
            "response": {
              "type": "reference",
              "name": "DialogsOrder"
            },
            "doc": [
              "Making dialog as unfavourite",
              {
                "type": "reference",
                "argument": "peer",
                "category": "full",
                "description": "Peer for favouriting"
              }
            ],
            "attributes": [
              {
                "type": {
                  "type": "struct",
                  "childType": "OutPeer"
                },
                "id": 1,
                "name": "peer"
              }
            ]
          }
        }
      ]
    },
    {
      "title": "Groups",
      "package": "groups",
      "items": [
        {
          "type": "struct",
          "content": {
            "name": "Group",
            "doc": [
              "Group information",
              {
                "type": "reference",
                "argument": "id",
                "category": "full",
                "description": "  group id"
              },
              {
                "type": "reference",
                "argument": "accessHash",
                "category": "danger",
                "description": "  Access hash of group"
              },
              {
                "type": "reference",
                "argument": "title",
                "category": "hidden",
                "description": "  Title of group"
              },
              {
                "type": "reference",
                "argument": "theme",
                "category": "hidden",
                "description": "  Theme of group"
              },
              {
                "type": "reference",
                "argument": "about",
                "category": "hidden",
                "description": "  About of group"
              },
              {
                "type": "reference",
                "argument": "avatar",
                "category": "compact",
                "description": "  Avatar of group"
              },
              {
                "type": "reference",
                "argument": "isMember",
                "category": "full",
                "description": "  is member of group (deprecated)"
              },
              {
                "type": "reference",
                "argument": "creatorUid",
                "category": "hidden",
                "description": "  Group creator"
              },
              {
                "type": "reference",
                "argument": "members",
                "category": "compact",
                "description": "  Members of group"
              },
              {
                "type": "reference",
                "argument": "createDate",
                "category": "full",
                "description": "  Date of creation"
              },
              {
                "type": "reference",
                "argument": "ext",
                "category": "hidden",
                "description": "  Group extension Data"
              },
              {
                "type": "reference",
                "argument": "isAdmin",
                "category": "hidden",
                "description": "  Is current user admin (deprecated)"
              },
              {
                "type": "reference",
                "argument": "isHidden",
                "category": "full",
                "description": "  Is group hidden"
              },
              {
                "type": "reference",
                "argument": "groupType",
                "category": "full",
                "description": "  Group type"
              }
            ],
            "expandable": "true",
            "attributes": [
              {
                "type": {
                  "type": "alias",
                  "childType": "groupId"
                },
                "id": 1,
                "name": "id"
              },
              {
                "type": "int64",
                "id": 2,
                "name": "accessHash"
              },
              {
                "type": "string",
                "id": 3,
                "name": "title"
              },
              {
                "type": {
                  "type": "opt",
                  "childType": {
                    "type": "struct",
                    "childType": "Avatar"
                  }
                },
                "id": 4,
                "name": "avatar"
              },
              {
                "type": "bool",
                "id": 6,
                "name": "isMember",
                "deprecated": "true"
              },
              {
                "type": {
                  "type": "alias",
                  "childType": "userId"
                },
                "id": 8,
                "name": "creatorUid"
              },
              {
                "type": {
                  "type": "list",
                  "childType": {
                    "type": "struct",
                    "childType": "Member"
                  }
                },
                "id": 9,
                "name": "members"
              },
              {
                "type": {
                  "type": "alias",
                  "childType": "date"
                },
                "id": 10,
                "name": "createDate"
              },
              {
                "type": {
                  "type": "opt",
                  "childType": "bool"
                },
                "id": 16,
                "name": "isAdmin",
                "deprecated": "true"
              },
              {
                "type": {
                  "type": "opt",
                  "childType": "string"
                },
                "id": 17,
                "name": "theme"
              },
              {
                "type": {
                  "type": "opt",
                  "childType": "string"
                },
                "id": 18,
                "name": "about"
              },
              {
                "type": {
                  "type": "opt",
                  "childType": "bool"
                },
                "id": 20,
                "name": "isHidden"
              },
              {
                "type": {
                  "type": "opt",
                  "childType": "string"
                },
                "id": 23,
                "name": "groupType"
              },
              {
                "type": {
                  "type": "opt",
                  "childType": {
                    "type": "struct",
                    "childType": "MapValue"
                  }
                },
                "id": 22,
                "name": "ext"
              }
            ]
          }
        },
        {
          "type": "struct",
          "content": {
            "name": "Member",
            "doc": [
              "Member information",
              {
                "type": "reference",
                "argument": "uid",
                "category": "full",
                "description": "  User id"
              },
              {
                "type": "reference",
                "argument": "inviterUid",
                "category": "full",
                "description": "  User inviter id"
              },
              {
                "type": "reference",
                "argument": "date",
                "category": "full",
                "description": "  Adding date"
              },
              {
                "type": "reference",
                "argument": "isAdmin",
                "category": "full",
                "description": "  is member admin of group"
              }
            ],
            "expandable": "true",
            "attributes": [
              {
                "type": {
                  "type": "alias",
                  "childType": "userId"
                },
                "id": 1,
                "name": "uid"
              },
              {
                "type": {
                  "type": "alias",
                  "childType": "userId"
                },
                "id": 2,
                "name": "inviterUid"
              },
              {
                "type": "int64",
                "id": 3,
                "name": "date"
              },
              {
                "type": {
                  "type": "opt",
                  "childType": "bool"
                },
                "id": 4,
                "name": "isAdmin"
              }
            ]
          }
        },
        {
          "type": "rpc",
          "content": {
            "name": "CreateGroupObsolete",
            "header": 65,
            "response": {
              "type": "anonymous",
              "header": 66,
              "doc": [
                "Created group",
                {
                  "type": "reference",
                  "argument": "groupPeer",
                  "category": "full",
                  "description": "  Peer of created group"
                },
                {
                  "type": "reference",
                  "argument": "seq",
                  "category": "full",
                  "description": "  Sequence number"
                },
                {
                  "type": "reference",
                  "argument": "state",
                  "category": "compact",
                  "description": "  Sequence state"
                },
                {
                  "type": "reference",
                  "argument": "users",
                  "category": "compact",
                  "description": "  Members of created group"
                },
                {
                  "type": "reference",
                  "argument": "date",
                  "category": "full",
                  "description": "  Group creation date"
                }
              ],
              "attributes": [
                {
                  "type": {
                    "type": "struct",
                    "childType": "GroupOutPeer"
                  },
                  "id": 1,
                  "name": "groupPeer"
                },
                {
                  "type": "int32",
                  "id": 3,
                  "name": "seq"
                },
                {
                  "type": {
                    "type": "alias",
                    "childType": "seq_state"
                  },
                  "id": 4,
                  "name": "state"
                },
                {
                  "type": {
                    "type": "list",
                    "childType": "int32"
                  },
                  "id": 5,
                  "name": "users"
                },
                {
                  "type": {
                    "type": "alias",
                    "childType": "date"
                  },
                  "id": 6,
                  "name": "date"
                }
              ]
            },
            "doc": [
              "Creating group chat (obsolete)",
              {
                "type": "reference",
                "argument": "rid",
                "category": "full",
                "description": "Random Id for avoiding double create"
              },
              {
                "type": "reference",
                "argument": "title",
                "category": "full",
                "description": "Title of new group"
              },
              {
                "type": "reference",
                "argument": "users",
                "category": "compact",
                "description": "Members of new group"
              }
            ],
            "attributes": [
              {
                "type": {
                  "type": "alias",
                  "childType": "randomId"
                },
                "id": 1,
                "name": "rid"
              },
              {
                "type": "string",
                "id": 2,
                "name": "title"
              },
              {
                "type": {
                  "type": "list",
                  "childType": {
                    "type": "struct",
                    "childType": "UserOutPeer"
                  }
                },
                "id": 3,
                "name": "users"
              }
            ]
          }
        },
        {
          "type": "rpc",
          "content": {
            "name": "CreateGroup",
            "header": 230,
            "response": {
              "type": "anonymous",
              "header": 216,
              "doc": [
                "Created group",
                {
                  "type": "reference",
                  "argument": "seq",
                  "category": "full",
                  "description": "  Update Seq"
                },
                {
                  "type": "reference",
                  "argument": "state",
                  "category": "compact",
                  "description": "  Update state"
                },
                {
                  "type": "reference",
                  "argument": "group",
                  "category": "full",
                  "description": "  Created group"
                },
                {
                  "type": "reference",
                  "argument": "users",
                  "category": "full",
                  "description": "  Referenced users"
                }
              ],
              "attributes": [
                {
                  "type": "int32",
                  "id": 1,
                  "name": "seq"
                },
                {
                  "type": {
                    "type": "alias",
                    "childType": "seq_state"
                  },
                  "id": 2,
                  "name": "state"
                },
                {
                  "type": {
                    "type": "struct",
                    "childType": "Group"
                  },
                  "id": 3,
                  "name": "group"
                },
                {
                  "type": {
                    "type": "list",
                    "childType": {
                      "type": "struct",
                      "childType": "User"
                    }
                  },
                  "id": 4,
                  "name": "users"
                }
              ]
            },
            "doc": [
              "Creating group chat",
              {
                "type": "reference",
                "argument": "rid",
                "category": "full",
                "description": "Random Id for avoiding double create"
              },
              {
                "type": "reference",
                "argument": "title",
                "category": "full",
                "description": "Group Title"
              },
              {
                "type": "reference",
                "argument": "users",
                "category": "hidden",
                "description": "Members of group"
              },
              {
                "type": "reference",
                "argument": "groupType",
                "category": "hidden",
                "description": "Group Type. 'public' for public groups"
              },
              {
                "type": "reference",
                "argument": "userData",
                "category": "hidden",
                "description": "Group external data"
              }
            ],
            "attributes": [
              {
                "type": {
                  "type": "alias",
                  "childType": "randomId"
                },
                "id": 1,
                "name": "rid"
              },
              {
                "type": "string",
                "id": 2,
                "name": "title"
              },
              {
                "type": {
                  "type": "list",
                  "childType": {
                    "type": "struct",
                    "childType": "UserOutPeer"
                  }
                },
                "id": 3,
                "name": "users"
              },
              {
                "type": {
                  "type": "opt",
                  "childType": "string"
                },
                "id": 5,
                "name": "groupType"
              },
              {
                "type": {
                  "type": "opt",
                  "childType": {
                    "type": "struct",
                    "childType": "MapValue"
                  }
                },
                "id": 4,
                "name": "userData"
              }
            ]
          }
        },
        {
          "type": "rpc",
          "content": {
            "name": "EnterGroup",
            "header": 199,
            "response": {
              "type": "anonymous",
              "header": 200,
              "doc": [
                "Joined group",
                {
                  "type": "reference",
                  "argument": "group",
                  "category": "full",
                  "description": "  Joined group"
                },
                {
                  "type": "reference",
                  "argument": "users",
                  "category": "full",
                  "description": "  Referenced users"
                },
                {
                  "type": "reference",
                  "argument": "rid",
                  "category": "full",
                  "description": "  Rid of join message"
                },
                {
                  "type": "reference",
                  "argument": "seq",
                  "category": "full",
                  "description": "  Seq of Update"
                },
                {
                  "type": "reference",
                  "argument": "state",
                  "category": "full",
                  "description": "  State of Update"
                },
                {
                  "type": "reference",
                  "argument": "date",
                  "category": "full",
                  "description": "  Date of update"
                }
              ],
              "attributes": [
                {
                  "type": {
                    "type": "struct",
                    "childType": "Group"
                  },
                  "id": 1,
                  "name": "group"
                },
                {
                  "type": {
                    "type": "list",
                    "childType": {
                      "type": "struct",
                      "childType": "User"
                    }
                  },
                  "id": 2,
                  "name": "users"
                },
                {
                  "type": {
                    "type": "alias",
                    "childType": "randomId"
                  },
                  "id": 3,
                  "name": "rid"
                },
                {
                  "type": "int32",
                  "id": 4,
                  "name": "seq"
                },
                {
                  "type": {
                    "type": "alias",
                    "childType": "seq_state"
                  },
                  "id": 5,
                  "name": "state"
                },
                {
                  "type": {
                    "type": "alias",
                    "childType": "date"
                  },
                  "id": 6,
                  "name": "date"
                }
              ]
            },
            "doc": [
              "Join random group by peer id",
              {
                "type": "reference",
                "argument": "peer",
                "category": "full",
                "description": "Public group peer"
              }
            ],
            "attributes": [
              {
                "type": {
                  "type": "struct",
                  "childType": "GroupOutPeer"
                },
                "id": 1,
                "name": "peer"
              }
            ]
          }
        },
        {
          "type": "rpc",
          "content": {
            "name": "EditGroupTitle",
            "header": 85,
            "response": {
              "type": "reference",
              "name": "SeqDate"
            },
            "doc": [
              "Changing group title",
              {
                "type": "reference",
                "argument": "groupPeer",
                "category": "full",
                "description": "Group's peer"
              },
              {
                "type": "reference",
                "argument": "title",
                "category": "full",
                "description": "new group title"
              },
              {
                "type": "reference",
                "argument": "rid",
                "category": "full",
                "description": "Random Id of operation"
              }
            ],
            "attributes": [
              {
                "type": {
                  "type": "struct",
                  "childType": "GroupOutPeer"
                },
                "id": 1,
                "name": "groupPeer"
              },
              {
                "type": {
                  "type": "alias",
                  "childType": "randomId"
                },
                "id": 4,
                "name": "rid"
              },
              {
                "type": "string",
                "id": 3,
                "name": "title"
              }
            ]
          }
        },
        {
          "type": "rpc",
          "content": {
            "name": "EditGroupAvatar",
            "header": 86,
            "response": {
              "type": "anonymous",
              "header": 115,
              "doc": [
                "Updated group avatar",
                {
                  "type": "reference",
                  "argument": "avatar",
                  "category": "compact",
                  "description": "  Changed avatar"
                },
                {
                  "type": "reference",
                  "argument": "seq",
                  "category": "full",
                  "description": "  Sequence number"
                },
                {
                  "type": "reference",
                  "argument": "state",
                  "category": "compact",
                  "description": "  Sequence state"
                },
                {
                  "type": "reference",
                  "argument": "date",
                  "category": "full",
                  "description": "  Avatar change date"
                }
              ],
              "attributes": [
                {
                  "type": {
                    "type": "struct",
                    "childType": "Avatar"
                  },
                  "id": 1,
                  "name": "avatar"
                },
                {
                  "type": "int32",
                  "id": 2,
                  "name": "seq"
                },
                {
                  "type": {
                    "type": "alias",
                    "childType": "seq_state"
                  },
                  "id": 3,
                  "name": "state"
                },
                {
                  "type": {
                    "type": "alias",
                    "childType": "date"
                  },
                  "id": 4,
                  "name": "date"
                }
              ]
            },
            "doc": [
              "Changing group avatar",
              {
                "type": "reference",
                "argument": "groupPeer",
                "category": "full",
                "description": "Group's peer"
              },
              {
                "type": "reference",
                "argument": "fileLocation",
                "category": "compact",
                "description": "uploaded file for avatar"
              },
              {
                "type": "reference",
                "argument": "rid",
                "category": "full",
                "description": "Random Id of operation"
              }
            ],
            "attributes": [
              {
                "type": {
                  "type": "struct",
                  "childType": "GroupOutPeer"
                },
                "id": 1,
                "name": "groupPeer"
              },
              {
                "type": {
                  "type": "alias",
                  "childType": "randomId"
                },
                "id": 4,
                "name": "rid"
              },
              {
                "type": {
                  "type": "struct",
                  "childType": "FileLocation"
                },
                "id": 3,
                "name": "fileLocation"
              }
            ]
          }
        },
        {
          "type": "rpc",
          "content": {
            "name": "RemoveGroupAvatar",
            "header": 101,
            "response": {
              "type": "reference",
              "name": "SeqDate"
            },
            "doc": [
              "Removing group avatar",
              {
                "type": "reference",
                "argument": "groupPeer",
                "category": "full",
                "description": "Group's peer"
              },
              {
                "type": "reference",
                "argument": "rid",
                "category": "full",
                "description": "Random Id of operation"
              }
            ],
            "attributes": [
              {
                "type": {
                  "type": "struct",
                  "childType": "GroupOutPeer"
                },
                "id": 1,
                "name": "groupPeer"
              },
              {
                "type": {
                  "type": "alias",
                  "childType": "randomId"
                },
                "id": 4,
                "name": "rid"
              }
            ]
          }
        },
        {
          "type": "rpc",
          "content": {
            "name": "InviteUser",
            "header": 69,
            "response": {
              "type": "reference",
              "name": "SeqDate"
            },
            "doc": [
              "Inviting user to group",
              {
                "type": "reference",
                "argument": "groupPeer",
                "category": "full",
                "description": "Group's peer"
              },
              {
                "type": "reference",
                "argument": "user",
                "category": "full",
                "description": "Users for invitation"
              },
              {
                "type": "reference",
                "argument": "rid",
                "category": "full",
                "description": "Random Id of operation"
              }
            ],
            "attributes": [
              {
                "type": {
                  "type": "struct",
                  "childType": "GroupOutPeer"
                },
                "id": 1,
                "name": "groupPeer"
              },
              {
                "type": {
                  "type": "alias",
                  "childType": "randomId"
                },
                "id": 4,
                "name": "rid"
              },
              {
                "type": {
                  "type": "struct",
                  "childType": "UserOutPeer"
                },
                "id": 3,
                "name": "user"
              }
            ]
          }
        },
        {
          "type": "rpc",
          "content": {
            "name": "LeaveGroup",
            "header": 70,
            "response": {
              "type": "reference",
              "name": "SeqDate"
            },
            "doc": [
              "Leaving group",
              {
                "type": "reference",
                "argument": "groupPeer",
                "category": "full",
                "description": "Group's peer"
              },
              {
                "type": "reference",
                "argument": "rid",
                "category": "full",
                "description": "Random Id of operation"
              }
            ],
            "attributes": [
              {
                "type": {
                  "type": "struct",
                  "childType": "GroupOutPeer"
                },
                "id": 1,
                "name": "groupPeer"
              },
              {
                "type": {
                  "type": "alias",
                  "childType": "randomId"
                },
                "id": 2,
                "name": "rid"
              }
            ]
          }
        },
        {
          "type": "rpc",
          "content": {
            "name": "KickUser",
            "header": 71,
            "response": {
              "type": "reference",
              "name": "SeqDate"
            },
            "doc": [
              "Kicking user from group",
              {
                "type": "reference",
                "argument": "groupPeer",
                "category": "full",
                "description": "Group's peer"
              },
              {
                "type": "reference",
                "argument": "user",
                "category": "full",
                "description": "users for removing"
              },
              {
                "type": "reference",
                "argument": "rid",
                "category": "full",
                "description": "Random Id of operation"
              }
            ],
            "attributes": [
              {
                "type": {
                  "type": "struct",
                  "childType": "GroupOutPeer"
                },
                "id": 1,
                "name": "groupPeer"
              },
              {
                "type": {
                  "type": "alias",
                  "childType": "randomId"
                },
                "id": 4,
                "name": "rid"
              },
              {
                "type": {
                  "type": "struct",
                  "childType": "UserOutPeer"
                },
                "id": 3,
                "name": "user"
              }
            ]
          }
        },
        {
          "type": "rpc",
          "content": {
            "name": "EditGroupTopic",
            "header": 211,
            "response": {
              "type": "reference",
              "name": "SeqDate"
            },
            "doc": [
              "Edit group topic",
              {
                "type": "reference",
                "argument": "groupPeer",
                "category": "full",
                "description": "Group's peer"
              },
              {
                "type": "reference",
                "argument": "rid",
                "category": "full",
                "description": "Random id of operation"
              },
              {
                "type": "reference",
                "argument": "topic",
                "category": "full",
                "description": "New Topic"
              }
            ],
            "attributes": [
              {
                "type": {
                  "type": "struct",
                  "childType": "GroupOutPeer"
                },
                "id": 1,
                "name": "groupPeer"
              },
              {
                "type": {
                  "type": "alias",
                  "childType": "randomId"
                },
                "id": 2,
                "name": "rid"
              },
              {
                "type": {
                  "type": "opt",
                  "childType": "string"
                },
                "id": 3,
                "name": "topic"
              }
            ]
          }
        },
        {
          "type": "rpc",
          "content": {
            "name": "EditGroupAbout",
            "header": 213,
            "response": {
              "type": "reference",
              "name": "SeqDate"
            },
            "doc": [
              "Edit Group About",
              {
                "type": "reference",
                "argument": "groupPeer",
                "category": "full",
                "description": "Group's peer"
              },
              {
                "type": "reference",
                "argument": "rid",
                "category": "full",
                "description": "Random id of operation"
              },
              {
                "type": "reference",
                "argument": "about",
                "category": "hidden",
                "description": "New About"
              }
            ],
            "attributes": [
              {
                "type": {
                  "type": "struct",
                  "childType": "GroupOutPeer"
                },
                "id": 1,
                "name": "groupPeer"
              },
              {
                "type": {
                  "type": "alias",
                  "childType": "randomId"
                },
                "id": 2,
                "name": "rid"
              },
              {
                "type": {
                  "type": "opt",
                  "childType": "string"
                },
                "id": 3,
                "name": "about"
              }
            ]
          }
        },
        {
          "type": "rpc",
          "content": {
            "name": "MakeUserAdmin",
            "header": 214,
            "response": {
              "type": "anonymous",
              "header": 215,
              "doc": [
                {
                  "type": "reference",
                  "argument": "members",
                  "category": "full",
                  "description": "  new members"
                }
              ],
              "attributes": [
                {
                  "type": {
                    "type": "list",
                    "childType": {
                      "type": "struct",
                      "childType": "Member"
                    }
                  },
                  "id": 1,
                  "name": "members"
                },
                {
                  "type": "int32",
                  "id": 2,
                  "name": "seq"
                },
                {
                  "type": {
                    "type": "alias",
                    "childType": "seq_state"
                  },
                  "id": 3,
                  "name": "state"
                }
              ]
            },
            "doc": [
              "Make user admin",
              {
                "type": "reference",
                "argument": "groupPeer",
                "category": "full",
                "description": "Group's peer"
              },
              {
                "type": "reference",
                "argument": "userPeer",
                "category": "full",
                "description": "User's peer"
              }
            ],
            "attributes": [
              {
                "type": {
                  "type": "struct",
                  "childType": "GroupOutPeer"
                },
                "id": 1,
                "name": "groupPeer"
              },
              {
                "type": {
                  "type": "struct",
                  "childType": "UserOutPeer"
                },
                "id": 2,
                "name": "userPeer"
              }
            ]
          }
        },
        {
          "type": "update",
          "content": {
            "name": "GroupInvite",
            "header": 36,
            "doc": [
              "Update about inviting current user to group",
              {
                "type": "reference",
                "argument": "groupId",
                "category": "full",
                "description": "  Group Id"
              },
              {
                "type": "reference",
                "argument": "inviteUid",
                "category": "full",
                "description": "  Inviter UID. If equals to current uid than group created by user."
              },
              {
                "type": "reference",
                "argument": "date",
                "category": "full",
                "description": "  Date of creating"
              },
              {
                "type": "reference",
                "argument": "rid",
                "category": "full",
                "description": "  Random Id of operation"
              }
            ],
            "attributes": [
              {
                "type": {
                  "type": "alias",
                  "childType": "groupId"
                },
                "id": 1,
                "name": "groupId"
              },
              {
                "type": {
                  "type": "alias",
                  "childType": "randomId"
                },
                "id": 9,
                "name": "rid"
              },
              {
                "type": {
                  "type": "alias",
                  "childType": "userId"
                },
                "id": 5,
                "name": "inviteUid"
              },
              {
                "type": {
                  "type": "alias",
                  "childType": "date"
                },
                "id": 8,
                "name": "date"
              }
            ]
          }
        },
        {
          "type": "update",
          "content": {
            "name": "GroupUserInvited",
            "header": 21,
            "doc": [
              "Update about inviting user to group",
              {
                "type": "reference",
                "argument": "groupId",
                "category": "full",
                "description": "  Group Id"
              },
              {
                "type": "reference",
                "argument": "uid",
                "category": "full",
                "description": "  Added user ID"
              },
              {
                "type": "reference",
                "argument": "inviterUid",
                "category": "full",
                "description": "  Inviter user ID"
              },
              {
                "type": "reference",
                "argument": "date",
                "category": "full",
                "description": "  Date of adding user to group"
              },
              {
                "type": "reference",
                "argument": "rid",
                "category": "full",
                "description": "  Random Id of operation"
              }
            ],
            "attributes": [
              {
                "type": {
                  "type": "alias",
                  "childType": "groupId"
                },
                "id": 1,
                "name": "groupId"
              },
              {
                "type": {
                  "type": "alias",
                  "childType": "randomId"
                },
                "id": 5,
                "name": "rid"
              },
              {
                "type": {
                  "type": "alias",
                  "childType": "userId"
                },
                "id": 2,
                "name": "uid"
              },
              {
                "type": {
                  "type": "alias",
                  "childType": "userId"
                },
                "id": 3,
                "name": "inviterUid"
              },
              {
                "type": {
                  "type": "alias",
                  "childType": "date"
                },
                "id": 4,
                "name": "date"
              }
            ]
          }
        },
        {
          "type": "update",
          "content": {
            "name": "GroupUserLeave",
            "header": 23,
            "doc": [
              "Update about leaving user",
              {
                "type": "reference",
                "argument": "groupId",
                "category": "full",
                "description": "  Group Id"
              },
              {
                "type": "reference",
                "argument": "uid",
                "category": "full",
                "description": "  User's ID"
              },
              {
                "type": "reference",
                "argument": "date",
                "category": "full",
                "description": "  Date of user leave"
              },
              {
                "type": "reference",
                "argument": "rid",
                "category": "full",
                "description": "  Random Id of operation"
              }
            ],
            "attributes": [
              {
                "type": {
                  "type": "alias",
                  "childType": "groupId"
                },
                "id": 1,
                "name": "groupId"
              },
              {
                "type": {
                  "type": "alias",
                  "childType": "randomId"
                },
                "id": 4,
                "name": "rid"
              },
              {
                "type": {
                  "type": "alias",
                  "childType": "userId"
                },
                "id": 2,
                "name": "uid"
              },
              {
                "type": {
                  "type": "alias",
                  "childType": "date"
                },
                "id": 3,
                "name": "date"
              }
            ]
          }
        },
        {
          "type": "update",
          "content": {
            "name": "GroupUserKick",
            "header": 24,
            "doc": [
              "Update about kicking user",
              {
                "type": "reference",
                "argument": "groupId",
                "category": "full",
                "description": "  Group Id"
              },
              {
                "type": "reference",
                "argument": "uid",
                "category": "full",
                "description": "  Kicked user's ID"
              },
              {
                "type": "reference",
                "argument": "kickerUid",
                "category": "full",
                "description": "  Kicker user's ID"
              },
              {
                "type": "reference",
                "argument": "date",
                "category": "full",
                "description": "  Date of user kick"
              },
              {
                "type": "reference",
                "argument": "rid",
                "category": "full",
                "description": "  Random Id of operation"
              }
            ],
            "attributes": [
              {
                "type": {
                  "type": "alias",
                  "childType": "groupId"
                },
                "id": 1,
                "name": "groupId"
              },
              {
                "type": {
                  "type": "alias",
                  "childType": "randomId"
                },
                "id": 5,
                "name": "rid"
              },
              {
                "type": {
                  "type": "alias",
                  "childType": "userId"
                },
                "id": 2,
                "name": "uid"
              },
              {
                "type": {
                  "type": "alias",
                  "childType": "userId"
                },
                "id": 3,
                "name": "kickerUid"
              },
              {
                "type": {
                  "type": "alias",
                  "childType": "date"
                },
                "id": 4,
                "name": "date"
              }
            ]
          }
        },
        {
          "type": "update",
          "content": {
            "name": "GroupMembersUpdate",
            "header": 44,
            "doc": [
              "Silent group members update",
              {
                "type": "reference",
                "argument": "groupId",
                "category": "full",
                "description": "  Group Id"
              },
              {
                "type": "reference",
                "argument": "members",
                "category": "full",
                "description": "  New members list"
              }
            ],
            "attributes": [
              {
                "type": {
                  "type": "alias",
                  "childType": "groupId"
                },
                "id": 1,
                "name": "groupId"
              },
              {
                "type": {
                  "type": "list",
                  "childType": {
                    "type": "struct",
                    "childType": "Member"
                  }
                },
                "id": 2,
                "name": "members"
              }
            ]
          }
        },
        {
          "type": "update",
          "content": {
            "name": "GroupTitleChanged",
            "header": 38,
            "doc": [
              "Update about group title change",
              {
                "type": "reference",
                "argument": "groupId",
                "category": "full",
                "description": "  Group Id"
              },
              {
                "type": "reference",
                "argument": "uid",
                "category": "full",
                "description": "  Changer UID"
              },
              {
                "type": "reference",
                "argument": "title",
                "category": "full",
                "description": "  New Title of group"
              },
              {
                "type": "reference",
                "argument": "date",
                "category": "full",
                "description": "  Date of title change"
              },
              {
                "type": "reference",
                "argument": "rid",
                "category": "full",
                "description": "  Random Id of operation"
              }
            ],
            "attributes": [
              {
                "type": {
                  "type": "alias",
                  "childType": "groupId"
                },
                "id": 1,
                "name": "groupId"
              },
              {
                "type": {
                  "type": "alias",
                  "childType": "randomId"
                },
                "id": 5,
                "name": "rid"
              },
              {
                "type": {
                  "type": "alias",
                  "childType": "userId"
                },
                "id": 2,
                "name": "uid"
              },
              {
                "type": "string",
                "id": 3,
                "name": "title"
              },
              {
                "type": {
                  "type": "alias",
                  "childType": "date"
                },
                "id": 4,
                "name": "date"
              }
            ]
          }
        },
        {
          "type": "update",
          "content": {
            "name": "GroupTopicChanged",
            "header": 213,
            "doc": [
              "Update about group topic change",
              {
                "type": "reference",
                "argument": "groupId",
                "category": "full",
                "description": "  Group Id"
              },
              {
                "type": "reference",
                "argument": "uid",
                "category": "full",
                "description": "  Changer UID"
              },
              {
                "type": "reference",
                "argument": "topic",
                "category": "full",
                "description": "  New topic of group"
              },
              {
                "type": "reference",
                "argument": "date",
                "category": "full",
                "description": "  Date of theme change"
              },
              {
                "type": "reference",
                "argument": "rid",
                "category": "full",
                "description": "  Randomd Id of operation"
              }
            ],
            "attributes": [
              {
                "type": {
                  "type": "alias",
                  "childType": "groupId"
                },
                "id": 1,
                "name": "groupId"
              },
              {
                "type": {
                  "type": "alias",
                  "childType": "randomId"
                },
                "id": 2,
                "name": "rid"
              },
              {
                "type": {
                  "type": "alias",
                  "childType": "userId"
                },
                "id": 3,
                "name": "uid"
              },
              {
                "type": {
                  "type": "opt",
                  "childType": "string"
                },
                "id": 4,
                "name": "topic"
              },
              {
                "type": {
                  "type": "alias",
                  "childType": "date"
                },
                "id": 5,
                "name": "date"
              }
            ]
          }
        },
        {
          "type": "update",
          "content": {
            "name": "GroupAboutChanged",
            "header": 214,
            "doc": [
              "Update about group about change",
              {
                "type": "reference",
                "argument": "groupId",
                "category": "full",
                "description": "  Group Id"
              },
              {
                "type": "reference",
                "argument": "about",
                "category": "full",
                "description": "  Group about"
              }
            ],
            "attributes": [
              {
                "type": {
                  "type": "alias",
                  "childType": "groupId"
                },
                "id": 1,
                "name": "groupId"
              },
              {
                "type": {
                  "type": "opt",
                  "childType": "string"
                },
                "id": 2,
                "name": "about"
              }
            ]
          }
        },
        {
          "type": "update",
          "content": {
            "name": "GroupAvatarChanged",
            "header": 39,
            "doc": [
              "Update about group avatar change",
              {
                "type": "reference",
                "argument": "groupId",
                "category": "full",
                "description": "  Group Id"
              },
              {
                "type": "reference",
                "argument": "uid",
                "category": "full",
                "description": "  Avatar changer uid"
              },
              {
                "type": "reference",
                "argument": "avatar",
                "category": "compact",
                "description": "  New Avatar. If null then avatar is removed"
              },
              {
                "type": "reference",
                "argument": "date",
                "category": "full",
                "description": "  Date of avatar change"
              },
              {
                "type": "reference",
                "argument": "rid",
                "category": "full",
                "description": "  Random Id of operation"
              }
            ],
            "attributes": [
              {
                "type": {
                  "type": "alias",
                  "childType": "groupId"
                },
                "id": 1,
                "name": "groupId"
              },
              {
                "type": {
                  "type": "alias",
                  "childType": "randomId"
                },
                "id": 5,
                "name": "rid"
              },
              {
                "type": {
                  "type": "alias",
                  "childType": "userId"
                },
                "id": 2,
                "name": "uid"
              },
              {
                "type": {
                  "type": "opt",
                  "childType": {
                    "type": "struct",
                    "childType": "Avatar"
                  }
                },
                "id": 3,
                "name": "avatar"
              },
              {
                "type": {
                  "type": "alias",
                  "childType": "date"
                },
                "id": 4,
                "name": "date"
              }
            ]
          }
        },
        {
          "type": "response",
          "content": {
            "name": "InviteUrl",
            "header": 178,
            "doc": [
              "Response for invite url methods"
            ],
            "attributes": [
              {
                "type": "string",
                "id": 1,
                "name": "url"
              }
            ]
          }
        },
        {
          "type": "rpc",
          "content": {
            "name": "GetGroupInviteUrl",
            "header": 177,
            "response": {
              "type": "reference",
              "name": "InviteUrl"
            },
            "doc": [
              "Building invite url",
              {
                "type": "reference",
                "argument": "groupPeer",
                "category": "full",
                "description": "Destination group peer"
              }
            ],
            "attributes": [
              {
                "type": {
                  "type": "struct",
                  "childType": "GroupOutPeer"
                },
                "id": 1,
                "name": "groupPeer"
              }
            ]
          }
        },
        {
          "type": "rpc",
          "content": {
            "name": "RevokeInviteUrl",
            "header": 179,
            "response": {
              "type": "reference",
              "name": "InviteUrl"
            },
            "doc": [
              "Revoking invite urls",
              {
                "type": "reference",
                "argument": "groupPeer",
                "category": "full",
                "description": "Destination group peer"
              }
            ],
            "attributes": [
              {
                "type": {
                  "type": "struct",
                  "childType": "GroupOutPeer"
                },
                "id": 1,
                "name": "groupPeer"
              }
            ]
          }
        },
        {
          "type": "rpc",
          "content": {
            "name": "JoinGroup",
            "header": 180,
            "response": {
              "type": "anonymous",
              "header": 181,
              "doc": [
                {
                  "type": "reference",
                  "argument": "group",
                  "category": "hidden",
                  "description": "  Joined group"
                },
                {
                  "type": "reference",
                  "argument": "users",
                  "category": "hidden",
                  "description": "  Users from members"
                },
                {
                  "type": "reference",
                  "argument": "rid",
                  "category": "full",
                  "description": "  Random id"
                },
                {
                  "type": "reference",
                  "argument": "seq",
                  "category": "full",
                  "description": "  Sequence number"
                },
                {
                  "type": "reference",
                  "argument": "state",
                  "category": "hidden",
                  "description": "  State"
                },
                {
                  "type": "reference",
                  "argument": "date",
                  "category": "full",
                  "description": "  Date of join"
                }
              ],
              "attributes": [
                {
                  "type": {
                    "type": "struct",
                    "childType": "Group"
                  },
                  "id": 1,
                  "name": "group"
                },
                {
                  "type": {
                    "type": "list",
                    "childType": {
                      "type": "struct",
                      "childType": "User"
                    }
                  },
                  "id": 5,
                  "name": "users"
                },
                {
                  "type": {
                    "type": "alias",
                    "childType": "randomId"
                  },
                  "id": 6,
                  "name": "rid"
                },
                {
                  "type": "int32",
                  "id": 2,
                  "name": "seq"
                },
                {
                  "type": {
                    "type": "alias",
                    "childType": "seq_state"
                  },
                  "id": 3,
                  "name": "state"
                },
                {
                  "type": {
                    "type": "alias",
                    "childType": "date"
                  },
                  "id": 4,
                  "name": "date"
                }
              ]
            },
            "doc": [
              "Join group method",
              {
                "type": "reference",
                "argument": "token",
                "category": "full",
                "description": "Url or Token for joining to group"
              }
            ],
            "attributes": [
              {
                "type": "string",
                "id": 1,
                "name": "token"
              }
            ]
          }
        }
      ]
    },
    {
      "title": "Stickers",
      "package": "stickers",
      "doc": [
        "Stickers support in Actor"
      ],
      "items": [
        {
          "type": "struct",
          "content": {
            "name": "StickerDescriptor",
            "doc": [
              "Descriptor of a Sticker",
              {
                "type": "reference",
                "argument": "id",
                "category": "full",
                "description": "  Sticker unique id"
              },
              {
                "type": "reference",
                "argument": "emoji",
                "category": "full",
                "description": "  Emoji code for sticker"
              },
              {
                "type": "reference",
                "argument": "image128",
                "category": "full",
                "description": "  Image of sticker 128x128 in WebP format"
              },
              {
                "type": "reference",
                "argument": "image512",
                "category": "full",
                "description": "  Image of sticker 512x512 in WebP format"
              },
              {
                "type": "reference",
                "argument": "image256",
                "category": "full",
                "description": "  Image of sticker 256x256 in WebP format"
              }
            ],
            "expandable": "true",
            "attributes": [
              {
                "type": "int32",
                "id": 1,
                "name": "id"
              },
              {
                "type": {
                  "type": "opt",
                  "childType": "string"
                },
                "id": 2,
                "name": "emoji"
              },
              {
                "type": {
                  "type": "struct",
                  "childType": "ImageLocation"
                },
                "id": 3,
                "name": "image128"
              },
              {
                "type": {
                  "type": "opt",
                  "childType": {
                    "type": "struct",
                    "childType": "ImageLocation"
                  }
                },
                "id": 4,
                "name": "image512"
              },
              {
                "type": {
                  "type": "opt",
                  "childType": {
                    "type": "struct",
                    "childType": "ImageLocation"
                  }
                },
                "id": 5,
                "name": "image256"
              }
            ]
          }
        },
        {
          "type": "struct",
          "content": {
            "name": "StickerCollection",
            "doc": [
              "Sticker collection",
              {
                "type": "reference",
                "argument": "id",
                "category": "full",
                "description": "  Unique id of a collection"
              },
              {
                "type": "reference",
                "argument": "accessHash",
                "category": "full",
                "description": "  Access Hash of a collection"
              },
              {
                "type": "reference",
                "argument": "stickers",
                "category": "compact",
                "description": "  Sticker list"
              }
            ],
            "expandable": "true",
            "attributes": [
              {
                "type": "int32",
                "id": 1,
                "name": "id"
              },
              {
                "type": "int64",
                "id": 2,
                "name": "accessHash"
              },
              {
                "type": {
                  "type": "list",
                  "childType": {
                    "type": "struct",
                    "childType": "StickerDescriptor"
                  }
                },
                "id": 3,
                "name": "stickers"
              }
            ]
          }
        },
        {
          "type": "response",
          "content": {
            "name": "StickersReponse",
            "header": 240,
            "doc": [
              "Stickers response",
              {
                "type": "reference",
                "argument": "collections",
                "category": "full",
                "description": "  Sticker collections"
              },
              {
                "type": "reference",
                "argument": "seq",
                "category": "full",
                "description": "  Seq of update"
              },
              {
                "type": "reference",
                "argument": "state",
                "category": "full",
                "description": "  State of update"
              }
            ],
            "attributes": [
              {
                "type": {
                  "type": "list",
                  "childType": {
                    "type": "struct",
                    "childType": "StickerCollection"
                  }
                },
                "id": 1,
                "name": "collections"
              },
              {
                "type": "int32",
                "id": 2,
                "name": "seq"
              },
              {
                "type": {
                  "type": "alias",
                  "childType": "seq_state"
                },
                "id": 3,
                "name": "state"
              }
            ]
          }
        },
        {
          "type": "rpc",
          "content": {
            "name": "LoadOwnStickers",
            "header": 238,
            "response": {
              "type": "anonymous",
              "header": 239,
              "doc": [
                "Own Stickers collections",
                {
                  "type": "reference",
                  "argument": "ownStickers",
                  "category": "hidden",
                  "description": "  Own sticker collections"
                }
              ],
              "attributes": [
                {
                  "type": {
                    "type": "list",
                    "childType": {
                      "type": "struct",
                      "childType": "StickerCollection"
                    }
                  },
                  "id": 1,
                  "name": "ownStickers"
                }
              ]
            },
            "doc": [
              "Loading own stickers"
            ],
            "attributes": []
          }
        },
        {
          "type": "update",
          "content": {
            "name": "OwnStickersChanged",
            "header": 161,
            "doc": [
              "Own Stickers changed",
              {
                "type": "reference",
                "argument": "collections",
                "category": "compact",
                "description": "  New own sticker collections"
              }
            ],
            "attributes": [
              {
                "type": {
                  "type": "list",
                  "childType": {
                    "type": "struct",
                    "childType": "StickerCollection"
                  }
                },
                "id": 1,
                "name": "collections"
              }
            ]
          }
        },
        {
          "type": "update",
          "content": {
            "name": "StickerCollectionsChanged",
            "header": 164,
            "doc": [
              "Sticker collection changed",
              {
                "type": "reference",
                "argument": "collections",
                "category": "full",
                "description": "  Updated sticker collections"
              }
            ],
            "attributes": [
              {
                "type": {
                  "type": "list",
                  "childType": {
                    "type": "struct",
                    "childType": "StickerCollection"
                  }
                },
                "id": 1,
                "name": "collections"
              }
            ]
          }
        },
        {
          "type": "rpc",
          "content": {
            "name": "AddStickerCollection",
            "header": 244,
            "response": {
              "type": "reference",
              "name": "StickersReponse"
            },
            "doc": [
              "Adding sticker collection",
              {
                "type": "reference",
                "argument": "id",
                "category": "full",
                "description": "Collection id"
              },
              {
                "type": "reference",
                "argument": "accessHash",
                "category": "full",
                "description": "Collection access hash"
              }
            ],
            "attributes": [
              {
                "type": "int32",
                "id": 1,
                "name": "id"
              },
              {
                "type": "int64",
                "id": 2,
                "name": "accessHash"
              }
            ]
          }
        },
        {
          "type": "rpc",
          "content": {
            "name": "RemoveStickerCollection",
            "header": 245,
            "response": {
              "type": "reference",
              "name": "StickersReponse"
            },
            "doc": [
              "Removing sticker collection",
              {
                "type": "reference",
                "argument": "id",
                "category": "full",
                "description": "Collection id"
              },
              {
                "type": "reference",
                "argument": "accessHash",
                "category": "full",
                "description": "Collection access hash"
              }
            ],
            "attributes": [
              {
                "type": "int32",
                "id": 1,
                "name": "id"
              },
              {
                "type": "int64",
                "id": 2,
                "name": "accessHash"
              }
            ]
          }
        },
        {
          "type": "rpc",
          "content": {
            "name": "LoadStickerCollection",
            "header": 246,
            "response": {
              "type": "anonymous",
              "header": 247,
              "doc": [
                "Loaded collection",
                {
                  "type": "reference",
                  "argument": "collection",
                  "category": "full",
                  "description": "  Collection of stickers"
                }
              ],
              "attributes": [
                {
                  "type": {
                    "type": "struct",
                    "childType": "StickerCollection"
                  },
                  "id": 1,
                  "name": "collection"
                }
              ]
            },
            "doc": [
              "Loading stickers",
              {
                "type": "reference",
                "argument": "id",
                "category": "full",
                "description": "Collection id"
              },
              {
                "type": "reference",
                "argument": "accessHash",
                "category": "full",
                "description": "Collection access hash"
              }
            ],
            "attributes": [
              {
                "type": "int32",
                "id": 1,
                "name": "id"
              },
              {
                "type": "int64",
                "id": 2,
                "name": "accessHash"
              }
            ]
          }
        }
      ]
    },
    {
      "title": "Search",
      "package": "search",
      "doc": [
        "Searching API"
      ],
      "items": [
        {
          "type": "enum",
          "content": {
            "name": "SearchPeerType",
            "values": [
              {
                "name": "Groups",
                "id": 1
              },
              {
                "name": "Contacts",
                "id": 2
              },
              {
                "name": "Public",
                "id": 3
              }
            ]
          }
        },
        {
          "type": "enum",
          "content": {
            "name": "SearchContentType",
            "values": [
              {
                "name": "Any",
                "id": 1
              },
              {
                "name": "Text",
                "id": 2
              },
              {
                "name": "Links",
                "id": 3
              },
              {
                "name": "Documents",
                "id": 4
              },
              {
                "name": "Photos",
                "id": 5
              }
            ]
          }
        },
        {
          "type": "trait",
          "content": {
            "isContainer": "true",
            "name": "SearchCondition",
            "attributes": []
          }
        },
        {
          "type": "struct",
          "content": {
            "name": "SearchPeerTypeCondition",
            "doc": [
              "Search peer type condition",
              {
                "type": "reference",
                "argument": "peerType",
                "category": "full",
                "description": "  Peer type for searching"
              }
            ],
            "trait": {
              "name": "SearchCondition",
              "key": 1
            },
            "attributes": [
              {
                "type": {
                  "type": "enum",
                  "childType": "SearchPeerType"
                },
                "id": 1,
                "name": "peerType"
              }
            ]
          }
        },
        {
          "type": "struct",
          "content": {
            "name": "SearchPieceText",
            "doc": [
              "Search peer name condition",
              {
                "type": "reference",
                "argument": "query",
                "category": "full",
                "description": "  Search query"
              }
            ],
            "trait": {
              "name": "SearchCondition",
              "key": 2
            },
            "attributes": [
              {
                "type": "string",
                "id": 1,
                "name": "query"
              }
            ]
          }
        },
        {
          "type": "struct",
          "content": {
            "name": "SearchAndCondition",
            "doc": [
              "Search AND condion",
              {
                "type": "reference",
                "argument": "andQuery",
                "category": "full",
                "description": "  And Query"
              }
            ],
            "trait": {
              "name": "SearchCondition",
              "key": 3
            },
            "attributes": [
              {
                "type": {
                  "type": "list",
                  "childType": {
                    "type": "trait",
                    "childType": "SearchCondition"
                  }
                },
                "id": 1,
                "name": "andQuery"
              }
            ]
          }
        },
        {
          "type": "struct",
          "content": {
            "name": "SearchOrCondition",
            "doc": [
              "Search OR condition",
              {
                "type": "reference",
                "argument": "orQuery",
                "category": "full",
                "description": "  Or Query"
              }
            ],
            "trait": {
              "name": "SearchCondition",
              "key": 4
            },
            "attributes": [
              {
                "type": {
                  "type": "list",
                  "childType": {
                    "type": "trait",
                    "childType": "SearchCondition"
                  }
                },
                "id": 2,
                "name": "orQuery"
              }
            ]
          }
        },
        {
          "type": "struct",
          "content": {
            "name": "SearchPeerCondition",
            "doc": [
              "Serch Peer condition",
              {
                "type": "reference",
                "argument": "peer",
                "category": "full",
                "description": "  Peer condition"
              }
            ],
            "trait": {
              "name": "SearchCondition",
              "key": 5
            },
            "attributes": [
              {
                "type": {
                  "type": "struct",
                  "childType": "OutPeer"
                },
                "id": 1,
                "name": "peer"
              }
            ]
          }
        },
        {
          "type": "struct",
          "content": {
            "name": "SearchPeerContentType",
            "doc": [
              "Search content type condition",
              {
                "type": "reference",
                "argument": "contentType",
                "category": "full",
                "description": "  Content Type"
              }
            ],
            "trait": {
              "name": "SearchCondition",
              "key": 6
            },
            "attributes": [
              {
                "type": {
                  "type": "enum",
                  "childType": "SearchContentType"
                },
                "id": 1,
                "name": "contentType"
              }
            ]
          }
        },
        {
          "type": "struct",
          "content": {
            "name": "SearchSenderIdConfition",
            "doc": [
              "Searching sender uid condition",
              {
                "type": "reference",
                "argument": "senderId",
                "category": "full",
                "description": "  sender UID"
              }
            ],
            "trait": {
              "name": "SearchCondition",
              "key": 7
            },
            "attributes": [
              {
                "type": {
                  "type": "alias",
                  "childType": "userId"
                },
                "id": 1,
                "name": "senderId"
              }
            ]
          }
        },
        {
          "type": "struct",
          "content": {
            "name": "PeerSearchResult",
            "doc": [
              "Peer search result",
              {
                "type": "reference",
                "argument": "peer",
                "category": "full",
                "description": "  Peer information"
              },
              {
                "type": "reference",
                "argument": "title",
                "category": "full",
                "description": "  Peer title"
              },
              {
                "type": "reference",
                "argument": "description",
                "category": "full",
                "description": "  Description"
              },
              {
                "type": "reference",
                "argument": "membersCount",
                "category": "full",
                "description": "  Members count"
              },
              {
                "type": "reference",
                "argument": "dateCreated",
                "category": "full",
                "description": "  Group Creation Date"
              },
              {
                "type": "reference",
                "argument": "creator",
                "category": "full",
                "description": "  Group Creator uid"
              },
              {
                "type": "reference",
                "argument": "isPublic",
                "category": "full",
                "description": "  Is group public"
              }
            ],
            "attributes": [
              {
                "type": {
                  "type": "struct",
                  "childType": "Peer"
                },
                "id": 1,
                "name": "peer"
              },
              {
                "type": "string",
                "id": 2,
                "name": "title"
              },
              {
                "type": {
                  "type": "opt",
                  "childType": "string"
                },
                "id": 3,
                "name": "description"
              },
              {
                "type": {
                  "type": "opt",
                  "childType": "int32"
                },
                "id": 4,
                "name": "membersCount"
              },
              {
                "type": {
                  "type": "opt",
                  "childType": {
                    "type": "alias",
                    "childType": "date"
                  }
                },
                "id": 5,
                "name": "dateCreated"
              },
              {
                "type": {
                  "type": "opt",
                  "childType": "int32"
                },
                "id": 6,
                "name": "creator"
              },
              {
                "type": {
                  "type": "opt",
                  "childType": "bool"
                },
                "id": 7,
                "name": "isPublic"
              },
              {
                "type": {
                  "type": "opt",
                  "childType": "bool"
                },
                "id": 8,
                "name": "isJoined"
              }
            ]
          }
        },
        {
          "type": "rpc",
          "content": {
            "name": "PeerSearch",
            "header": 233,
            "response": {
              "type": "anonymous",
              "header": 234,
              "doc": [
                "Found peers",
                {
                  "type": "reference",
                  "argument": "searchResults",
                  "category": "full",
                  "description": "  Search Results"
                },
                {
                  "type": "reference",
                  "argument": "users",
                  "category": "full",
                  "description": "  Related users"
                },
                {
                  "type": "reference",
                  "argument": "groups",
                  "category": "full",
                  "description": "  Related groups"
                }
              ],
              "attributes": [
                {
                  "type": {
                    "type": "list",
                    "childType": {
                      "type": "struct",
                      "childType": "PeerSearchResult"
                    }
                  },
                  "id": 1,
                  "name": "searchResults"
                },
                {
                  "type": {
                    "type": "list",
                    "childType": {
                      "type": "struct",
                      "childType": "User"
                    }
                  },
                  "id": 2,
                  "name": "users"
                },
                {
                  "type": {
                    "type": "list",
                    "childType": {
                      "type": "struct",
                      "childType": "Group"
                    }
                  },
                  "id": 3,
                  "name": "groups"
                }
              ]
            },
            "doc": [
              "Performing peer search",
              {
                "type": "reference",
                "argument": "query",
                "category": "full",
                "description": "Search query. Warring not all combinations can be processed by server. (acts as OR)"
              }
            ],
            "attributes": [
              {
                "type": {
                  "type": "list",
                  "childType": {
                    "type": "trait",
                    "childType": "SearchCondition"
                  }
                },
                "id": 1,
                "name": "query"
              }
            ]
          }
        },
        {
          "type": "struct",
          "content": {
            "name": "MessageSearchResult",
            "doc": [
              "Message container",
              {
                "type": "reference",
                "argument": "peer",
                "category": "full",
                "description": "  Message Peer"
              },
              {
                "type": "reference",
                "argument": "rid",
                "category": "full",
                "description": "  Message Random Id"
              },
              {
                "type": "reference",
                "argument": "date",
                "category": "full",
                "description": "  Message Date"
              },
              {
                "type": "reference",
                "argument": "senderId",
                "category": "full",
                "description": "  Message sender UID"
              },
              {
                "type": "reference",
                "argument": "content",
                "category": "full",
                "description": "  Message content"
              }
            ],
            "attributes": [
              {
                "type": {
                  "type": "struct",
                  "childType": "Peer"
                },
                "id": 1,
                "name": "peer"
              },
              {
                "type": {
                  "type": "alias",
                  "childType": "randomId"
                },
                "id": 2,
                "name": "rid"
              },
              {
                "type": {
                  "type": "alias",
                  "childType": "date"
                },
                "id": 3,
                "name": "date"
              },
              {
                "type": {
                  "type": "alias",
                  "childType": "userId"
                },
                "id": 4,
                "name": "senderId"
              },
              {
                "type": {
                  "type": "trait",
                  "childType": "Message"
                },
                "id": 5,
                "name": "content"
              }
            ]
          }
        },
        {
          "type": "struct",
          "content": {
            "name": "MessageSearchItem",
            "doc": [
              "Message Search result container"
            ],
            "attributes": [
              {
                "type": {
                  "type": "struct",
                  "childType": "MessageSearchResult"
                },
                "id": 1,
                "name": "result"
              }
            ]
          }
        },
        {
          "type": "response",
          "content": {
            "name": "MessageSearchResponse",
            "header": 218,
            "doc": [
              "Search Result",
              {
                "type": "reference",
                "argument": "searchResults",
                "category": "full",
                "description": "  Search results"
              },
              {
                "type": "reference",
                "argument": "users",
                "category": "full",
                "description": "  Search users"
              },
              {
                "type": "reference",
                "argument": "groups",
                "category": "full",
                "description": "  Search groups"
              },
              {
                "type": "reference",
                "argument": "loadMoreState",
                "category": "hidden",
                "description": "  State for loading more results"
              }
            ],
            "attributes": [
              {
                "type": {
                  "type": "list",
                  "childType": {
                    "type": "struct",
                    "childType": "MessageSearchItem"
                  }
                },
                "id": 1,
                "name": "searchResults"
              },
              {
                "type": {
                  "type": "list",
                  "childType": {
                    "type": "struct",
                    "childType": "User"
                  }
                },
                "id": 2,
                "name": "users"
              },
              {
                "type": {
                  "type": "list",
                  "childType": {
                    "type": "struct",
                    "childType": "Group"
                  }
                },
                "id": 3,
                "name": "groups"
              },
              {
                "type": {
                  "type": "opt",
                  "childType": "bytes"
                },
                "id": 4,
                "name": "loadMoreState"
              }
            ]
          }
        },
        {
          "type": "rpc",
          "content": {
            "name": "MessageSearch",
            "header": 217,
            "response": {
              "type": "reference",
              "name": "MessageSearchResponse"
            },
            "doc": [
              "Performing message search",
              {
                "type": "reference",
                "argument": "query",
                "category": "full",
                "description": "Search query"
              }
            ],
            "attributes": [
              {
                "type": {
                  "type": "trait",
                  "childType": "SearchCondition"
                },
                "id": 1,
                "name": "query"
              }
            ]
          }
        },
        {
          "type": "rpc",
          "content": {
            "name": "MessageSearchMore",
            "header": 222,
            "response": {
              "type": "reference",
              "name": "MessageSearchResponse"
            },
            "doc": [
              "Performing message search paging",
              {
                "type": "reference",
                "argument": "loadMoreState",
                "category": "hidden",
                "description": "State for loading more results"
              }
            ],
            "attributes": [
              {
                "type": "bytes",
                "id": 1,
                "name": "loadMoreState"
              }
            ]
          }
        }
      ]
    },
    {
      "title": "Public Groups",
      "package": "pubgroups",
      "doc": [
        "Public group is easy way to find communities"
      ],
      "items": [
        {
          "type": "struct",
          "content": {
            "name": "PublicGroup",
            "doc": [
              "Public Group description",
              {
                "type": "reference",
                "argument": "id",
                "category": "full",
                "description": "  Group id"
              },
              {
                "type": "reference",
                "argument": "accessHash",
                "category": "danger",
                "description": "  Group Access hash"
              },
              {
                "type": "reference",
                "argument": "title",
                "category": "full",
                "description": "  Group title"
              },
              {
                "type": "reference",
                "argument": "avatar",
                "category": "full",
                "description": "  Group avatar"
              },
              {
                "type": "reference",
                "argument": "membersCount",
                "category": "full",
                "description": "  Members count in group"
              },
              {
                "type": "reference",
                "argument": "friendsCount",
                "category": "full",
                "description": "  Friends count int group"
              },
              {
                "type": "reference",
                "argument": "description",
                "category": "full",
                "description": "  Description of group"
              }
            ],
            "attributes": [
              {
                "type": "int32",
                "id": 1,
                "name": "id"
              },
              {
                "type": "int64",
                "id": 2,
                "name": "accessHash"
              },
              {
                "type": "string",
                "id": 3,
                "name": "title"
              },
              {
                "type": {
                  "type": "opt",
                  "childType": {
                    "type": "struct",
                    "childType": "Avatar"
                  }
                },
                "id": 7,
                "name": "avatar"
              },
              {
                "type": "int32",
                "id": 4,
                "name": "membersCount"
              },
              {
                "type": "int32",
                "id": 5,
                "name": "friendsCount"
              },
              {
                "type": "string",
                "id": 6,
                "name": "description"
              }
            ]
          }
        },
        {
          "type": "rpc",
          "content": {
            "name": "GetPublicGroups",
            "header": 201,
            "response": {
              "type": "anonymous",
              "header": 202,
              "doc": [
                "Loaded public groups",
                {
                  "type": "reference",
                  "argument": "groups",
                  "category": "full",
                  "description": "  All available groups"
                }
              ],
              "attributes": [
                {
                  "type": {
                    "type": "list",
                    "childType": {
                      "type": "struct",
                      "childType": "PublicGroup"
                    }
                  },
                  "id": 1,
                  "name": "groups"
                }
              ]
            },
            "doc": [
              "Getting public groups"
            ],
            "attributes": []
          }
        }
      ]
    },
    {
      "title": "Invites",
      "package": "invites",
      "doc": [
        "Invite mechanizm"
      ],
      "items": [
        {
          "type": "struct",
          "content": {
            "name": "InviteState",
            "doc": [
              "Invite state",
              {
                "type": "reference",
                "argument": "email",
                "category": "full",
                "description": "  Email of invite"
              },
              {
                "type": "reference",
                "argument": "name",
                "category": "full",
                "description": "  Name of invited user"
              },
              {
                "type": "reference",
                "argument": "uid",
                "category": "full",
                "description": "  Uid of registered user"
              },
              {
                "type": "reference",
                "argument": "tid",
                "category": "full",
                "description": "  Team id of invite"
              }
            ],
            "attributes": [
              {
                "type": "string",
                "id": 1,
                "name": "email"
              },
              {
                "type": {
                  "type": "opt",
                  "childType": "string"
                },
                "id": 2,
                "name": "name"
              },
              {
                "type": {
                  "type": "opt",
                  "childType": "int32"
                },
                "id": 3,
                "name": "uid"
              },
              {
                "type": {
                  "type": "opt",
                  "childType": "int32"
                },
                "id": 4,
                "name": "tid"
              }
            ]
          }
        },
        {
          "type": "response",
          "content": {
            "name": "InviteList",
            "header": 2564,
            "doc": [
              "Intites list",
              {
                "type": "reference",
                "argument": "invites",
                "category": "full",
                "description": "  Intvites"
              },
              {
                "type": "reference",
                "argument": "relatedUsers",
                "category": "full",
                "description": "  Related users in invites"
              },
              {
                "type": "reference",
                "argument": "relatedGroups",
                "category": "full",
                "description": "  Related groups in invites"
              },
              {
                "type": "reference",
                "argument": "relatedTeams",
                "category": "full",
                "description": "  Related teams in invites"
              }
            ],
            "attributes": [
              {
                "type": {
                  "type": "list",
                  "childType": {
                    "type": "struct",
                    "childType": "InviteState"
                  }
                },
                "id": 1,
                "name": "invites"
              },
              {
                "type": {
                  "type": "list",
                  "childType": {
                    "type": "struct",
                    "childType": "User"
                  }
                },
                "id": 2,
                "name": "relatedUsers"
              },
              {
                "type": {
                  "type": "list",
                  "childType": {
                    "type": "struct",
                    "childType": "Group"
                  }
                },
                "id": 3,
                "name": "relatedGroups"
              },
              {
                "type": {
                  "type": "list",
                  "childType": {
                    "type": "struct",
                    "childType": "Team"
                  }
                },
                "id": 4,
                "name": "relatedTeams"
              }
            ]
          }
        },
        {
          "type": "rpc",
          "content": {
            "name": "LoadOwnSentInvites",
            "header": 2563,
            "response": {
              "type": "reference",
              "name": "InviteList"
            },
            "doc": [
              "Loading current invite states"
            ],
            "attributes": []
          }
        },
        {
          "type": "rpc",
          "content": {
            "name": "SendInvite",
            "header": 2565,
            "response": {
              "type": "reference",
              "name": "InviteList"
            },
            "doc": [
              "Sending an email invite",
              {
                "type": "reference",
                "argument": "email",
                "category": "full",
                "description": "Email for invite"
              },
              {
                "type": "reference",
                "argument": "name",
                "category": "full",
                "description": "Optional name for invite"
              },
              {
                "type": "reference",
                "argument": "destTeam",
                "category": "full",
                "description": "Optional team for invite"
              }
            ],
            "attributes": [
              {
                "type": "string",
                "id": 1,
                "name": "email"
              },
              {
                "type": {
                  "type": "opt",
                  "childType": "string"
                },
                "id": 2,
                "name": "name"
              },
              {
                "type": {
                  "type": "opt",
                  "childType": {
                    "type": "struct",
                    "childType": "OutTeam"
                  }
                },
                "id": 3,
                "name": "destTeam"
              }
            ]
          }
        }
      ]
    },
    {
      "title": "Teams",
      "package": "teams",
      "doc": [
        "Teams support for Actor"
      ],
      "items": [
        {
          "type": "struct",
          "content": {
            "name": "Team",
            "doc": [
              "Team entity",
              {
                "type": "reference",
                "argument": "id",
                "category": "full",
                "description": "  Team Id"
              },
              {
                "type": "reference",
                "argument": "accessHash",
                "category": "danger",
                "description": "  Team Access Hash"
              },
              {
                "type": "reference",
                "argument": "name",
                "category": "full",
                "description": "  Team name"
              }
            ],
            "attributes": [
              {
                "type": "int32",
                "id": 1,
                "name": "id"
              },
              {
                "type": "int64",
                "id": 2,
                "name": "accessHash"
              },
              {
                "type": "string",
                "id": 3,
                "name": "name"
              }
            ]
          }
        },
        {
          "type": "struct",
          "content": {
            "name": "OutTeam",
            "doc": [
              "Reference to a team",
              {
                "type": "reference",
                "argument": "id",
                "category": "full",
                "description": "  Team Id"
              },
              {
                "type": "reference",
                "argument": "accessHash",
                "category": "full",
                "description": "  Team access hash"
              }
            ],
            "attributes": [
              {
                "type": "int32",
                "id": 1,
                "name": "id"
              },
              {
                "type": "int64",
                "id": 2,
                "name": "accessHash"
              }
            ]
          }
        },
        {
          "type": "response",
          "content": {
            "name": "TeamsList",
            "header": 2562,
            "doc": [
              "Teams response",
              {
                "type": "reference",
                "argument": "teams",
                "category": "hidden",
                "description": "  Teams list"
              }
            ],
            "attributes": [
              {
                "type": {
                  "type": "list",
                  "childType": {
                    "type": "struct",
                    "childType": "Team"
                  }
                },
                "id": 1,
                "name": "teams"
              }
            ]
          }
        },
        {
          "type": "rpc",
          "content": {
            "name": "LoadOwnTeams",
            "header": 2561,
            "response": {
              "type": "reference",
              "name": "TeamsList"
            },
            "doc": [
              "Loading own teams"
            ],
            "attributes": []
          }
        },
        {
          "type": "update",
          "content": {
            "name": "OwnTeamsChanged",
            "header": 165,
            "doc": [
              "Update about own teams changed",
              {
                "type": "reference",
                "argument": "ownTeams",
                "category": "full",
                "description": "  Updated own teams list"
              }
            ],
            "attributes": [
              {
                "type": {
                  "type": "list",
                  "childType": {
                    "type": "struct",
                    "childType": "Team"
                  }
                },
                "id": 1,
                "name": "ownTeams"
              }
            ]
          }
        },
        {
          "type": "rpc",
          "content": {
            "name": "CreateTeam",
            "header": 2566,
            "response": {
              "type": "anonymous",
              "header": 2567,
              "doc": [
                "Created team response",
                {
                  "type": "reference",
                  "argument": "createdTeam",
                  "category": "full",
                  "description": "  Created Team"
                }
              ],
              "attributes": [
                {
                  "type": {
                    "type": "struct",
                    "childType": "Team"
                  },
                  "id": 1,
                  "name": "createdTeam"
                }
              ]
            },
            "doc": [
              "Creation of a Team",
              {
                "type": "reference",
                "argument": "title",
                "category": "full",
                "description": "Title of a team"
              }
            ],
            "attributes": [
              {
                "type": "string",
                "id": 1,
                "name": "title"
              }
            ]
          }
        },
        {
          "type": "rpc",
          "content": {
            "name": "InviteToTeam",
            "header": 2568,
            "response": {
              "type": "reference",
              "name": "Void"
            },
            "doc": [
              "Inviting people to team",
              {
                "type": "reference",
                "argument": "user",
                "category": "full",
                "description": "Dest user"
              },
              {
                "type": "reference",
                "argument": "destTeam",
                "category": "full",
                "description": "Dest team"
              }
            ],
            "attributes": [
              {
                "type": {
                  "type": "struct",
                  "childType": "UserOutPeer"
                },
                "id": 1,
                "name": "user"
              },
              {
                "type": {
                  "type": "struct",
                  "childType": "OutTeam"
                },
                "id": 3,
                "name": "destTeam"
              }
            ]
          }
        }
      ]
    },
    {
      "title": "Integrations",
      "package": "integrations",
      "doc": [
        "Package contains methods for providing integration"
      ],
      "items": [
        {
          "type": "response",
          "content": {
            "name": "IntegrationToken",
            "header": 183,
            "doc": [
              "Group token response",
              {
                "type": "reference",
                "argument": "token",
                "category": "danger",
                "description": "  current group token"
              },
              {
                "type": "reference",
                "argument": "url",
                "category": "danger",
                "description": "  current group url"
              }
            ],
            "attributes": [
              {
                "type": "string",
                "id": 1,
                "name": "token"
              },
              {
                "type": "string",
                "id": 2,
                "name": "url"
              }
            ]
          }
        },
        {
          "type": "rpc",
          "content": {
            "name": "GetIntegrationToken",
            "header": 182,
            "response": {
              "type": "reference",
              "name": "IntegrationToken"
            },
            "doc": [
              "Getting current group token",
              {
                "type": "reference",
                "argument": "groupPeer",
                "category": "full",
                "description": "Peer"
              }
            ],
            "attributes": [
              {
                "type": {
                  "type": "struct",
                  "childType": "OutPeer"
                },
                "id": 1,
                "name": "groupPeer"
              }
            ]
          }
        },
        {
          "type": "rpc",
          "content": {
            "name": "RevokeIntegrationToken",
            "header": 184,
            "response": {
              "type": "reference",
              "name": "IntegrationToken"
            },
            "doc": [
              "Revoke group token",
              {
                "type": "reference",
                "argument": "groupPeer",
                "category": "full",
                "description": "Peer"
              }
            ],
            "attributes": [
              {
                "type": {
                  "type": "struct",
                  "childType": "OutPeer"
                },
                "id": 1,
                "name": "groupPeer"
              }
            ]
          }
        }
      ]
    },
    {
      "title": "Typing and Online",
      "package": "weak",
      "items": [
        {
          "type": "enum",
          "content": {
            "name": "TypingType",
            "values": [
              {
                "name": "Text",
                "id": 0
              }
            ]
          }
        },
        {
          "type": "rpc",
          "content": {
            "name": "Typing",
            "header": 27,
            "response": {
              "type": "reference",
              "name": "Void"
            },
            "doc": [
              "Sending typing notification",
              {
                "type": "reference",
                "argument": "peer",
                "category": "full",
                "description": "Destination peer"
              },
              {
                "type": "reference",
                "argument": "typingType",
                "category": "full",
                "description": "typing type."
              }
            ],
            "attributes": [
              {
                "type": {
                  "type": "struct",
                  "childType": "OutPeer"
                },
                "id": 1,
                "name": "peer"
              },
              {
                "type": {
                  "type": "enum",
                  "childType": "TypingType"
                },
                "id": 3,
                "name": "typingType"
              }
            ]
          }
        },
        {
          "type": "rpc",
          "content": {
            "name": "StopTyping",
            "header": 30,
            "response": {
              "type": "reference",
              "name": "Void"
            },
            "doc": [
              "Stop typing",
              {
                "type": "reference",
                "argument": "peer",
                "category": "full",
                "description": "Destination peer"
              },
              {
                "type": "reference",
                "argument": "typingType",
                "category": "full",
                "description": "typing type"
              }
            ],
            "attributes": [
              {
                "type": {
                  "type": "struct",
                  "childType": "OutPeer"
                },
                "id": 1,
                "name": "peer"
              },
              {
                "type": {
                  "type": "enum",
                  "childType": "TypingType"
                },
                "id": 2,
                "name": "typingType"
              }
            ]
          }
        },
        {
          "type": "rpc",
          "content": {
            "name": "SetOnline",
            "header": 29,
            "response": {
              "type": "reference",
              "name": "Void"
            },
            "doc": [
              "Sending online state",
              {
                "type": "reference",
                "argument": "isOnline",
                "category": "full",
                "description": "is user online"
              },
              {
                "type": "reference",
                "argument": "timeout",
                "category": "full",
                "description": "timeout of online state in milliseconds"
              }
            ],
            "attributes": [
              {
                "type": "bool",
                "id": 1,
                "name": "isOnline"
              },
              {
                "type": {
                  "type": "alias",
                  "childType": "msec"
                },
                "id": 2,
                "name": "timeout"
              }
            ]
          }
        },
        {
          "type": "empty"
        },
        {
          "type": "update",
          "content": {
            "name": "Typing",
            "header": 6,
            "doc": [
              "Update about user's typing",
              {
                "type": "reference",
                "argument": "peer",
                "category": "full",
                "description": "  Conversation peer"
              },
              {
                "type": "reference",
                "argument": "uid",
                "category": "full",
                "description": "  User's id"
              },
              {
                "type": "reference",
                "argument": "typingType",
                "category": "full",
                "description": "  Type of typing"
              }
            ],
            "attributes": [
              {
                "type": {
                  "type": "struct",
                  "childType": "Peer"
                },
                "id": 1,
                "name": "peer"
              },
              {
                "type": {
                  "type": "alias",
                  "childType": "userId"
                },
                "id": 2,
                "name": "uid"
              },
              {
                "type": {
                  "type": "enum",
                  "childType": "TypingType"
                },
                "id": 3,
                "name": "typingType"
              }
            ]
          }
        },
        {
          "type": "update",
          "content": {
            "name": "TypingStop",
            "header": 81,
            "doc": [
              "Update about user's typing stop",
              {
                "type": "reference",
                "argument": "peer",
                "category": "full",
                "description": "  Conversation peer"
              },
              {
                "type": "reference",
                "argument": "uid",
                "category": "full",
                "description": "  User's id"
              },
              {
                "type": "reference",
                "argument": "typingType",
                "category": "hidden",
                "description": "  Type of typing"
              }
            ],
            "attributes": [
              {
                "type": {
                  "type": "struct",
                  "childType": "Peer"
                },
                "id": 1,
                "name": "peer"
              },
              {
                "type": {
                  "type": "alias",
                  "childType": "userId"
                },
                "id": 2,
                "name": "uid"
              },
              {
                "type": {
                  "type": "enum",
                  "childType": "TypingType"
                },
                "id": 3,
                "name": "typingType"
              }
            ]
          }
        },
        {
          "type": "update",
          "content": {
            "name": "UserOnline",
            "header": 7,
            "doc": [
              "Update about user became online",
              {
                "type": "reference",
                "argument": "uid",
                "category": "full",
                "description": "  User's Id"
              }
            ],
            "attributes": [
              {
                "type": {
                  "type": "alias",
                  "childType": "userId"
                },
                "id": 1,
                "name": "uid"
              }
            ]
          }
        },
        {
          "type": "update",
          "content": {
            "name": "UserOffline",
            "header": 8,
            "doc": [
              "Update about user became offline",
              {
                "type": "reference",
                "argument": "uid",
                "category": "full",
                "description": "  User's id"
              }
            ],
            "attributes": [
              {
                "type": {
                  "type": "alias",
                  "childType": "userId"
                },
                "id": 1,
                "name": "uid"
              }
            ]
          }
        },
        {
          "type": "update",
          "content": {
            "name": "UserLastSeen",
            "header": 9,
            "doc": [
              "Update about user's last seen state",
              {
                "type": "reference",
                "argument": "uid",
                "category": "full",
                "description": "  User's id"
              },
              {
                "type": "reference",
                "argument": "date",
                "category": "full",
                "description": "  Last seen time"
              }
            ],
            "attributes": [
              {
                "type": {
                  "type": "alias",
                  "childType": "userId"
                },
                "id": 1,
                "name": "uid"
              },
              {
                "type": {
                  "type": "alias",
                  "childType": "date"
                },
                "id": 2,
                "name": "date"
              }
            ]
          }
        },
        {
          "type": "update",
          "content": {
            "name": "GroupOnline",
            "header": 33,
            "doc": [
              "Update about group online change",
              {
                "type": "reference",
                "argument": "groupId",
                "category": "full",
                "description": "  Group id"
              },
              {
                "type": "reference",
                "argument": "count",
                "category": "full",
                "description": "  current online user's count"
              }
            ],
            "attributes": [
              {
                "type": {
                  "type": "alias",
                  "childType": "groupId"
                },
                "id": 1,
                "name": "groupId"
              },
              {
                "type": "int32",
                "id": 2,
                "name": "count"
              }
            ]
          }
        }
      ]
    },
    {
      "title": "Media and Files",
      "package": "files",
      "items": [
        {
          "type": "struct",
          "content": {
            "name": "FileLocation",
            "doc": [
              "Location of file on server",
              {
                "type": "reference",
                "argument": "fileId",
                "category": "full",
                "description": "  Unique Id of file"
              },
              {
                "type": "reference",
                "argument": "accessHash",
                "category": "danger",
                "description": "  Access hash of file"
              }
            ],
            "expandable": "true",
            "attributes": [
              {
                "type": "int64",
                "id": 1,
                "name": "fileId"
              },
              {
                "type": "int64",
                "id": 2,
                "name": "accessHash"
              }
            ]
          }
        },
        {
          "type": "struct",
          "content": {
            "name": "ImageLocation",
            "doc": [
              "Image location",
              {
                "type": "reference",
                "argument": "fileLocation",
                "category": "full",
                "description": "  Location of file"
              },
              {
                "type": "reference",
                "argument": "width",
                "category": "full",
                "description": "  Width of avatar image"
              },
              {
                "type": "reference",
                "argument": "height",
                "category": "full",
                "description": "  Height of avatar image"
              },
              {
                "type": "reference",
                "argument": "fileSize",
                "category": "full",
                "description": "  Size of file"
              }
            ],
            "expandable": "true",
            "attributes": [
              {
                "type": {
                  "type": "struct",
                  "childType": "FileLocation"
                },
                "id": 1,
                "name": "fileLocation"
              },
              {
                "type": "int32",
                "id": 2,
                "name": "width"
              },
              {
                "type": "int32",
                "id": 3,
                "name": "height"
              },
              {
                "type": "int32",
                "id": 4,
                "name": "fileSize"
              }
            ]
          }
        },
        {
          "type": "struct",
          "content": {
            "name": "AvatarImage",
            "doc": [
              "Avatar Image",
              {
                "type": "reference",
                "argument": "fileLocation",
                "category": "full",
                "description": "  Location of file"
              },
              {
                "type": "reference",
                "argument": "width",
                "category": "full",
                "description": "  Width of avatar image"
              },
              {
                "type": "reference",
                "argument": "height",
                "category": "full",
                "description": "  Height of avatar image"
              },
              {
                "type": "reference",
                "argument": "fileSize",
                "category": "full",
                "description": "  Size of file"
              }
            ],
            "expandable": "true",
            "attributes": [
              {
                "type": {
                  "type": "struct",
                  "childType": "FileLocation"
                },
                "id": 1,
                "name": "fileLocation"
              },
              {
                "type": "int32",
                "id": 2,
                "name": "width"
              },
              {
                "type": "int32",
                "id": 3,
                "name": "height"
              },
              {
                "type": "int32",
                "id": 4,
                "name": "fileSize"
              }
            ]
          }
        },
        {
          "type": "struct",
          "content": {
            "name": "Avatar",
            "doc": [
              "Avatar of User or Group",
              {
                "type": "reference",
                "argument": "smallImage",
                "category": "compact",
                "description": "  Optional small image of avatar box in 100x100"
              },
              {
                "type": "reference",
                "argument": "largeImage",
                "category": "compact",
                "description": "  Optional large image of avatar box in 200x200"
              },
              {
                "type": "reference",
                "argument": "fullImage",
                "category": "compact",
                "description": "  Optional full screen image of avatar"
              }
            ],
            "expandable": "true",
            "attributes": [
              {
                "type": {
                  "type": "opt",
                  "childType": {
                    "type": "struct",
                    "childType": "AvatarImage"
                  }
                },
                "id": 1,
                "name": "smallImage"
              },
              {
                "type": {
                  "type": "opt",
                  "childType": {
                    "type": "struct",
                    "childType": "AvatarImage"
                  }
                },
                "id": 2,
                "name": "largeImage"
              },
              {
                "type": {
                  "type": "opt",
                  "childType": {
                    "type": "struct",
                    "childType": "AvatarImage"
                  }
                },
                "id": 3,
                "name": "fullImage"
              }
            ]
          }
        },
        {
          "type": "struct",
          "content": {
            "name": "FastThumb",
            "doc": [
              "Fast thumb of media messages. Less than 90x90 and compressed by JPEG with low quality",
              {
                "type": "reference",
                "argument": "w",
                "category": "full",
                "description": "  Width of thumb"
              },
              {
                "type": "reference",
                "argument": "h",
                "category": "full",
                "description": "  Height of thump"
              },
              {
                "type": "reference",
                "argument": "thumb",
                "category": "compact",
                "description": "  compressed image data"
              }
            ],
            "expandable": "true",
            "attributes": [
              {
                "type": "int32",
                "id": 1,
                "name": "w"
              },
              {
                "type": "int32",
                "id": 2,
                "name": "h"
              },
              {
                "type": "bytes",
                "id": 3,
                "name": "thumb"
              }
            ]
          }
        },
        {
          "type": "enum",
          "content": {
            "name": "Colors",
            "values": [
              {
                "name": "red",
                "id": 1
              },
              {
                "name": "yellow",
                "id": 2
              },
              {
                "name": "green",
                "id": 3
              }
            ]
          }
        },
        {
          "type": "trait",
          "content": {
            "isContainer": "true",
            "name": "Color",
            "attributes": []
          }
        },
        {
          "type": "struct",
          "content": {
            "name": "RgbColor",
            "doc": [
              "RGB Color",
              {
                "type": "reference",
                "argument": "rgb",
                "category": "full",
                "description": "  RGB color value"
              }
            ],
            "trait": {
              "name": "Color",
              "key": 1
            },
            "expandable": "true",
            "attributes": [
              {
                "type": "int32",
                "id": 1,
                "name": "rgb"
              }
            ]
          }
        },
        {
          "type": "struct",
          "content": {
            "name": "PredefinedColor",
            "doc": [
              "Predefined color",
              {
                "type": "reference",
                "argument": "color",
                "category": "hidden",
                "description": "  Predefined color value"
              }
            ],
            "trait": {
              "name": "Color",
              "key": 2
            },
            "expandable": "true",
            "attributes": [
              {
                "type": {
                  "type": "enum",
                  "childType": "Colors"
                },
                "id": 1,
                "name": "color"
              }
            ]
          }
        },
        {
          "type": "empty"
        },
        {
          "type": "struct",
          "content": {
            "name": "HTTPHeader",
            "doc": [
              "HTTP Header record",
              {
                "type": "reference",
                "argument": "key",
                "category": "full",
                "description": "  HTTP Header name"
              },
              {
                "type": "reference",
                "argument": "value",
                "category": "full",
                "description": "  HTTP Header value"
              }
            ],
            "attributes": [
              {
                "type": "string",
                "id": 1,
                "name": "key"
              },
              {
                "type": "string",
                "id": 2,
                "name": "value"
              }
            ]
          }
        },
        {
          "type": "struct",
          "content": {
            "name": "FileUrlDescription",
            "doc": [
              "File url description",
              {
                "type": "reference",
                "argument": "fileId",
                "category": "full",
                "description": "  File id of url"
              },
              {
                "type": "reference",
                "argument": "url",
                "category": "full",
                "description": "  Url for downloading"
              },
              {
                "type": "reference",
                "argument": "timeout",
                "category": "full",
                "description": "  Timeout of url"
              },
              {
                "type": "reference",
                "argument": "unsignedUrl",
                "category": "hidden",
                "description": "  Unsigned URL (used to honor web caches)"
              },
              {
                "type": "reference",
                "argument": "unsignedUrlHeaders",
                "category": "hidden",
                "description": "  Headers that is required to download files with unsigned url"
              }
            ],
            "attributes": [
              {
                "type": "int64",
                "id": 1,
                "name": "fileId"
              },
              {
                "type": "string",
                "id": 2,
                "name": "url"
              },
              {
                "type": {
                  "type": "alias",
                  "childType": "sec"
                },
                "id": 3,
                "name": "timeout"
              },
              {
                "type": {
                  "type": "opt",
                  "childType": "string"
                },
                "id": 4,
                "name": "unsignedUrl"
              },
              {
                "type": {
                  "type": "list",
                  "childType": {
                    "type": "struct",
                    "childType": "HTTPHeader"
                  }
                },
                "id": 5,
                "name": "unsignedUrlHeaders"
              }
            ]
          }
        },
        {
          "type": "rpc",
          "content": {
            "name": "GetFileUrl",
            "header": 77,
            "response": {
              "type": "anonymous",
              "header": 78,
              "doc": [
                {
                  "type": "reference",
                  "argument": "url",
                  "category": "full",
                  "description": "  Url for downloading"
                },
                {
                  "type": "reference",
                  "argument": "timeout",
                  "category": "full",
                  "description": "  Timeout of url"
                },
                {
                  "type": "reference",
                  "argument": "unsignedUrl",
                  "category": "full",
                  "description": "  Unsigned URL (used to honor web caches)"
                },
                {
                  "type": "reference",
                  "argument": "unsignedUrlHeaders",
                  "category": "full",
                  "description": "  Headers that is required to download files with unsigned url"
                }
              ],
              "attributes": [
                {
                  "type": "string",
                  "id": 1,
                  "name": "url"
                },
                {
                  "type": {
                    "type": "alias",
                    "childType": "sec"
                  },
                  "id": 2,
                  "name": "timeout"
                },
                {
                  "type": {
                    "type": "opt",
                    "childType": "string"
                  },
                  "id": 3,
                  "name": "unsignedUrl"
                },
                {
                  "type": {
                    "type": "list",
                    "childType": {
                      "type": "struct",
                      "childType": "HTTPHeader"
                    }
                  },
                  "id": 4,
                  "name": "unsignedUrlHeaders"
                }
              ]
            },
            "doc": [
              "Requesting file URL for downloading",
              {
                "type": "reference",
                "argument": "file",
                "category": "full",
                "description": "file's location"
              }
            ],
            "attributes": [
              {
                "type": {
                  "type": "struct",
                  "childType": "FileLocation"
                },
                "id": 1,
                "name": "file"
              }
            ]
          }
        },
        {
          "type": "rpc",
          "content": {
            "name": "GetFileUrls",
            "header": 2573,
            "response": {
              "type": "anonymous",
              "header": 2574,
              "doc": [
                {
                  "type": "reference",
                  "argument": "fileUrls",
                  "category": "full",
                  "description": "  File urls"
                }
              ],
              "attributes": [
                {
                  "type": {
                    "type": "list",
                    "childType": {
                      "type": "struct",
                      "childType": "FileUrlDescription"
                    }
                  },
                  "id": 1,
                  "name": "fileUrls"
                }
              ]
            },
            "doc": [
              "Requesting multiple fle URL for downloading",
              {
                "type": "reference",
                "argument": "files",
                "category": "hidden",
                "description": "File locations to load urls"
              }
            ],
            "attributes": [
              {
                "type": {
                  "type": "list",
                  "childType": {
                    "type": "struct",
                    "childType": "FileLocation"
                  }
                },
                "id": 1,
                "name": "files"
              }
            ]
          }
        },
        {
          "type": "rpc",
          "content": {
            "name": "GetFileUploadUrl",
            "header": 97,
            "response": {
              "type": "anonymous",
              "header": 121,
              "doc": [
                {
                  "type": "reference",
                  "argument": "url",
                  "category": "full",
                  "description": "  Url for uploading"
                },
                {
                  "type": "reference",
                  "argument": "uploadKey",
                  "category": "compact",
                  "description": "  Upload key for upload"
                }
              ],
              "attributes": [
                {
                  "type": "string",
                  "id": 1,
                  "name": "url"
                },
                {
                  "type": "bytes",
                  "id": 2,
                  "name": "uploadKey"
                }
              ]
            },
            "doc": [
              "Requesting pload url",
              {
                "type": "reference",
                "argument": "expectedSize",
                "category": "full",
                "description": "Expected size of uploading file. May be inaccurate. Used for size allocation optimizations."
              }
            ],
            "attributes": [
              {
                "type": "int32",
                "id": 1,
                "name": "expectedSize"
              }
            ]
          }
        },
        {
          "type": "rpc",
          "content": {
            "name": "CommitFileUpload",
            "header": 122,
            "response": {
              "type": "anonymous",
              "header": 138,
              "doc": [
                {
                  "type": "reference",
                  "argument": "uploadedFileLocation",
                  "category": "hidden",
                  "description": "  Result file location"
                }
              ],
              "attributes": [
                {
                  "type": {
                    "type": "struct",
                    "childType": "FileLocation"
                  },
                  "id": 1,
                  "name": "uploadedFileLocation"
                }
              ]
            },
            "doc": [
              "Comminting uploaded file to storage"
            ],
            "attributes": [
              {
                "type": "bytes",
                "id": 1,
                "name": "uploadKey"
              },
              {
                "type": "string",
                "id": 2,
                "name": "fileName"
              }
            ]
          }
        },
        {
          "type": "rpc",
          "content": {
            "name": "GetFileUploadPartUrl",
            "header": 142,
            "response": {
              "type": "anonymous",
              "header": 141,
              "doc": [
                {
                  "type": "reference",
                  "argument": "url",
                  "category": "full",
                  "description": "  Upload file part url"
                }
              ],
              "attributes": [
                {
                  "type": "string",
                  "id": 1,
                  "name": "url"
                }
              ]
            },
            "doc": [
              "Upload file part",
              {
                "type": "reference",
                "argument": "uploadKey",
                "category": "compact",
                "description": "Upload Key from requestFileUploadUrl"
              }
            ],
            "attributes": [
              {
                "type": "int32",
                "id": 1,
                "name": "partNumber"
              },
              {
                "type": "int32",
                "id": 2,
                "name": "partSize"
              },
              {
                "type": "bytes",
                "id": 3,
                "name": "uploadKey"
              }
            ]
          }
        }
      ]
    },
    {
      "title": "Config sync",
      "package": "configs",
      "doc": [
        "Parameter Syncronization across devices. Can be used for simple sync",
        "across devices without rewriting server side code."
      ],
      "items": [
        {
          "type": "struct",
          "content": {
            "name": "Parameter",
            "doc": [
              "Syncing Parameter",
              {
                "type": "reference",
                "argument": "key",
                "category": "full",
                "description": "  Key of parameter"
              },
              {
                "type": "reference",
                "argument": "value",
                "category": "full",
                "description": "  Value of parameter"
              }
            ],
            "attributes": [
              {
                "type": "string",
                "id": 1,
                "name": "key"
              },
              {
                "type": "string",
                "id": 2,
                "name": "value"
              }
            ]
          }
        },
        {
          "type": "rpc",
          "content": {
            "name": "GetParameters",
            "header": 134,
            "response": {
              "type": "anonymous",
              "header": 135,
              "doc": [
                {
                  "type": "reference",
                  "argument": "parameters",
                  "category": "full",
                  "description": "  Current parameters"
                }
              ],
              "attributes": [
                {
                  "type": {
                    "type": "list",
                    "childType": {
                      "type": "struct",
                      "childType": "Parameter"
                    }
                  },
                  "id": 1,
                  "name": "parameters"
                }
              ]
            },
            "doc": [
              "Getting Parameters"
            ],
            "attributes": []
          }
        },
        {
          "type": "rpc",
          "content": {
            "name": "EditParameter",
            "header": 128,
            "response": {
              "type": "reference",
              "name": "Seq"
            },
            "doc": [
              "Change parameter value",
              {
                "type": "reference",
                "argument": "key",
                "category": "full",
                "description": "Key of parameter"
              },
              {
                "type": "reference",
                "argument": "value",
                "category": "full",
                "description": "Value of parameter"
              }
            ],
            "attributes": [
              {
                "type": "string",
                "id": 1,
                "name": "key"
              },
              {
                "type": {
                  "type": "opt",
                  "childType": "string"
                },
                "id": 2,
                "name": "value"
              }
            ]
          }
        },
        {
          "type": "update",
          "content": {
            "name": "ParameterChanged",
            "header": 131,
            "doc": [
              "Update about parameter change",
              {
                "type": "reference",
                "argument": "key",
                "category": "full",
                "description": "  Key of parameter"
              },
              {
                "type": "reference",
                "argument": "value",
                "category": "full",
                "description": "  Value of parameter"
              }
            ],
            "attributes": [
              {
                "type": "string",
                "id": 1,
                "name": "key"
              },
              {
                "type": {
                  "type": "opt",
                  "childType": "string"
                },
                "id": 2,
                "name": "value"
              }
            ]
          }
        }
      ]
    },
    {
      "title": "Stats",
      "package": "stats",
      "doc": [
        "Saving statistics information"
      ],
      "items": [
        {
          "type": "struct",
          "content": {
            "name": "EventRecord",
            "doc": [
              "Record for stored event"
            ],
            "attributes": [
              {
                "type": {
                  "type": "alias",
                  "childType": "date"
                },
                "id": 1,
                "name": "date"
              },
              {
                "type": {
                  "type": "trait",
                  "childType": "Event"
                },
                "id": 2,
                "name": "event"
              }
            ]
          }
        },
        {
          "type": "trait",
          "content": {
            "isContainer": "true",
            "name": "Event",
            "attributes": []
          }
        },
        {
          "type": "struct",
          "content": {
            "name": "UntypedEvent",
            "doc": [
              "Untyped event",
              {
                "type": "reference",
                "argument": "eventType",
                "category": "full",
                "description": "  Event type"
              },
              {
                "type": "reference",
                "argument": "params",
                "category": "full",
                "description": "  optional params for event"
              }
            ],
            "trait": {
              "name": "Event",
              "key": 1
            },
            "expandable": "true",
            "attributes": [
              {
                "type": "string",
                "id": 1,
                "name": "eventType"
              },
              {
                "type": {
                  "type": "opt",
                  "childType": {
                    "type": "trait",
                    "childType": "RawValue"
                  }
                },
                "id": 2,
                "name": "params"
              }
            ]
          }
        },
        {
          "type": "struct",
          "content": {
            "name": "ContentViewChanged",
            "doc": [
              "Content view event",
              {
                "type": "reference",
                "argument": "contentType",
                "category": "full",
                "description": "  unique content id"
              },
              {
                "type": "reference",
                "argument": "visible",
                "category": "full",
                "description": "  Is content visible"
              },
              {
                "type": "reference",
                "argument": "params",
                "category": "full",
                "description": "  optional params for content view"
              }
            ],
            "trait": {
              "name": "Event",
              "key": 2
            },
            "expandable": "true",
            "attributes": [
              {
                "type": "string",
                "id": 1,
                "name": "contentType"
              },
              {
                "type": "string",
                "id": 2,
                "name": "contentId"
              },
              {
                "type": "bool",
                "id": 3,
                "name": "visible"
              },
              {
                "type": {
                  "type": "opt",
                  "childType": {
                    "type": "trait",
                    "childType": "RawValue"
                  }
                },
                "id": 4,
                "name": "params"
              }
            ]
          }
        },
        {
          "type": "struct",
          "content": {
            "name": "AppVisibleChanged",
            "doc": [
              "On App Visible event",
              {
                "type": "reference",
                "argument": "visible",
                "category": "full",
                "description": "  Is app visible"
              }
            ],
            "trait": {
              "name": "Event",
              "key": 4
            },
            "expandable": "true",
            "attributes": [
              {
                "type": "bool",
                "id": 1,
                "name": "visible"
              }
            ]
          }
        },
        {
          "type": "rpc",
          "content": {
            "name": "StoreEvents",
            "header": 243,
            "response": {
              "type": "reference",
              "name": "Void"
            },
            "doc": [
              "Storing events on server",
              {
                "type": "reference",
                "argument": "events",
                "category": "full",
                "description": "Events for storing"
              }
            ],
            "attributes": [
              {
                "type": {
                  "type": "list",
                  "childType": {
                    "type": "trait",
                    "childType": "Event"
                  }
                },
                "id": 1,
                "name": "events"
              }
            ]
          }
        }
      ]
    },
    {
      "title": "Raw API",
      "package": "raw",
      "doc": [
        "Schema-less API that is useful for external integrations"
      ],
      "items": [
        {
          "type": "rpc",
          "content": {
            "name": "RawRequest",
            "header": 2569,
            "response": {
              "type": "anonymous",
              "header": 2570,
              "doc": [
                "Response of a raw request",
                {
                  "type": "reference",
                  "argument": "result",
                  "category": "full",
                  "description": "  Result of request"
                }
              ],
              "attributes": [
                {
                  "type": {
                    "type": "trait",
                    "childType": "RawValue"
                  },
                  "id": 1,
                  "name": "result"
                }
              ]
            },
            "doc": [
              "Making raw request to external service via shema-less RPC request",
              {
                "type": "reference",
                "argument": "service",
                "category": "full",
                "description": "Service name for RPC request"
              },
              {
                "type": "reference",
                "argument": "method",
                "category": "full",
                "description": "Method for execution"
              },
              {
                "type": "reference",
                "argument": "params",
                "category": "full",
                "description": "Optional params for the method"
              }
            ],
            "attributes": [
              {
                "type": "string",
                "id": 1,
                "name": "service"
              },
              {
                "type": "string",
                "id": 2,
                "name": "method"
              },
              {
                "type": {
                  "type": "opt",
                  "childType": {
                    "type": "trait",
                    "childType": "RawValue"
                  }
                },
                "id": 3,
                "name": "params"
              }
            ]
          }
        }
      ]
    },
    {
      "title": "Wallpappers",
      "package": "wallpappers",
      "doc": [
        "Wallpappers support"
      ],
      "items": [
        {
          "type": "struct",
          "content": {
            "name": "Wallpapper",
            "doc": [
              "Wallpapper structure",
              {
                "type": "reference",
                "argument": "id",
                "category": "full",
                "description": "  Wallpapper id"
              },
              {
                "type": "reference",
                "argument": "w",
                "category": "full",
                "description": "  Image width"
              },
              {
                "type": "reference",
                "argument": "h",
                "category": "full",
                "description": "  Image height"
              },
              {
                "type": "reference",
                "argument": "fileSize",
                "category": "full",
                "description": "  Image file size"
              },
              {
                "type": "reference",
                "argument": "file",
                "category": "full",
                "description": "  Image file reference"
              },
              {
                "type": "reference",
                "argument": "thumb",
                "category": "full",
                "description": "  Image thumb"
              }
            ],
            "attributes": [
              {
                "type": "int32",
                "id": 7,
                "name": "id"
              },
              {
                "type": "int32",
                "id": 1,
                "name": "w"
              },
              {
                "type": "int32",
                "id": 2,
                "name": "h"
              },
              {
                "type": "int32",
                "id": 3,
                "name": "fileSize"
              },
              {
                "type": {
                  "type": "struct",
                  "childType": "FileLocation"
                },
                "id": 5,
                "name": "file"
              },
              {
                "type": {
                  "type": "struct",
                  "childType": "FastThumb"
                },
                "id": 6,
                "name": "thumb"
              }
            ]
          }
        },
        {
          "type": "rpc",
          "content": {
            "name": "LoadWallpappers",
            "header": 241,
            "response": {
              "type": "anonymous",
              "header": 242,
              "doc": [
                "Loaded Wallpappers",
                {
                  "type": "reference",
                  "argument": "wallpappers",
                  "category": "full",
                  "description": "  Available wallpapper list"
                }
              ],
              "attributes": [
                {
                  "type": {
                    "type": "list",
                    "childType": {
                      "type": "struct",
                      "childType": "Wallpapper"
                    }
                  },
                  "id": 1,
                  "name": "wallpappers"
                }
              ]
            },
            "doc": [
              "Load available wallpappers",
              {
                "type": "reference",
                "argument": "maxWidth",
                "category": "full",
                "description": "Maximum width of wallpapper"
              },
              {
                "type": "reference",
                "argument": "maxHeight",
                "category": "full",
                "description": "Maximum height of wallpapper"
              }
            ],
            "attributes": [
              {
                "type": "int32",
                "id": 1,
                "name": "maxWidth"
              },
              {
                "type": "int32",
                "id": 2,
                "name": "maxHeight"
              }
            ]
          }
        }
      ]
    },
    {
      "title": "Push",
      "package": "push",
      "doc": [
        "Vendor's pushes for receiving push notifications.",
        "Push notification contains current sequence number of main sequence."
      ],
      "items": [
        {
          "type": "rpc",
          "content": {
            "name": "RegisterGooglePush",
            "header": 51,
            "response": {
              "type": "reference",
              "name": "Void"
            },
            "doc": [
              "Registering push token on server",
              {
                "type": "reference",
                "argument": "projectId",
                "category": "hidden",
                "description": "Project Id of token"
              },
              {
                "type": "reference",
                "argument": "token",
                "category": "danger",
                "description": "token value"
              }
            ],
            "attributes": [
              {
                "type": "int64",
                "id": 1,
                "name": "projectId"
              },
              {
                "type": "string",
                "id": 2,
                "name": "token"
              }
            ]
          }
        },
        {
          "type": "rpc",
          "content": {
            "name": "RegisterApplePush",
            "header": 76,
            "response": {
              "type": "reference",
              "name": "Void"
            },
            "doc": [
              "Registering apple push on server",
              {
                "type": "reference",
                "argument": "apnsKey",
                "category": "hidden",
                "description": "apns key id"
              },
              {
                "type": "reference",
                "argument": "token",
                "category": "danger",
                "description": "token value"
              }
            ],
            "attributes": [
              {
                "type": "int32",
                "id": 1,
                "name": "apnsKey"
              },
              {
                "type": "string",
                "id": 2,
                "name": "token"
              }
            ]
          }
        },
        {
          "type": "rpc",
          "content": {
            "name": "RegisterActorPush",
            "header": 2575,
            "response": {
              "type": "reference",
              "name": "Void"
            },
            "doc": [
              "Register Actor Push token",
              {
                "type": "reference",
                "argument": "endpoint",
                "category": "full",
                "description": "Endpoint for push sending"
              },
              {
                "type": "reference",
                "argument": "publicKeys",
                "category": "full",
                "description": "Optional public keys for receiving push notifications"
              }
            ],
            "attributes": [
              {
                "type": "string",
                "id": 1,
                "name": "endpoint"
              },
              {
                "type": {
                  "type": "list",
                  "childType": {
                    "type": "struct",
                    "childType": "EncryptionKey"
                  }
                },
                "id": 2,
                "name": "publicKeys"
              }
            ]
          }
        },
        {
          "type": "rpc",
          "content": {
            "name": "UnregisterPush",
            "header": 52,
            "response": {
              "type": "reference",
              "name": "Void"
            },
            "doc": [
              "Unregister push"
            ],
            "attributes": []
          }
        }
      ]
    },
    {
      "title": "Encryption",
      "package": "encryption",
      "doc": [
        "Package that include encryption support",
        "Key types:",
        "* Curve25519 - https://en.wikipedia.org/wiki/Curve25519",
        "* Ed25519 - http://ed25519.cr.yp.to/",
        "* RSA2048",
        "* RSA4096"
      ],
      "items": [
        {
          "type": "struct",
          "content": {
            "name": "EncryptionDevice",
            "doc": [
              "Encryption Device",
              {
                "type": "reference",
                "argument": "deviceId",
                "category": "full",
                "description": "  Device's unique ID"
              },
              {
                "type": "reference",
                "argument": "keys",
                "category": "full",
                "description": "  Device's encryption keys"
              }
            ],
            "attributes": [
              {
                "type": "int64",
                "id": 1,
                "name": "deviceId"
              },
              {
                "type": {
                  "type": "list",
                  "childType": {
                    "type": "struct",
                    "childType": "EncryptionKey"
                  }
                },
                "id": 2,
                "name": "keys"
              }
            ]
          }
        },
        {
          "type": "struct",
          "content": {
            "name": "EncryptionKey",
            "doc": [
              "Encryption Public Key",
              {
                "type": "reference",
                "argument": "keyId",
                "category": "full",
                "description": "  Unique key Id"
              },
              {
                "type": "reference",
                "argument": "keyType",
                "category": "full",
                "description": "  Type of the key: private, public or secret"
              },
              {
                "type": "reference",
                "argument": "keyAlg",
                "category": "full",
                "description": "  Key algorithm"
              },
              {
                "type": "reference",
                "argument": "keyMaterial",
                "category": "compact",
                "description": "  Optional raw key data"
              }
            ],
            "attributes": [
              {
                "type": "string",
                "id": 1,
                "name": "keyId"
              },
              {
                "type": "string",
                "id": 2,
                "name": "keyType"
              },
              {
                "type": "string",
                "id": 3,
                "name": "keyAlg"
              },
              {
                "type": {
                  "type": "opt",
                  "childType": "bytes"
                },
                "id": 4,
                "name": "keyMaterial"
              }
            ]
          }
        },
        {
          "type": "rpc",
          "content": {
            "name": "UploadDeviceKeys",
            "header": 2576,
            "response": {
              "type": "reference",
              "name": "Void"
            },
            "doc": [
              "Uploading device keys",
              {
                "type": "reference",
                "argument": "keys",
                "category": "full",
                "description": "Public keys for upload"
              }
            ],
            "attributes": [
              {
                "type": {
                  "type": "list",
                  "childType": {
                    "type": "struct",
                    "childType": "EncryptionKey"
                  }
                },
                "id": 1,
                "name": "keys"
              }
            ]
          }
        },
        {
          "type": "rpc",
          "content": {
            "name": "GetUserDevices",
            "header": 2577,
            "response": {
              "type": "anonymous",
              "header": 2578,
              "doc": [
                {
                  "type": "reference",
                  "argument": "devices",
                  "category": "full",
                  "description": "  Encryption devices"
                }
              ],
              "attributes": [
                {
                  "type": {
                    "type": "list",
                    "childType": {
                      "type": "struct",
                      "childType": "EncryptionDevice"
                    }
                  },
                  "id": 1,
                  "name": "devices"
                }
              ]
            },
            "doc": [
              "Get all user's device and it's key ids (without key material) (Can return 100-s of keys)",
              {
                "type": "reference",
                "argument": "userPeer",
                "category": "full",
                "description": "User's peer"
              }
            ],
            "attributes": [
              {
                "type": {
                  "type": "struct",
                  "childType": "UserOutPeer"
                },
                "id": 1,
                "name": "userPeer"
              }
            ]
          }
        },
        {
          "type": "rpc",
          "content": {
            "name": "DownloadUserKeys",
            "header": 2579,
            "response": {
              "type": "anonymous",
              "header": 2580,
              "doc": [
                {
                  "type": "reference",
                  "argument": "keys",
                  "category": "full",
                  "description": "  Loaded keys"
                }
              ],
              "attributes": [
                {
                  "type": {
                    "type": "list",
                    "childType": {
                      "type": "struct",
                      "childType": "EncryptionKey"
                    }
                  },
                  "id": 1,
                  "name": "keys"
                }
              ]
            },
            "doc": [
              "Get key material",
              {
                "type": "reference",
                "argument": "userPeer",
                "category": "full",
                "description": "User's peer"
              },
              {
                "type": "reference",
                "argument": "keyIds",
                "category": "full",
                "description": "Key Ids to load (max size = 50)"
              }
            ],
            "attributes": [
              {
                "type": {
                  "type": "struct",
                  "childType": "UserOutPeer"
                },
                "id": 1,
                "name": "userPeer"
              },
              {
                "type": {
                  "type": "list",
                  "childType": "string"
                },
                "id": 2,
                "name": "keyIds"
              }
            ]
          }
        }
      ]
    },
    {
      "title": "Peers",
      "package": "peers",
      "doc": [
        "Peer is an identificator of specific conversation."
      ],
      "items": [
        {
          "type": "enum",
          "content": {
            "name": "PeerType",
            "values": [
              {
                "name": "Private",
                "id": 1
              },
              {
                "name": "Group",
                "id": 2
              }
            ]
          }
        },
        {
          "type": "struct",
          "content": {
            "name": "Peer",
            "doc": [
              "Peer",
              {
                "type": "reference",
                "argument": "type",
                "category": "full",
                "description": "  Peer Type"
              },
              {
                "type": "reference",
                "argument": "id",
                "category": "full",
                "description": "  Peer Id"
              }
            ],
            "attributes": [
              {
                "type": {
                  "type": "enum",
                  "childType": "PeerType"
                },
                "id": 1,
                "name": "type"
              },
              {
                "type": "int32",
                "id": 2,
                "name": "id"
              }
            ]
          }
        },
        {
          "type": "struct",
          "content": {
            "name": "OutPeer",
            "doc": [
              "Out peer with access hash",
              {
                "type": "reference",
                "argument": "type",
                "category": "full",
                "description": "  Peer Type"
              },
              {
                "type": "reference",
                "argument": "id",
                "category": "full",
                "description": "  Peer Id"
              },
              {
                "type": "reference",
                "argument": "accessHash",
                "category": "danger",
                "description": "  Peer access hash"
              }
            ],
            "attributes": [
              {
                "type": {
                  "type": "enum",
                  "childType": "PeerType"
                },
                "id": 1,
                "name": "type"
              },
              {
                "type": "int32",
                "id": 2,
                "name": "id"
              },
              {
                "type": "int64",
                "id": 3,
                "name": "accessHash"
              }
            ]
          }
        },
        {
          "type": "struct",
          "content": {
            "name": "UserOutPeer",
            "doc": [
              "User's out peer",
              {
                "type": "reference",
                "argument": "uid",
                "category": "full",
                "description": "  User's id"
              },
              {
                "type": "reference",
                "argument": "accessHash",
                "category": "danger",
                "description": "  User's access hash"
              }
            ],
            "attributes": [
              {
                "type": {
                  "type": "alias",
                  "childType": "userId"
                },
                "id": 1,
                "name": "uid"
              },
              {
                "type": "int64",
                "id": 2,
                "name": "accessHash"
              }
            ]
          }
        },
        {
          "type": "struct",
          "content": {
            "name": "GroupOutPeer",
            "doc": [
              "Group's out peer",
              {
                "type": "reference",
                "argument": "groupId",
                "category": "full",
                "description": "  Group's Id"
              },
              {
                "type": "reference",
                "argument": "accessHash",
                "category": "danger",
                "description": "  Group's access hash"
              }
            ],
            "attributes": [
              {
                "type": {
                  "type": "alias",
                  "childType": "groupId"
                },
                "id": 1,
                "name": "groupId"
              },
              {
                "type": "int64",
                "id": 2,
                "name": "accessHash"
              }
            ]
          }
        }
      ]
    },
    {
      "title": "Sequence and Updates",
      "package": "sequence",
      "doc": [
        "Each device has it's own update sequence. At the begining application request initial sequence state by",
        "calling GetState. On each application restart or NewSessionCreated application calls GetDifference for receiving",
        "updates in update sequence.",
        "GetState and GetDifference automatically subscribes session to receiving updates in session.",
        "Each update has seq and state. Seq is sequental index of updated and used for detecting of holes in update sequence",
        "(because of server failure or session die) on client side.",
        "All updates needed to be processed in partucular order according to seq values.",
        "In some updates there can be references to users that are not available at client yer. In this case application need",
        "to ignore such update and init getting difference."
      ],
      "items": [
        {
          "type": "update_box",
          "content": {
            "name": "SeqUpdate",
            "header": 13,
            "doc": [
              "Sequence update",
              {
                "type": "reference",
                "argument": "seq",
                "category": "full",
                "description": "  Sequence number of update"
              },
              {
                "type": "reference",
                "argument": "state",
                "category": "compact",
                "description": "  Sequece state of update"
              },
              {
                "type": "reference",
                "argument": "updateHeader",
                "category": "full",
                "description": "  header of update"
              },
              {
                "type": "reference",
                "argument": "update",
                "category": "compact",
                "description": "  The update"
              }
            ],
            "attributes": [
              {
                "type": "int32",
                "id": 1,
                "name": "seq"
              },
              {
                "type": {
                  "type": "alias",
                  "childType": "seq_state"
                },
                "id": 2,
                "name": "state"
              },
              {
                "type": "int32",
                "id": 3,
                "name": "updateHeader"
              },
              {
                "type": "bytes",
                "id": 4,
                "name": "update"
              }
            ]
          }
        },
        {
          "type": "update_box",
          "content": {
            "name": "FatSeqUpdate",
            "header": 73,
            "doc": [
              "Fat sequence update with additional data",
              {
                "type": "reference",
                "argument": "seq",
                "category": "full",
                "description": "  Sequence number of update"
              },
              {
                "type": "reference",
                "argument": "state",
                "category": "compact",
                "description": "  Sequence state of update"
              },
              {
                "type": "reference",
                "argument": "updateHeader",
                "category": "full",
                "description": "  header of update"
              },
              {
                "type": "reference",
                "argument": "update",
                "category": "compact",
                "description": "  The update"
              },
              {
                "type": "reference",
                "argument": "users",
                "category": "compact",
                "description": "  Users that are referenced in update"
              },
              {
                "type": "reference",
                "argument": "groups",
                "category": "compact",
                "description": "  Groups that are referenced in update"
              }
            ],
            "attributes": [
              {
                "type": "int32",
                "id": 1,
                "name": "seq"
              },
              {
                "type": {
                  "type": "alias",
                  "childType": "seq_state"
                },
                "id": 2,
                "name": "state"
              },
              {
                "type": "int32",
                "id": 3,
                "name": "updateHeader"
              },
              {
                "type": "bytes",
                "id": 4,
                "name": "update"
              },
              {
                "type": {
                  "type": "list",
                  "childType": {
                    "type": "struct",
                    "childType": "User"
                  }
                },
                "id": 5,
                "name": "users"
              },
              {
                "type": {
                  "type": "list",
                  "childType": {
                    "type": "struct",
                    "childType": "Group"
                  }
                },
                "id": 6,
                "name": "groups"
              }
            ]
          }
        },
        {
          "type": "update_box",
          "content": {
            "name": "WeakUpdate",
            "header": 26,
            "doc": [
              "Out of sequence update (for typing and online statuses)",
              {
                "type": "reference",
                "argument": "date",
                "category": "full",
                "description": "  Date of update"
              },
              {
                "type": "reference",
                "argument": "updateHeader",
                "category": "full",
                "description": "  Header of update"
              },
              {
                "type": "reference",
                "argument": "update",
                "category": "compact",
                "description": "  The update"
              }
            ],
            "attributes": [
              {
                "type": "int64",
                "id": 1,
                "name": "date"
              },
              {
                "type": "int32",
                "id": 2,
                "name": "updateHeader"
              },
              {
                "type": "bytes",
                "id": 3,
                "name": "update"
              }
            ]
          }
        },
        {
          "type": "update_box",
          "content": {
            "name": "SeqUpdateTooLong",
            "header": 25,
            "doc": [
              "Notification about requiring performing manual GetDifference"
            ],
            "attributes": []
          }
        },
        {
          "type": "rpc",
          "content": {
            "name": "GetState",
            "header": 9,
            "response": {
              "type": "reference",
              "name": "Seq"
            },
            "doc": [
              "Get main sequence state"
            ],
            "attributes": []
          }
        },
        {
          "type": "struct",
          "content": {
            "name": "DifferenceUpdate",
            "doc": [
              "Update from GetDifference",
              {
                "type": "reference",
                "argument": "updateHeader",
                "category": "full",
                "description": "  Header of update"
              },
              {
                "type": "reference",
                "argument": "update",
                "category": "compact",
                "description": "  The update"
              }
            ],
            "attributes": [
              {
                "type": "int32",
                "id": 1,
                "name": "updateHeader"
              },
              {
                "type": "bytes",
                "id": 2,
                "name": "update"
              }
            ]
          }
        },
        {
          "type": "rpc",
          "content": {
            "name": "GetDifference",
            "header": 11,
            "response": {
              "type": "anonymous",
              "header": 12,
              "doc": [
                {
                  "type": "reference",
                  "argument": "seq",
                  "category": "full",
                  "description": "  Seq of LAST update in updates"
                },
                {
                  "type": "reference",
                  "argument": "state",
                  "category": "full",
                  "description": "  State of LAST update in updates"
                },
                {
                  "type": "reference",
                  "argument": "users",
                  "category": "compact",
                  "description": "  Users referenced in updates"
                },
                {
                  "type": "reference",
                  "argument": "groups",
                  "category": "compact",
                  "description": "  Groups referenced in updates"
                },
                {
                  "type": "reference",
                  "argument": "updates",
                  "category": "compact",
                  "description": "  Updates"
                },
                {
                  "type": "reference",
                  "argument": "needMore",
                  "category": "full",
                  "description": "  Need to perform other difference"
                }
              ],
              "attributes": [
                {
                  "type": "int32",
                  "id": 1,
                  "name": "seq"
                },
                {
                  "type": {
                    "type": "alias",
                    "childType": "seq_state"
                  },
                  "id": 2,
                  "name": "state"
                },
                {
                  "type": {
                    "type": "list",
                    "childType": {
                      "type": "struct",
                      "childType": "User"
                    }
                  },
                  "id": 3,
                  "name": "users"
                },
                {
                  "type": {
                    "type": "list",
                    "childType": {
                      "type": "struct",
                      "childType": "Group"
                    }
                  },
                  "id": 6,
                  "name": "groups"
                },
                {
                  "type": {
                    "type": "list",
                    "childType": {
                      "type": "struct",
                      "childType": "DifferenceUpdate"
                    }
                  },
                  "id": 4,
                  "name": "updates"
                },
                {
                  "type": "bool",
                  "id": 5,
                  "name": "needMore"
                }
              ]
            },
            "doc": [
              "Getting difference of sequence",
              {
                "type": "reference",
                "argument": "seq",
                "category": "full",
                "description": "Sequence number"
              },
              {
                "type": "reference",
                "argument": "state",
                "category": "compact",
                "description": "Sequence state"
              }
            ],
            "attributes": [
              {
                "type": "int32",
                "id": 1,
                "name": "seq"
              },
              {
                "type": {
                  "type": "alias",
                  "childType": "seq_state"
                },
                "id": 2,
                "name": "state"
              }
            ]
          }
        },
        {
          "type": "update",
          "content": {
            "name": "RawUpdate",
            "header": 80,
            "doc": [
              "Custom Raw Update",
              {
                "type": "reference",
                "argument": "type",
                "category": "full",
                "description": "  Type of content"
              },
              {
                "type": "reference",
                "argument": "bytes",
                "category": "full",
                "description": "  Raw data"
              }
            ],
            "attributes": [
              {
                "type": {
                  "type": "opt",
                  "childType": "string"
                },
                "id": 1,
                "name": "type"
              },
              {
                "type": "bytes",
                "id": 2,
                "name": "bytes"
              }
            ]
          }
        },
        {
          "type": "empty"
        },
        {
          "type": "rpc",
          "content": {
            "name": "SubscribeToOnline",
            "header": 32,
            "response": {
              "type": "reference",
              "name": "Void"
            },
            "doc": [
              "Subscribing for users online",
              {
                "type": "reference",
                "argument": "users",
                "category": "compact",
                "description": "Users for subscription"
              }
            ],
            "attributes": [
              {
                "type": {
                  "type": "list",
                  "childType": {
                    "type": "struct",
                    "childType": "UserOutPeer"
                  }
                },
                "id": 1,
                "name": "users"
              }
            ]
          }
        },
        {
          "type": "rpc",
          "content": {
            "name": "SubscribeFromOnline",
            "header": 33,
            "response": {
              "type": "reference",
              "name": "Void"
            },
            "doc": [
              "Removing subscription for users online",
              {
                "type": "reference",
                "argument": "users",
                "category": "compact",
                "description": "Users of subscriptions"
              }
            ],
            "attributes": [
              {
                "type": {
                  "type": "list",
                  "childType": {
                    "type": "struct",
                    "childType": "UserOutPeer"
                  }
                },
                "id": 1,
                "name": "users"
              }
            ]
          }
        },
        {
          "type": "rpc",
          "content": {
            "name": "SubscribeToGroupOnline",
            "header": 74,
            "response": {
              "type": "reference",
              "name": "Void"
            },
            "doc": [
              "Subscribing for groups online",
              {
                "type": "reference",
                "argument": "groups",
                "category": "compact",
                "description": "Groups for subscription"
              }
            ],
            "attributes": [
              {
                "type": {
                  "type": "list",
                  "childType": {
                    "type": "struct",
                    "childType": "GroupOutPeer"
                  }
                },
                "id": 1,
                "name": "groups"
              }
            ]
          }
        },
        {
          "type": "rpc",
          "content": {
            "name": "SubscribeFromGroupOnline",
            "header": 75,
            "response": {
              "type": "reference",
              "name": "Void"
            },
            "doc": [
              "Removing subscription for groups online",
              {
                "type": "reference",
                "argument": "groups",
                "category": "compact",
                "description": "Groups of subscriptions"
              }
            ],
            "attributes": [
              {
                "type": {
                  "type": "list",
                  "childType": {
                    "type": "struct",
                    "childType": "GroupOutPeer"
                  }
                },
                "id": 1,
                "name": "groups"
              }
            ]
          }
        }
      ]
    },
    {
      "title": "Counters",
      "package": "counters",
      "doc": [
        "Application Counters, used to display various counters in application"
      ],
      "items": [
        {
          "type": "struct",
          "content": {
            "name": "AppCounters",
            "doc": [
              "Application counters",
              {
                "type": "reference",
                "argument": "globalCounter",
                "category": "full",
                "description": "  Global unread counter"
              }
            ],
            "expandable": "true",
            "attributes": [
              {
                "type": {
                  "type": "opt",
                  "childType": "int32"
                },
                "id": 1,
                "name": "globalCounter"
              }
            ]
          }
        },
        {
          "type": "update",
          "content": {
            "name": "CountersChanged",
            "header": 215,
            "doc": [
              "Update about counters changed",
              {
                "type": "reference",
                "argument": "counters",
                "category": "full",
                "description": "  Current Application counters"
              }
            ],
            "attributes": [
              {
                "type": {
                  "type": "struct",
                  "childType": "AppCounters"
                },
                "id": 1,
                "name": "counters"
              }
            ]
          }
        }
      ]
    },
    {
      "title": "Miscellaneous",
      "package": "misc",
      "items": [
        {
          "type": "response",
          "content": {
            "name": "Void",
            "header": 50,
            "doc": [
              "Empty response"
            ],
            "attributes": []
          }
        },
        {
          "type": "response",
          "content": {
            "name": "Seq",
            "header": 72,
            "doc": [
              "Sequence response. Methods that return this value must process response in particular order",
              {
                "type": "reference",
                "argument": "seq",
                "category": "full",
                "description": "  Sequence number of response"
              },
              {
                "type": "reference",
                "argument": "state",
                "category": "full",
                "description": "  Sequence state of response"
              }
            ],
            "attributes": [
              {
                "type": "int32",
                "id": 1,
                "name": "seq"
              },
              {
                "type": {
                  "type": "alias",
                  "childType": "seq_state"
                },
                "id": 2,
                "name": "state"
              }
            ]
          }
        },
        {
          "type": "response",
          "content": {
            "name": "SeqDate",
            "header": 102,
            "doc": [
              "Sequence response with date. Methods that return this value must process response in particular order",
              {
                "type": "reference",
                "argument": "seq",
                "category": "full",
                "description": "  Sequence number of response"
              },
              {
                "type": "reference",
                "argument": "state",
                "category": "full",
                "description": "  Sequence state of response"
              },
              {
                "type": "reference",
                "argument": "date",
                "category": "full",
                "description": "  Date of response"
              }
            ],
            "attributes": [
              {
                "type": "int32",
                "id": 1,
                "name": "seq"
              },
              {
                "type": {
                  "type": "alias",
                  "childType": "seq_state"
                },
                "id": 2,
                "name": "state"
              },
              {
                "type": {
                  "type": "alias",
                  "childType": "date"
                },
                "id": 3,
                "name": "date"
              }
            ]
          }
        },
        {
          "type": "response",
          "content": {
            "name": "Bool",
            "header": 209,
            "doc": [
              "Boolean response",
              {
                "type": "reference",
                "argument": "value",
                "category": "full",
                "description": "  Response value"
              }
            ],
            "attributes": [
              {
                "type": "bool",
                "id": 1,
                "name": "value"
              }
            ]
          }
        },
        {
          "type": "struct",
          "content": {
            "name": "Config",
            "doc": [
              "Configuration of system",
              {
                "type": "reference",
                "argument": "maxGroupSize",
                "category": "full",
                "description": "  Current maximum group size"
              }
            ],
            "attributes": [
              {
                "type": "int32",
                "id": 1,
                "name": "maxGroupSize"
              }
            ]
          }
        },
        {
          "type": "struct",
          "content": {
            "name": "Extension",
            "doc": [
              "Extention",
              {
                "type": "reference",
                "argument": "id",
                "category": "full",
                "description": "  Extension id"
              },
              {
                "type": "reference",
                "argument": "data",
                "category": "full",
                "description": "  Extension data"
              }
            ],
            "attributes": [
              {
                "type": "int32",
                "id": 1,
                "name": "id"
              },
              {
                "type": "bytes",
                "id": 2,
                "name": "data"
              }
            ]
          }
        },
        {
          "type": "update",
          "content": {
            "name": "Config",
            "header": 42,
            "doc": [
              "Update about config change",
              {
                "type": "reference",
                "argument": "config",
                "category": "full",
                "description": "  new config"
              }
            ],
            "attributes": [
              {
                "type": {
                  "type": "struct",
                  "childType": "Config"
                },
                "id": 1,
                "name": "config"
              }
            ]
          }
        }
      ]
    },
    {
      "title": "Device Info",
      "package": "device",
      "doc": [
        "Submiting various information about device for providing better experience.",
        "For example, getting timezone or preffered languages"
      ],
      "items": [
        {
          "type": "rpc",
          "content": {
            "name": "NotifyAboutDeviceInfo",
            "header": 229,
            "response": {
              "type": "reference",
              "name": "Void"
            },
            "doc": [
              "Notifying about device information",
              {
                "type": "reference",
                "argument": "preferredLanguages",
                "category": "full",
                "description": "Preferred languages"
              },
              {
                "type": "reference",
                "argument": "timeZone",
                "category": "full",
                "description": "Device Time Zone"
              }
            ],
            "attributes": [
              {
                "type": {
                  "type": "list",
                  "childType": "string"
                },
                "id": 1,
                "name": "preferredLanguages"
              },
              {
                "type": {
                  "type": "opt",
                  "childType": "string"
                },
                "id": 2,
                "name": "timeZone"
              }
            ]
          }
        }
      ]
    },
    {
      "title": "Webactions",
      "package": "webactions",
      "doc": [
        "Web actions allow clients to visit some predefined web pages,",
        "perform actions, and pass result on action completion"
      ],
      "items": [
        {
          "type": "rpc",
          "content": {
            "name": "InitWebaction",
            "header": 116,
            "response": {
              "type": "anonymous",
              "header": 117,
              "doc": [
                {
                  "type": "reference",
                  "argument": "uri",
                  "category": "full",
                  "description": "  Web action uri"
                },
                {
                  "type": "reference",
                  "argument": "regexp",
                  "category": "full",
                  "description": "  Regular expression. Required to match completion of web action"
                },
                {
                  "type": "reference",
                  "argument": "actionHash",
                  "category": "danger",
                  "description": "  Identifier of current web action. Required to complete it"
                }
              ],
              "attributes": [
                {
                  "type": "string",
                  "id": 1,
                  "name": "uri"
                },
                {
                  "type": "string",
                  "id": 2,
                  "name": "regexp"
                },
                {
                  "type": "string",
                  "id": 3,
                  "name": "actionHash"
                }
              ]
            },
            "doc": [
              "Initialize start of web action",
              {
                "type": "reference",
                "argument": "actionName",
                "category": "full",
                "description": "Name of web action"
              },
              {
                "type": "reference",
                "argument": "params",
                "category": "full",
                "description": "Additional params required to make action's uri"
              }
            ],
            "attributes": [
              {
                "type": "string",
                "id": 1,
                "name": "actionName"
              },
              {
                "type": {
                  "type": "struct",
                  "childType": "MapValue"
                },
                "id": 2,
                "name": "params"
              }
            ]
          }
        },
        {
          "type": "rpc",
          "content": {
            "name": "CompleteWebaction",
            "header": 123,
            "response": {
              "type": "anonymous",
              "header": 124,
              "doc": [
                {
                  "type": "reference",
                  "argument": "result",
                  "category": "full",
                  "description": "  Reslut of web action completion"
                }
              ],
              "attributes": [
                {
                  "type": {
                    "type": "struct",
                    "childType": "MapValue"
                  },
                  "id": 1,
                  "name": "result"
                }
              ]
            },
            "doc": [
              "Complete started web action",
              {
                "type": "reference",
                "argument": "actionHash",
                "category": "danger",
                "description": "Identifier of given web action"
              },
              {
                "type": "reference",
                "argument": "completeUri",
                "category": "full",
                "description": "Final uri of web action"
              }
            ],
            "attributes": [
              {
                "type": "string",
                "id": 1,
                "name": "actionHash"
              },
              {
                "type": "string",
                "id": 2,
                "name": "completeUri"
              }
            ]
          }
        }
      ]
    },
    {
      "title": "Collections",
      "package": "collections",
      "doc": [
        "Flexible raw collections without structure"
      ],
      "items": [
        {
          "type": "trait",
          "content": {
            "isContainer": "true",
            "name": "RawValue",
            "attributes": []
          }
        },
        {
          "type": "struct",
          "content": {
            "name": "StringValue",
            "doc": [
              "Text value"
            ],
            "trait": {
              "name": "RawValue",
              "key": 1
            },
            "attributes": [
              {
                "type": "string",
                "id": 1,
                "name": "text"
              }
            ]
          }
        },
        {
          "type": "struct",
          "content": {
            "name": "Int32Value",
            "doc": [
              "Int32 value"
            ],
            "trait": {
              "name": "RawValue",
              "key": 2
            },
            "attributes": [
              {
                "type": "int32",
                "id": 1,
                "name": "value"
              }
            ]
          }
        },
        {
          "type": "struct",
          "content": {
            "name": "Int64Value",
            "doc": [
              "Int64 value"
            ],
            "trait": {
              "name": "RawValue",
              "key": 3
            },
            "attributes": [
              {
                "type": "int64",
                "id": 1,
                "name": "value"
              }
            ]
          }
        },
        {
          "type": "struct",
          "content": {
            "name": "DoubleValue",
            "doc": [
              "Double value"
            ],
            "trait": {
              "name": "RawValue",
              "key": 4
            },
            "attributes": [
              {
                "type": "double",
                "id": 1,
                "name": "value"
              }
            ]
          }
        },
        {
          "type": "struct",
          "content": {
            "name": "ArrayValue",
            "doc": [
              "Array value"
            ],
            "trait": {
              "name": "RawValue",
              "key": 5
            },
            "attributes": [
              {
                "type": {
                  "type": "list",
                  "childType": {
                    "type": "trait",
                    "childType": "RawValue"
                  }
                },
                "id": 1,
                "name": "array"
              }
            ]
          }
        },
        {
          "type": "struct",
          "content": {
            "name": "MapValueItem",
            "doc": [
              "Item of Map"
            ],
            "attributes": [
              {
                "type": "string",
                "id": 1,
                "name": "key"
              },
              {
                "type": {
                  "type": "trait",
                  "childType": "RawValue"
                },
                "id": 2,
                "name": "value"
              }
            ]
          }
        },
        {
          "type": "struct",
          "content": {
            "name": "MapValue",
            "doc": [
              "Map Value"
            ],
            "trait": {
              "name": "RawValue",
              "key": 6
            },
            "attributes": [
              {
                "type": {
                  "type": "list",
                  "childType": {
                    "type": "struct",
                    "childType": "MapValueItem"
                  }
                },
                "id": 1,
                "name": "items"
              }
            ]
          }
        }
      ]
    }
  ]
}
