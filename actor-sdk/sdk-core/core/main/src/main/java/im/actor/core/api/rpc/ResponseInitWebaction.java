package im.actor.core.api.rpc;
/*
 *  Generated by the Actor API Scheme generator.  DO NOT EDIT!
 */

import im.actor.runtime.bser.*;
import im.actor.runtime.collections.*;
import static im.actor.runtime.bser.Utils.*;
import im.actor.core.network.parser.*;
import org.jetbrains.annotations.Nullable;
import org.jetbrains.annotations.NotNull;
import com.google.j2objc.annotations.ObjectiveCName;
import java.io.IOException;
import java.util.List;
import java.util.ArrayList;
import im.actor.core.api.*;

public class ResponseInitWebaction extends Response {

    public static final int HEADER = 0x75;
    public static ResponseInitWebaction fromBytes(byte[] data) throws IOException {
        return Bser.parse(new ResponseInitWebaction(), data);
    }

    private String uri;
    private String regexp;
    private String actionHash;

    public ResponseInitWebaction(@NotNull String uri, @NotNull String regexp, @NotNull String actionHash) {
        this.uri = uri;
        this.regexp = regexp;
        this.actionHash = actionHash;
    }

    public ResponseInitWebaction() {

    }

    @NotNull
    public String getUri() {
        return this.uri;
    }

    @NotNull
    public String getRegexp() {
        return this.regexp;
    }

    @NotNull
    public String getActionHash() {
        return this.actionHash;
    }

    @Override
    public void parse(BserValues values) throws IOException {
        this.uri = values.getString(1);
        this.regexp = values.getString(2);
        this.actionHash = values.getString(3);
    }

    @Override
    public void serialize(BserWriter writer) throws IOException {
        if (this.uri == null) {
            throw new IOException();
        }
        writer.writeString(1, this.uri);
        if (this.regexp == null) {
            throw new IOException();
        }
        writer.writeString(2, this.regexp);
        if (this.actionHash == null) {
            throw new IOException();
        }
        writer.writeString(3, this.actionHash);
    }

    @Override
    public String toString() {
        String res = "tuple InitWebaction{";
        res += "}";
        return res;
    }

    @Override
    public int getHeaderKey() {
        return HEADER;
    }
}
