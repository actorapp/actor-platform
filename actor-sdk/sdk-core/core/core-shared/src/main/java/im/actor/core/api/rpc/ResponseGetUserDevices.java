package im.actor.core.api.rpc;
/*
 *  Generated by the Actor API Scheme generator.  DO NOT EDIT!
 */

import im.actor.runtime.bser.*;
import im.actor.runtime.collections.*;

import static im.actor.runtime.bser.Utils.*;

import im.actor.core.network.parser.*;

import org.jetbrains.annotations.Nullable;
import org.jetbrains.annotations.NotNull;

import com.google.j2objc.annotations.ObjectiveCName;

import java.io.IOException;
import java.util.List;
import java.util.ArrayList;

import im.actor.core.api.*;

public class ResponseGetUserDevices extends Response {

    public static final int HEADER = 0xa12;

    public static ResponseGetUserDevices fromBytes(byte[] data) throws IOException {
        return Bser.parse(new ResponseGetUserDevices(), data);
    }

    private List<ApiEncryptionDevice> devices;

    public ResponseGetUserDevices(@NotNull List<ApiEncryptionDevice> devices) {
        this.devices = devices;
    }

    public ResponseGetUserDevices() {

    }

    @NotNull
    public List<ApiEncryptionDevice> getDevices() {
        return this.devices;
    }

    @Override
    public void parse(BserValues values) throws IOException {
        List<ApiEncryptionDevice> _devices = new ArrayList<ApiEncryptionDevice>();
        for (int i = 0; i < values.getRepeatedCount(1); i++) {
            _devices.add(new ApiEncryptionDevice());
        }
        this.devices = values.getRepeatedObj(1, _devices);
    }

    @Override
    public void serialize(BserWriter writer) throws IOException {
        writer.writeRepeatedObj(1, this.devices);
    }

    @Override
    public String toString() {
        String res = "tuple GetUserDevices{";
        res += "}";
        return res;
    }

    @Override
    public int getHeaderKey() {
        return HEADER;
    }
}
