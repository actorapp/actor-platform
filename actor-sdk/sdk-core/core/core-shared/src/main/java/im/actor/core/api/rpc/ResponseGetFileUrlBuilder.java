package im.actor.core.api.rpc;
/*
 *  Generated by the Actor API Scheme generator.  DO NOT EDIT!
 */

import im.actor.runtime.bser.*;
import im.actor.runtime.collections.*;
import static im.actor.runtime.bser.Utils.*;
import im.actor.core.network.parser.*;
import org.jetbrains.annotations.Nullable;
import org.jetbrains.annotations.NotNull;
import com.google.j2objc.annotations.ObjectiveCName;
import java.io.IOException;
import java.util.List;
import java.util.ArrayList;
import im.actor.core.api.*;

public class ResponseGetFileUrlBuilder extends Response {

    public static final int HEADER = 0xa14;
    public static ResponseGetFileUrlBuilder fromBytes(byte[] data) throws IOException {
        return Bser.parse(new ResponseGetFileUrlBuilder(), data);
    }

    private String baseUrl;
    private String algo;
    private String seed;
    private byte[] signatureSecret;
    private int timeout;

    public ResponseGetFileUrlBuilder(@NotNull String baseUrl, @NotNull String algo, @NotNull String seed, @NotNull byte[] signatureSecret, int timeout) {
        this.baseUrl = baseUrl;
        this.algo = algo;
        this.seed = seed;
        this.signatureSecret = signatureSecret;
        this.timeout = timeout;
    }

    public ResponseGetFileUrlBuilder() {

    }

    @NotNull
    public String getBaseUrl() {
        return this.baseUrl;
    }

    @NotNull
    public String getAlgo() {
        return this.algo;
    }

    @NotNull
    public String getSeed() {
        return this.seed;
    }

    @NotNull
    public byte[] getSignatureSecret() {
        return this.signatureSecret;
    }

    public int getTimeout() {
        return this.timeout;
    }

    @Override
    public void parse(BserValues values) throws IOException {
        this.baseUrl = values.getString(1);
        this.algo = values.getString(2);
        this.seed = values.getString(5);
        this.signatureSecret = values.getBytes(3);
        this.timeout = values.getInt(4);
    }

    @Override
    public void serialize(BserWriter writer) throws IOException {
        if (this.baseUrl == null) {
            throw new IOException();
        }
        writer.writeString(1, this.baseUrl);
        if (this.algo == null) {
            throw new IOException();
        }
        writer.writeString(2, this.algo);
        if (this.seed == null) {
            throw new IOException();
        }
        writer.writeString(5, this.seed);
        if (this.signatureSecret == null) {
            throw new IOException();
        }
        writer.writeBytes(3, this.signatureSecret);
        writer.writeInt(4, this.timeout);
    }

    @Override
    public String toString() {
        String res = "tuple GetFileUrlBuilder{";
        res += "}";
        return res;
    }

    @Override
    public int getHeaderKey() {
        return HEADER;
    }
}
