package im.actor.core.api.rpc;
/*
 *  Generated by the Actor API Scheme generator.  DO NOT EDIT!
 */

import im.actor.runtime.bser.*;
import im.actor.runtime.collections.*;
import static im.actor.runtime.bser.Utils.*;
import im.actor.core.network.parser.*;
import org.jetbrains.annotations.Nullable;
import org.jetbrains.annotations.NotNull;
import com.google.j2objc.annotations.ObjectiveCName;
import java.io.IOException;
import java.util.List;
import java.util.ArrayList;
import im.actor.core.api.*;

public class RequestEnableFeature extends Request<ResponseVoid> {

    public static final int HEADER = 0xa1c;
    public static RequestEnableFeature fromBytes(byte[] data) throws IOException {
        return Bser.parse(new RequestEnableFeature(), data);
    }

    private String featureName;
    private byte[] args;

    public RequestEnableFeature(@NotNull String featureName, @Nullable byte[] args) {
        this.featureName = featureName;
        this.args = args;
    }

    public RequestEnableFeature() {

    }

    @NotNull
    public String getFeatureName() {
        return this.featureName;
    }

    @Nullable
    public byte[] getArgs() {
        return this.args;
    }

    @Override
    public void parse(BserValues values) throws IOException {
        this.featureName = values.getString(1);
        this.args = values.optBytes(2);
    }

    @Override
    public void serialize(BserWriter writer) throws IOException {
        if (this.featureName == null) {
            throw new IOException();
        }
        writer.writeString(1, this.featureName);
        if (this.args != null) {
            writer.writeBytes(2, this.args);
        }
    }

    @Override
    public String toString() {
        String res = "rpc EnableFeature{";
        res += "featureName=" + this.featureName;
        res += "}";
        return res;
    }

    @Override
    public int getHeaderKey() {
        return HEADER;
    }
}
