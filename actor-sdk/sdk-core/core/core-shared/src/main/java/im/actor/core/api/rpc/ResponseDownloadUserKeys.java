package im.actor.core.api.rpc;
/*
 *  Generated by the Actor API Scheme generator.  DO NOT EDIT!
 */

import im.actor.runtime.bser.*;
import im.actor.runtime.collections.*;

import static im.actor.runtime.bser.Utils.*;

import im.actor.core.network.parser.*;

import org.jetbrains.annotations.Nullable;
import org.jetbrains.annotations.NotNull;

import com.google.j2objc.annotations.ObjectiveCName;

import java.io.IOException;
import java.util.List;
import java.util.ArrayList;

import im.actor.core.api.*;

public class ResponseDownloadUserKeys extends Response {

    public static final int HEADER = 0xa14;

    public static ResponseDownloadUserKeys fromBytes(byte[] data) throws IOException {
        return Bser.parse(new ResponseDownloadUserKeys(), data);
    }

    private List<ApiEncryptionKey> keys;

    public ResponseDownloadUserKeys(@NotNull List<ApiEncryptionKey> keys) {
        this.keys = keys;
    }

    public ResponseDownloadUserKeys() {

    }

    @NotNull
    public List<ApiEncryptionKey> getKeys() {
        return this.keys;
    }

    @Override
    public void parse(BserValues values) throws IOException {
        List<ApiEncryptionKey> _keys = new ArrayList<ApiEncryptionKey>();
        for (int i = 0; i < values.getRepeatedCount(1); i++) {
            _keys.add(new ApiEncryptionKey());
        }
        this.keys = values.getRepeatedObj(1, _keys);
    }

    @Override
    public void serialize(BserWriter writer) throws IOException {
        writer.writeRepeatedObj(1, this.keys);
    }

    @Override
    public String toString() {
        String res = "tuple DownloadUserKeys{";
        res += "}";
        return res;
    }

    @Override
    public int getHeaderKey() {
        return HEADER;
    }
}
