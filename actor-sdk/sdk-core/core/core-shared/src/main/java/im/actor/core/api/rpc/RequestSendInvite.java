package im.actor.core.api.rpc;
/*
 *  Generated by the Actor API Scheme generator.  DO NOT EDIT!
 */

import im.actor.runtime.bser.*;
import im.actor.runtime.collections.*;
import static im.actor.runtime.bser.Utils.*;
import im.actor.core.network.parser.*;
import org.jetbrains.annotations.Nullable;
import org.jetbrains.annotations.NotNull;
import com.google.j2objc.annotations.ObjectiveCName;
import java.io.IOException;
import java.util.List;
import java.util.ArrayList;
import im.actor.core.api.*;

public class RequestSendInvite extends Request<ResponseInviteList> {

    public static final int HEADER = 0xa05;
    public static RequestSendInvite fromBytes(byte[] data) throws IOException {
        return Bser.parse(new RequestSendInvite(), data);
    }

    private String email;
    private String name;
    private ApiOutTeam destTeam;

    public RequestSendInvite(@NotNull String email, @Nullable String name, @Nullable ApiOutTeam destTeam) {
        this.email = email;
        this.name = name;
        this.destTeam = destTeam;
    }

    public RequestSendInvite() {

    }

    @NotNull
    public String getEmail() {
        return this.email;
    }

    @Nullable
    public String getName() {
        return this.name;
    }

    @Nullable
    public ApiOutTeam getDestTeam() {
        return this.destTeam;
    }

    @Override
    public void parse(BserValues values) throws IOException {
        this.email = values.getString(1);
        this.name = values.optString(2);
        this.destTeam = values.optObj(3, new ApiOutTeam());
    }

    @Override
    public void serialize(BserWriter writer) throws IOException {
        if (this.email == null) {
            throw new IOException();
        }
        writer.writeString(1, this.email);
        if (this.name != null) {
            writer.writeString(2, this.name);
        }
        if (this.destTeam != null) {
            writer.writeObject(3, this.destTeam);
        }
    }

    @Override
    public String toString() {
        String res = "rpc SendInvite{";
        res += "email=" + this.email;
        res += ", name=" + this.name;
        res += ", destTeam=" + this.destTeam;
        res += "}";
        return res;
    }

    @Override
    public int getHeaderKey() {
        return HEADER;
    }
}
