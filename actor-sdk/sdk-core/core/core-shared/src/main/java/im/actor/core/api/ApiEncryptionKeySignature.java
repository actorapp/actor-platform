package im.actor.core.api;
/*
 *  Generated by the Actor API Scheme generator.  DO NOT EDIT!
 */

import im.actor.runtime.bser.*;
import im.actor.runtime.collections.*;
import static im.actor.runtime.bser.Utils.*;
import im.actor.core.network.parser.*;
import org.jetbrains.annotations.Nullable;
import org.jetbrains.annotations.NotNull;
import com.google.j2objc.annotations.ObjectiveCName;
import java.io.IOException;
import java.util.List;
import java.util.ArrayList;

public class ApiEncryptionKeySignature extends BserObject {

    private long keyId;
    private String signatureAlg;
    private byte[] signature;

    public ApiEncryptionKeySignature(long keyId, @NotNull String signatureAlg, @NotNull byte[] signature) {
        this.keyId = keyId;
        this.signatureAlg = signatureAlg;
        this.signature = signature;
    }

    public ApiEncryptionKeySignature() {

    }

    public long getKeyId() {
        return this.keyId;
    }

    @NotNull
    public String getSignatureAlg() {
        return this.signatureAlg;
    }

    @NotNull
    public byte[] getSignature() {
        return this.signature;
    }

    @Override
    public void parse(BserValues values) throws IOException {
        this.keyId = values.getLong(1);
        this.signatureAlg = values.getString(2);
        this.signature = values.getBytes(3);
    }

    @Override
    public void serialize(BserWriter writer) throws IOException {
        writer.writeLong(1, this.keyId);
        if (this.signatureAlg == null) {
            throw new IOException();
        }
        writer.writeString(2, this.signatureAlg);
        if (this.signature == null) {
            throw new IOException();
        }
        writer.writeBytes(3, this.signature);
    }

    @Override
    public String toString() {
        String res = "struct EncryptionKeySignature{";
        res += "keyId=" + this.keyId;
        res += ", signatureAlg=" + this.signatureAlg;
        res += ", signature=" + byteArrayToString(this.signature);
        res += "}";
        return res;
    }

}
