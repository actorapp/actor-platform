package im.actor.core.api.rpc;
/*
 *  Generated by the Actor API Scheme generator.  DO NOT EDIT!
 */

import im.actor.runtime.bser.*;
import im.actor.runtime.collections.*;
import static im.actor.runtime.bser.Utils.*;
import im.actor.core.network.parser.*;
import org.jetbrains.annotations.Nullable;
import org.jetbrains.annotations.NotNull;
import com.google.j2objc.annotations.ObjectiveCName;
import java.io.IOException;
import java.util.List;
import java.util.ArrayList;
import im.actor.core.api.*;

public class RequestNotifyAboutDeviceInfo extends Request<ResponseVoid> {

    public static final int HEADER = 0xe5;
    public static RequestNotifyAboutDeviceInfo fromBytes(byte[] data) throws IOException {
        return Bser.parse(new RequestNotifyAboutDeviceInfo(), data);
    }

    private List<String> preferredLanguages;
    private String timeZone;

    public RequestNotifyAboutDeviceInfo(@NotNull List<String> preferredLanguages, @Nullable String timeZone) {
        this.preferredLanguages = preferredLanguages;
        this.timeZone = timeZone;
    }

    public RequestNotifyAboutDeviceInfo() {

    }

    @NotNull
    public List<String> getPreferredLanguages() {
        return this.preferredLanguages;
    }

    @Nullable
    public String getTimeZone() {
        return this.timeZone;
    }

    @Override
    public void parse(BserValues values) throws IOException {
        this.preferredLanguages = values.getRepeatedString(1);
        this.timeZone = values.optString(2);
    }

    @Override
    public void serialize(BserWriter writer) throws IOException {
        writer.writeRepeatedString(1, this.preferredLanguages);
        if (this.timeZone != null) {
            writer.writeString(2, this.timeZone);
        }
    }

    @Override
    public String toString() {
        String res = "rpc NotifyAboutDeviceInfo{";
        res += "preferredLanguages=" + this.preferredLanguages;
        res += ", timeZone=" + this.timeZone;
        res += "}";
        return res;
    }

    @Override
    public int getHeaderKey() {
        return HEADER;
    }
}
