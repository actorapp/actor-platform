package im.actor.core.api.updates;
/*
 *  Generated by the Actor API Scheme generator.  DO NOT EDIT!
 */

import im.actor.runtime.bser.*;
import im.actor.runtime.collections.*;
import static im.actor.runtime.bser.Utils.*;
import im.actor.core.network.parser.*;
import org.jetbrains.annotations.Nullable;
import org.jetbrains.annotations.NotNull;
import com.google.j2objc.annotations.ObjectiveCName;
import java.io.IOException;
import java.util.List;
import java.util.ArrayList;
import im.actor.core.api.*;

public class UpdateKeysRemoved extends Update {

    public static final int HEADER = 0x71;
    public static UpdateKeysRemoved fromBytes(byte[] data) throws IOException {
        return Bser.parse(new UpdateKeysRemoved(), data);
    }

    private int uid;
    private int keyGroupId;
    private List<Long> keyIds;

    public UpdateKeysRemoved(int uid, int keyGroupId, @NotNull List<Long> keyIds) {
        this.uid = uid;
        this.keyGroupId = keyGroupId;
        this.keyIds = keyIds;
    }

    public UpdateKeysRemoved() {

    }

    public int getUid() {
        return this.uid;
    }

    public int getKeyGroupId() {
        return this.keyGroupId;
    }

    @NotNull
    public List<Long> getKeyIds() {
        return this.keyIds;
    }

    @Override
    public void parse(BserValues values) throws IOException {
        this.uid = values.getInt(1);
        this.keyGroupId = values.getInt(2);
        this.keyIds = values.getRepeatedLong(3);
    }

    @Override
    public void serialize(BserWriter writer) throws IOException {
        writer.writeInt(1, this.uid);
        writer.writeInt(2, this.keyGroupId);
        writer.writeRepeatedLong(3, this.keyIds);
    }

    @Override
    public String toString() {
        String res = "update KeysRemoved{";
        res += "uid=" + this.uid;
        res += ", keyGroupId=" + this.keyGroupId;
        res += ", keyIds=" + this.keyIds;
        res += "}";
        return res;
    }

    @Override
    public int getHeaderKey() {
        return HEADER;
    }
}
