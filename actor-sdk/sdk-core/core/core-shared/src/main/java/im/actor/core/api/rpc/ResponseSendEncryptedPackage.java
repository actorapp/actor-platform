package im.actor.core.api.rpc;
/*
 *  Generated by the Actor API Scheme generator.  DO NOT EDIT!
 */

import im.actor.runtime.bser.*;
import im.actor.runtime.collections.*;
import static im.actor.runtime.bser.Utils.*;
import im.actor.core.network.parser.*;
import org.jetbrains.annotations.Nullable;
import org.jetbrains.annotations.NotNull;
import com.google.j2objc.annotations.ObjectiveCName;
import java.io.IOException;
import java.util.List;
import java.util.ArrayList;
import im.actor.core.api.*;

public class ResponseSendEncryptedPackage extends Response {

    public static final int HEADER = 0xa68;
    public static ResponseSendEncryptedPackage fromBytes(byte[] data) throws IOException {
        return Bser.parse(new ResponseSendEncryptedPackage(), data);
    }

    private Integer seq;
    private byte[] state;
    private Long date;
    private List<ApiKeyGroupId> obsoleteKeyGroups;
    private List<ApiKeyGroupId> missedKeyGroups;

    public ResponseSendEncryptedPackage(@Nullable Integer seq, @Nullable byte[] state, @Nullable Long date, @NotNull List<ApiKeyGroupId> obsoleteKeyGroups, @NotNull List<ApiKeyGroupId> missedKeyGroups) {
        this.seq = seq;
        this.state = state;
        this.date = date;
        this.obsoleteKeyGroups = obsoleteKeyGroups;
        this.missedKeyGroups = missedKeyGroups;
    }

    public ResponseSendEncryptedPackage() {

    }

    @Nullable
    public Integer getSeq() {
        return this.seq;
    }

    @Nullable
    public byte[] getState() {
        return this.state;
    }

    @Nullable
    public Long getDate() {
        return this.date;
    }

    @NotNull
    public List<ApiKeyGroupId> getObsoleteKeyGroups() {
        return this.obsoleteKeyGroups;
    }

    @NotNull
    public List<ApiKeyGroupId> getMissedKeyGroups() {
        return this.missedKeyGroups;
    }

    @Override
    public void parse(BserValues values) throws IOException {
        this.seq = values.optInt(1);
        this.state = values.optBytes(2);
        this.date = values.optLong(3);
        List<ApiKeyGroupId> _obsoleteKeyGroups = new ArrayList<ApiKeyGroupId>();
        for (int i = 0; i < values.getRepeatedCount(4); i ++) {
            _obsoleteKeyGroups.add(new ApiKeyGroupId());
        }
        this.obsoleteKeyGroups = values.getRepeatedObj(4, _obsoleteKeyGroups);
        List<ApiKeyGroupId> _missedKeyGroups = new ArrayList<ApiKeyGroupId>();
        for (int i = 0; i < values.getRepeatedCount(5); i ++) {
            _missedKeyGroups.add(new ApiKeyGroupId());
        }
        this.missedKeyGroups = values.getRepeatedObj(5, _missedKeyGroups);
    }

    @Override
    public void serialize(BserWriter writer) throws IOException {
        if (this.seq != null) {
            writer.writeInt(1, this.seq);
        }
        if (this.state != null) {
            writer.writeBytes(2, this.state);
        }
        if (this.date != null) {
            writer.writeLong(3, this.date);
        }
        writer.writeRepeatedObj(4, this.obsoleteKeyGroups);
        writer.writeRepeatedObj(5, this.missedKeyGroups);
    }

    @Override
    public String toString() {
        String res = "tuple SendEncryptedPackage{";
        res += "}";
        return res;
    }

    @Override
    public int getHeaderKey() {
        return HEADER;
    }
}
