package im.actor.core.api;
/*
 *  Generated by the Actor API Scheme generator.  DO NOT EDIT!
 */

import im.actor.runtime.bser.*;
import im.actor.runtime.collections.*;
import static im.actor.runtime.bser.Utils.*;
import im.actor.core.network.parser.*;
import org.jetbrains.annotations.Nullable;
import org.jetbrains.annotations.NotNull;
import com.google.j2objc.annotations.ObjectiveCName;
import java.io.IOException;
import java.util.List;
import java.util.ArrayList;

public class ApiConnectedDevice extends BserObject {

    private long device;
    private Boolean isConnecting;
    private Boolean isConnected;

    public ApiConnectedDevice(long device, @Nullable Boolean isConnecting, @Nullable Boolean isConnected) {
        this.device = device;
        this.isConnecting = isConnecting;
        this.isConnected = isConnected;
    }

    public ApiConnectedDevice() {

    }

    public long getDevice() {
        return this.device;
    }

    @Nullable
    public Boolean isConnecting() {
        return this.isConnecting;
    }

    @Nullable
    public Boolean isConnected() {
        return this.isConnected;
    }

    @Override
    public void parse(BserValues values) throws IOException {
        this.device = values.getLong(1);
        this.isConnecting = values.optBool(2);
        this.isConnected = values.optBool(3);
    }

    @Override
    public void serialize(BserWriter writer) throws IOException {
        writer.writeLong(1, this.device);
        if (this.isConnecting != null) {
            writer.writeBool(2, this.isConnecting);
        }
        if (this.isConnected != null) {
            writer.writeBool(3, this.isConnected);
        }
    }

    @Override
    public String toString() {
        String res = "struct ConnectedDevice{";
        res += "device=" + this.device;
        res += ", isConnecting=" + this.isConnecting;
        res += ", isConnected=" + this.isConnected;
        res += "}";
        return res;
    }

}
