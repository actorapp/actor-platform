akka {
  extensions = ${akka.extensions} [
    "akka.contrib.pattern.DistributedPubSubExtension",
    "com.romix.akka.serialization.kryo.KryoSerializationExtension$"
  ]

  loggers = ["akka.event.slf4j.Slf4jLogger"]

  persistence {
    journal.plugin = "jdbc-journal"
    snapshot-store.plugin = "jdbc-snapshot-store"

    # Optionally Kafka
    # journal.plugin = "kafka-journal"
    # snapshot-store.plugin = "kafka-snapshot-store"
  }

  actor {
    serializers {
      kryo = "com.romix.akka.serialization.kryo.KryoSerializer"
      actor = "im.actor.server.commons.serialization.ActorSerializer"
    }

    serialization-bindings {
      "im.actor.server.commons.serialization.KryoSerializable" = kryo
      "akka.actor.ActorRef" = kryo
      "com.trueaccord.scalapb.GeneratedMessage" = actor
    }
  }
}

jdbc-journal {
  class = "akka.persistence.jdbc.journal.PostgresqlSyncWriteJournal"
}

jdbc-snapshot-store {
  class = "akka.persistence.jdbc.snapshot.PostgresqlSyncSnapshotStore"
}


