actor-server {
  akka {
    extensions = ["akka.contrib.pattern.DistributedPubSubExtension"]

    actor {
      provider = "akka.cluster.ClusterActorRefProvider"

      extensions += ["com.romix.akka.serialization.kryo.KryoSerializationExtension$"]

      serializers {
        kryo = "com.romix.akka.serialization.kryo.KryoSerializer"
      }

      serialization-bindings {
        "im.actor.server.commons.serialization.KryoSerializable" = kryo
        "akka.actor.ActorRef" = kryo
      }

      kryo  {
        type = "graph"

        idstrategy = "incremental"

        serializer-pool-size = 16

        buffer-size = 4096

        max-buffer-size = -1

        use-manifests = false

        post-serialization-transformations = "off"

        implicit-registration-logging = true

        kryo-trace = false

        kryo-custom-serializer-init = "im.actor.server.commons.serialization.KryoInit"
      }
    }

    persistence {
      journal.plugin = "kafka-journal"
      snapshot-store.plugin = "kafka-snapshot-store"
    }
  }
}