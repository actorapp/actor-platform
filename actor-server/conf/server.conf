# HTTP Server settings
# It serves static app (optionally) and provides integration API
 http {
  # interface: "0.0.0.0"
  # port: 9090
   base-uri: "http://localhost:9090"
 }

# URIs of endpoints, accessible by client applications
# public-endpoints: [
#  "wss://front1-ws-mtproto-api-rev2.actor.im",
#  "tls://front1-mtproto-api-rev2.actor.im",
#  "tcp://front3-mtproto-api-rev3.actor.im:443"
# ]
# Endpoints for Mobile/Web API
# It is strictly recommended to use 443 port
# for all connections. There are a lot of problems
# on any other ports.
#
# Array of elements in format:
# {
#   type: "tcp" or "websocket"
#   host: Listening host
#   post: Listening port
#   keystore: [Optional] Keystore
# }
# endpoints: [
#  {
#    type: tcp
#    interface: "0.0.0.0"
#    port: 9070
#  },
#  {
#    type: websocket
#    interface: "0.0.0.0"
#    port: 9080
#  }
#]

# Name of your application.
project-name: actor

# Secret is used to work with various secrets like password, auth hashes, etc
# It have to be set once and never be changed in future
secret: gf6VLkJRq7P8f0TnQEko

# Server modules
modules {

  # Configuration for messaging module
   messaging {
   #  Configure url for group invites here
     groups {
       invite {
         base-uri: "https://xloto.im"
       }
     }
   }

  files {
    adapter: "im.actor.server.file.local.LocalFileStorageAdapter"
  }

  # Message enricher
  # Comment this module if you don't want to use message
  # enriching feature
  # enricher {
    # Uncomment to customize max image preview size
    # max-preview-size = 2 M
  # }

   security {
      server-keys: [
        {
          public: "/home/diego/data/keys/actor-key-0.pub"
          private: "/home/diego/data/keys/actor-key-0.key"
        }
        {
          public: "/home/diego/data/keys/actor-key-1.pub"
          private: "/home/diego/data/keys/actor-key-1.key"
        }
        {
          public: "/home/diego/data/keys/actor-key-2.pub"
          private: "/home/diego/data/keys/actor-key-2.key"
        }
        {
          public: "/home/diego/data/keys/actor-key-3.pub"
          private: "/home/diego/data/keys/actor-key-3.key"
        }
      ]
    }
  api {
    endpoint = "http://192.168.1.3:9090"
  }

  raw {
    rpc: "im.actor.server.api.rpc.service.raw.RawServiceImpl"
  }
}

# Services that are used by the server.
# Default distribution support services:
# * [REQUIRED] postgresql: PostgreSQL database
# * email: Email integration
# * aws: Amazon Web Services integration
# * google: Accessing Google services
# * apple: Accessing Apple services
# * telesign: Telesign Activation gateway
# * actor-activation: Actor Activation gateway

services {

  # PostgreSQL storage for data
  # The only required service to start server
  # For more information see https://github.com/actorapp/actor-bootstrap/blob/master/docs/server/configure-database.md

  postgresql {
    host: localhost
    port: 5432
    db: actor
    user: actor
    password: actor
  }

  #For local file storage
  file-storage {
    # provide your own path to directory with read and write permissions for user `actor`
    location: "/home/diego/data/files"
    thread-pool-size: 20
  }

  # AWS configuration
  # It is strictly recommended to configure s3 storage for
  # enabling file sharing in apps
  #aws {
    # S3 Storage, used for file sharing
    # For more information see https://github.com/actorapp/actor-bootstrap/blob/master/docs/server/configure-s3.md
   # s3 {
      # S3 Api Key
    #  access-key: "AKIAJZJLA5CVEQNWI2BA"
      # S3 Api Secret
     # secret-key: "7c0DrnvlkqU2mU2QN1af6+hfb/B1VueFVyNYn8V6"
      # File bucket
      #default-bucket: olmf-backup
      # S3 Endpoint
      # endpoint: <put_your_custom_endpoint_here>
      # S3 bucket region
      # region: <put_your_region_here>
      # Enable S3 URLs with path-style access
      # path-style-access: true / false
    #}
  #}

  # Service used for sending activation codes
  activation {
    # Define code providers. look im.actor.server.activation for full provider list
    # providers {
    #   internal: im.actor.server.activation.internal.InternalCodeProvider
    #   sms: im.actor.server.activation.gate.ActorGateSmsProvider
    #   smtp: im.actor.server.activation.smtp.SMTPProvider
    #   call: im.actor.server.activation.telesign.TelesignProvider
    # }
    # Allow client to repeat code sending after this interval
    # repeat-limit: 1m
    # Time and attempt to expire sms/email activation code
    # code-expiration: 1 day
    # code-attempts: 3

    # Email template for email code activation
    email {
       template: templates/activation-email-template.html
     }
    # Setting for internal activation(aka via actor bot)
    # internal {
    #   sender-user-id: 10
    #   online-time-window: 10m
    #   message-template: "Your Actor activation code: $$CODE$$"
    # }

    providers {
      #sms: im.actor.server.activation.gate.ActorGateSmsProvider
      sms: im.actor.server.activation.fake.FakeSmsProvider
      smtp: im.actor.server.activation.smtp.SMTPProvider
    }
  }

  # Actor SMS gate
  # Write to @gatekeeper in Actor Cloud to get your token
  actor-activation {
    # uri: "https://gate.actor.im"
    auth-token: 8b831164dd59acf5e2014a92ddba0298ee33d69
  }

  # Telesign SMS gate
  # To get tokens ask at telesign web site: https://www.telesign.com
  # telesign {
  #  customer-id: <put_your_customer_id_here>
  #  api-key: <put_your_api_key_here>
  # }

  # Email configuration
  email {

    # Sender information for outgoing emails
    # sender {
      # Sender Email address
      # address: <put_sender_address_here>
      # Sender Name
      # name: <put_sender_full_name_here>
      # Mail theme prefix
      # prefix: <put_mail_theme_prefix_here>
    # }

    # SMTP server configuration
    # smtp {

      # SMTP server host
      # host: <put_smtp_server_host_here>
      # SMTP server port
      # port: <put_smtp_server_port_here>
      # SMTP server username
      # username: <put_smtp_server_username_here>
      # SMTP server password
      # password: <put_smtp_server_password_here>

      # Is TLS required
      # tls: true
    # }

    sender {
        address: "diego@diegosilva.com.br"
        name: "Acesso"
        prefix: "Acesso"
    }

    smtp {
        host: "email-smtp.us-east-1.amazonaws.com"
        port: 465
        username: "AKIAJGYTVIXYJU7FTHZQ"
        password: "AooHgOV/z62Bml0dVYtQ7CFvASj+BP0nMy1ToiHQ9vgi"
        tls: true
    }
  }


  # Accessing Google Services
  # Used for OAuth2 in gmail mailboxes
  # and sending push notifications in Android & Chrome
  #
  # How to get OAuth2:
  # * Open https://console.developers.google.com/
  # * Go To Api&Auth, then to Credentials
  # * Press "Client Id" and create id for Web Application
  # * In created Client Id there are values "Client Id" and "Client Secret"
  #   for web OAuth configurationÂ¬
  # * Same steps for Android & iOS applications
  #
  # How to get Push keys
  # * Open https://console.developers.google.com/
  # * Go To Api&Auth, then to Credentials
  # * Press "Create new key" for Android Application
  # * Allow any IP
  # * Get API key from created "Key for Android Application"
  # * Project Id can be found on Overview page
  google {
    gcm {
       keys = [{
        project-id: 43880936595
        key: "AIzaSyAliS4bfKy8GucSRX1pnCLJHM5HroHPpLk"
       }]
    }
  }

  # Accessing Apple servers for push notifications
  apple {
    push {
      certs = [{
        key: 868547
        bundleId: "br.com.diegosilva.xlotomessenger"
        path: "/home/diego/Dropbox/actor/apple/development/aps_development.p12"
        #path: "/home/diego/Dropbox/actor/apple/production/apns_producao.p12"
        password: "xlotoapns123"
        sandbox: true
        voip: false
      },{
        key: 868547
        path: "/home/diego/Dropbox/actor/apple/production/voip_services.p12"
        password: "xlotoapns123"
        sandbox: true
        voip: true
      }]
    }
  }

  actor {
      push {
          max-queue: 10000
          token: "jsksksk"
      }
  }
}


akka {
  loggers = ["akka.event.slf4j.Slf4jLogger"]
  event-handlers = ["akka.event.slf4j.Slf4jLogger"]
  #loglevel = "WARNING"
}

#debug-mode = true