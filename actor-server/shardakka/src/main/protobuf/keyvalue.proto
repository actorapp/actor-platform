syntax = 'proto2';

package shardakka;

option (scalapb.options) = {
    import: "shardakka.TypeMappers._"
};

import "scalapb/scalapb.proto";

message RootCommands {
    message Upsert {
        option (scalapb.message).extends = "shardakka.keyvalue.RootCommand";
        required string key = 1;
        required bytes value = 2;
    }

    message Delete {
        option (scalapb.message).extends = "shardakka.keyvalue.RootCommand";
        required string key = 1;
    }

    message Ack {}
}

message RootQueries {
    message GetKeys {
        option (scalapb.message).extends = "shardakka.keyvalue.RootQuery";
    }

    message GetKeysResponse {
        repeated string keys = 1;
    }
}

message ValueCommands {
    message Upsert {
        option (scalapb.message).extends = "shardakka.keyvalue.ValueCommand";

        required bytes uuid = 1 [(scalapb.field).type = "com.eaio.uuid.UUID"];
        required string key = 2;
        required bytes value = 3;
    }

    message Delete {
        option (scalapb.message).extends = "shardakka.keyvalue.ValueCommand";

        required bytes uuid = 1 [(scalapb.field).type = "com.eaio.uuid.UUID"];
        required string key = 2;
    }

    message Ack {
        required bytes uuid = 1 [(scalapb.field).type = "com.eaio.uuid.UUID"];
    }
}

message ValueQueries {
    message Get {
        option (scalapb.message).extends = "shardakka.keyvalue.ValueQuery";
        required string key = 1;
    }

    message GetResponse {
        optional bytes value = 1;
    }
}

message ValueEvents {
    message ValueUpdated {
        required bytes value = 1;
    }

    message ValueDeleted {}
}

message RootEvents {
    message KeyCreated {
        option (scalapb.message).extends = "shardakka.keyvalue.RootEvent";

        required string key = 1;
    }

    message KeyDeleted {
        option (scalapb.message).extends = "shardakka.keyvalue.RootEvent";

        required string key = 1;
    }
}
