syntax = "proto3";

package im.actor.server;

option (scalapb.options) = {
    import: "im.actor.server.api.TypeMappers._"
    import: "scala.collection.JavaConversions._"
};

import "scalapb/scalapb.proto";
import "model.proto";

message PushData {
    string text = 1;
    Peer peer = 2;
}

message PushRules {
    repeated int32 exclude_auth_sids = 1;
    bool is_fat = 3;
    string text = 4;
    PushData data = 2;
}

message UserSequenceEvents {
    message NewUpdate {
        SeqUpdate seq_update = 1;
        PushRules push_rules = 2;
        bytes state = 3;
    }
}

message UserSequenceCommands {
    message Envelope {
        int32 user_id = 1;
        oneof payload {
            DeliverUpdate deliverUpdate = 2;
            GetSeqState getSeqState = 3;
        }
    }

    message DeliverUpdate {
        UpdateMapping mapping = 1;
        PushRules push_rules = 2;
        string delivery_id = 4;
    }

    message DeliverUpdateAck {
        SeqState seq_state = 1;
        string delivery_id = 2;
    }

    message GetSeqState {}
}

message SeqState {
    int32 seq = 1;
    bytes state = 2;
}

message SeqStateDate {
    int32 seq = 1;
    bytes state = 2;
    int64 date = 3;
}
