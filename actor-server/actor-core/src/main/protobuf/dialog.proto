syntax = "proto2";

package im.actor.server;

option (scalapb.options) = {
    import: "im.actor.server.api.TypeMappers._"
    import: "scala.collection.JavaConversions._"
};

import "scalapb/scalapb.proto";

message GroupDialogCommands {
    message SendMessage {
        option (scalapb.message).extends = "im.actor.server.dialog.group.GroupDialogCommand";

        required int32 group_id = 1;
        required int32 sender_user_id = 2;
        required int64 sender_auth_id = 3;
        required int64 random_id = 4;
        required bytes message = 5 [(scalapb.field).type = "im.actor.api.rpc.messaging.Message"];
        required bool is_fat = 6;
    }

    message MessageReceived {
        option (scalapb.message).extends = "im.actor.server.dialog.group.GroupDialogCommand";

        required int32 group_id = 1;
        required int32 receiver_user_id = 2;
        required int64 received_auth_id = 3;
        required int64 date = 4;
    }

    message MessageReceivedAck {}

    message MessageRead {
        option (scalapb.message).extends = "im.actor.server.dialog.group.GroupDialogCommand";

        required int32 group_id = 1;
        required int32 receiver_user_id = 2;
        required int64 received_auth_id = 3;
        required int64 date = 4;
    }

    message MessageReadAck {}
}

message PrivateDialogCommands {
    message SendMessage {
        option (scalapb.message).extends = "im.actor.server.dialog.privat.PrivateDialogCommand";

        required int32 left = 1;
        required int32 right = 2;
        required Origin origin = 3;
        required int64 sender_auth_id = 4;
        required int64 random_id = 5;
        required bytes message = 6 [(scalapb.field).type = "im.actor.api.rpc.messaging.Message"];
        required bool is_fat = 7;
    }

    message MessageReceived {
        option (scalapb.message).extends = "im.actor.server.dialog.privat.PrivateDialogCommand";

        required int32 left = 1;
        required int32 right = 2;
        required Origin origin = 3;
        required int64 date = 4;
    }

    message MessageReceivedAck {}

    message MessageRead {
        option (scalapb.message).extends = "im.actor.server.dialog.privat.PrivateDialogCommand";

        required int32 left = 1;
        required int32 right = 2;
        required Origin origin = 3;
        required int64 reader_auth_id = 4;
        required int64 date = 5;
    }

    message MessageReadAck {}

    enum Origin {
        LEFT = 1;
        RIGHT = 2;
    }
}