syntax = "proto2";

package im.actor.server;

option (scalapb.options) = {
    import: "im.actor.server.api.TypeMappers._"
    import: "scala.collection.JavaConversions._"
};

import "scalapb/scalapb.proto";
import "file.proto";

enum GroupType {
    General = 1;
    Channel = 3;
}

message GroupEvents {
    message Created {
        option (scalapb.message).extends = "im.actor.server.group.GroupEvent";

        required int64 ts = 10 [(scalapb.field).type = "java.time.Instant"];
        required int32 group_id = 1;
        optional GroupType typ = 5 [default = General];
        required int32 creator_user_id = 2;
        required int64 access_hash = 3;
        required string title = 4;
        repeated int32 user_ids = 6;
        optional bool is_hidden = 8;
        optional bool is_history_shared = 9;
        repeated bytes extensions = 7  [(scalapb.field).type = "im.actor.api.rpc.misc.ApiExtension"];
    }

    message UserInvited {
        option (scalapb.message).extends = "im.actor.server.group.GroupEvent";

        required int64 ts = 3 [(scalapb.field).type = "java.time.Instant"];
        required int32 user_id = 1;
        required int32 inviter_user_id = 2;
    }

    message UserJoined {
        option (scalapb.message).extends = "im.actor.server.group.GroupEvent";

        required int64 ts = 3 [(scalapb.field).type = "java.time.Instant"];
        required int32 user_id = 1;
        required int32 inviter_user_id = 2;
    }

    message UserKicked {
        option (scalapb.message).extends = "im.actor.server.group.GroupEvent";

        required int64 ts = 3 [(scalapb.field).type = "java.time.Instant"];
        required int32 user_id = 1;
        required int32 kicker_user_id = 2;
    }

    message UserLeft {
        option (scalapb.message).extends = "im.actor.server.group.GroupEvent";

        required int64 ts = 2 [(scalapb.field).type = "java.time.Instant"];
        required int32 user_id = 1;
    }

    message BotAdded {
        option (scalapb.message).extends = "im.actor.server.group.GroupEvent";

        required int64 ts = 3 [(scalapb.field).type = "java.time.Instant"];
        required int32 user_id = 1;
        required string token = 2;
    }

    message AvatarUpdated {
        option (scalapb.message).extends = "im.actor.server.group.GroupEvent";

        required int64 ts = 2 [(scalapb.field).type = "java.time.Instant"];
        optional Avatar avatar = 1;
    }

    message TitleUpdated {
        option (scalapb.message).extends = "im.actor.server.group.GroupEvent";

        required int64 ts = 2 [(scalapb.field).type = "java.time.Instant"];
        required string title = 1;
    }

    message BecamePublic {
        option (scalapb.message).extends = "im.actor.server.group.GroupEvent";

        required int64 ts = 1 [(scalapb.field).type = "java.time.Instant"];
    }

    message AboutUpdated {
        option (scalapb.message).extends = "im.actor.server.group.GroupEvent";

        required int64 ts = 2 [(scalapb.field).type = "java.time.Instant"];
        optional string description = 1;
    }

    message ShortNameUpdated {
        option (scalapb.message).extends = "im.actor.server.group.GroupEvent";

        required int64 ts = 1 [(scalapb.field).type = "java.time.Instant"];
        optional string short_name = 2;
    }

    message TopicUpdated {
        option (scalapb.message).extends = "im.actor.server.group.GroupEvent";

        required int64 ts = 2 [(scalapb.field).type = "java.time.Instant"];
        optional string topic = 1;
    }

    // deprecated in favour of AdminStatusChanged
    message UserBecameAdmin {
        option (scalapb.message).extends = "im.actor.server.group.GroupEvent";

        required int64 ts = 3 [(scalapb.field).type = "java.time.Instant"];
        required int32 user_id = 1;
        required int32 promoter_user_id = 2;
    }

    message AdminStatusChanged {
        option (scalapb.message).extends = "im.actor.server.group.GroupEvent";

        required int64 ts = 1 [(scalapb.field).type = "java.time.Instant"];
        required int32 user_id = 2;
        required bool is_admin = 3;
    }

    message IntegrationTokenRevoked {
        option (scalapb.message).extends = "im.actor.server.group.GroupEvent";

        required int64 ts = 2 [(scalapb.field).type = "java.time.Instant"];
        required string token = 1;
    }

    message OwnerChanged {
        option (scalapb.message).extends = "im.actor.server.group.GroupEvent";

        required int64 ts = 1 [(scalapb.field).type = "java.time.Instant"];
        required int32 user_id = 2;
    }

    message AdminSettingsUpdated {
        option (scalapb.message).extends = "im.actor.server.group.GroupEvent";

        required int64 ts = 1 [(scalapb.field).type = "java.time.Instant"];
        required int32 settings_bit_mask = 2;
    }

    message HistoryBecameShared {
        option (scalapb.message).extends = "im.actor.server.group.GroupEvent";

        required int64 ts = 1 [(scalapb.field).type = "java.time.Instant"];
        required int32 executor_user_id = 2;
    }

    message MembersBecameAsync {
        option (scalapb.message).extends = "im.actor.server.group.GroupEvent";

        required int64 ts = 1 [(scalapb.field).type = "java.time.Instant"];
    }

    message GroupDeleted {
        option (scalapb.message).extends = "im.actor.server.group.GroupEvent";

        required int64 ts = 1 [(scalapb.field).type = "java.time.Instant"];
        required int32 executor_user_id = 2;
    }

    message ExtAdded {
        option (scalapb.message).extends = "im.actor.server.group.GroupEvent";

        required int64 ts = 1 [(scalapb.field).type = "java.time.Instant"];
        required bytes ext = 2 [(scalapb.field).type = "im.actor.server.group.GroupExt"];
    }

    message ExtRemoved {
        option (scalapb.message).extends = "im.actor.server.group.GroupEvent";

        required int64 ts = 1 [(scalapb.field).type = "java.time.Instant"];
        required string key = 2;
    }

}
