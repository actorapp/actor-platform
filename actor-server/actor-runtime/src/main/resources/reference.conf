services {
  aws {
    s3 {
      default-bucket: ""
      default-bucket: ${?AWS_S3_BUCKET}

      access-key: ""
      access-key: ${?AWS_ACCESS_KEY_ID}

      secret-key: ""
      secret-key: ${?AWS_SECRET_ACCESS_KEY}
    }
  }
}

tls {
  keystores {

  }
}

common {
  default-timeout: 20 seconds
}

akka {
  extensions = ${akka.extensions} [
    "akka.cluster.pubsub.DistributedPubSubExtension",
  ]

  loggers = ["akka.event.slf4j.Slf4jLogger"]

  logging-filter = "akka.event.slf4j.Slf4jLoggingFilter"

  persistence {
    journal.plugin = "jdbc-journal"
    snapshot-store.plugin = "jdbc-snapshot-store"

    # Optionally Kafka
    # journal.plugin = "kafka-journal"
    # snapshot-store.plugin = "kafka-snapshot-store"
  }

  actor {
    serializers {
      actor = "im.actor.serialization.ActorSerializer"
    }

    serialization-bindings {
      "com.trueaccord.scalapb.GeneratedMessage" = actor
    }
  }
}

jdbc-journal {
  class = "akka.persistence.jdbc.journal.PostgresqlSyncWriteJournal"
}

jdbc-snapshot-store {
  class = "akka.persistence.jdbc.snapshot.PostgresqlSyncSnapshotStore"
}
