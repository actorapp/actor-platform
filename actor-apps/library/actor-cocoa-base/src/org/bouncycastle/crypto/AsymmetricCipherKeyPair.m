//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/ex3ndr/Develop/actor-model/library/actor-cocoa-base/build/java/org/bouncycastle/crypto/AsymmetricCipherKeyPair.java
//


#include "J2ObjC_source.h"
#include "org/bouncycastle/crypto/AsymmetricCipherKeyPair.h"
#include "org/bouncycastle/crypto/CipherParameters.h"
#include "org/bouncycastle/crypto/params/AsymmetricKeyParameter.h"

@interface OrgBouncycastleCryptoAsymmetricCipherKeyPair () {
 @public
  OrgBouncycastleCryptoParamsAsymmetricKeyParameter *publicParam_;
  OrgBouncycastleCryptoParamsAsymmetricKeyParameter *privateParam_;
}

@end

J2OBJC_FIELD_SETTER(OrgBouncycastleCryptoAsymmetricCipherKeyPair, publicParam_, OrgBouncycastleCryptoParamsAsymmetricKeyParameter *)
J2OBJC_FIELD_SETTER(OrgBouncycastleCryptoAsymmetricCipherKeyPair, privateParam_, OrgBouncycastleCryptoParamsAsymmetricKeyParameter *)

@implementation OrgBouncycastleCryptoAsymmetricCipherKeyPair

- (instancetype)initWithOrgBouncycastleCryptoParamsAsymmetricKeyParameter:(OrgBouncycastleCryptoParamsAsymmetricKeyParameter *)publicParam
                    withOrgBouncycastleCryptoParamsAsymmetricKeyParameter:(OrgBouncycastleCryptoParamsAsymmetricKeyParameter *)privateParam {
  OrgBouncycastleCryptoAsymmetricCipherKeyPair_initWithOrgBouncycastleCryptoParamsAsymmetricKeyParameter_withOrgBouncycastleCryptoParamsAsymmetricKeyParameter_(self, publicParam, privateParam);
  return self;
}

- (instancetype)initWithOrgBouncycastleCryptoCipherParameters:(id<OrgBouncycastleCryptoCipherParameters>)publicParam
                    withOrgBouncycastleCryptoCipherParameters:(id<OrgBouncycastleCryptoCipherParameters>)privateParam {
  OrgBouncycastleCryptoAsymmetricCipherKeyPair_initWithOrgBouncycastleCryptoCipherParameters_withOrgBouncycastleCryptoCipherParameters_(self, publicParam, privateParam);
  return self;
}

- (OrgBouncycastleCryptoParamsAsymmetricKeyParameter *)getPublic {
  return publicParam_;
}

- (OrgBouncycastleCryptoParamsAsymmetricKeyParameter *)getPrivate {
  return privateParam_;
}

@end

void OrgBouncycastleCryptoAsymmetricCipherKeyPair_initWithOrgBouncycastleCryptoParamsAsymmetricKeyParameter_withOrgBouncycastleCryptoParamsAsymmetricKeyParameter_(OrgBouncycastleCryptoAsymmetricCipherKeyPair *self, OrgBouncycastleCryptoParamsAsymmetricKeyParameter *publicParam, OrgBouncycastleCryptoParamsAsymmetricKeyParameter *privateParam) {
  (void) NSObject_init(self);
  self->publicParam_ = publicParam;
  self->privateParam_ = privateParam;
}

OrgBouncycastleCryptoAsymmetricCipherKeyPair *new_OrgBouncycastleCryptoAsymmetricCipherKeyPair_initWithOrgBouncycastleCryptoParamsAsymmetricKeyParameter_withOrgBouncycastleCryptoParamsAsymmetricKeyParameter_(OrgBouncycastleCryptoParamsAsymmetricKeyParameter *publicParam, OrgBouncycastleCryptoParamsAsymmetricKeyParameter *privateParam) {
  OrgBouncycastleCryptoAsymmetricCipherKeyPair *self = [OrgBouncycastleCryptoAsymmetricCipherKeyPair alloc];
  OrgBouncycastleCryptoAsymmetricCipherKeyPair_initWithOrgBouncycastleCryptoParamsAsymmetricKeyParameter_withOrgBouncycastleCryptoParamsAsymmetricKeyParameter_(self, publicParam, privateParam);
  return self;
}

void OrgBouncycastleCryptoAsymmetricCipherKeyPair_initWithOrgBouncycastleCryptoCipherParameters_withOrgBouncycastleCryptoCipherParameters_(OrgBouncycastleCryptoAsymmetricCipherKeyPair *self, id<OrgBouncycastleCryptoCipherParameters> publicParam, id<OrgBouncycastleCryptoCipherParameters> privateParam) {
  (void) NSObject_init(self);
  self->publicParam_ = (OrgBouncycastleCryptoParamsAsymmetricKeyParameter *) check_class_cast(publicParam, [OrgBouncycastleCryptoParamsAsymmetricKeyParameter class]);
  self->privateParam_ = (OrgBouncycastleCryptoParamsAsymmetricKeyParameter *) check_class_cast(privateParam, [OrgBouncycastleCryptoParamsAsymmetricKeyParameter class]);
}

OrgBouncycastleCryptoAsymmetricCipherKeyPair *new_OrgBouncycastleCryptoAsymmetricCipherKeyPair_initWithOrgBouncycastleCryptoCipherParameters_withOrgBouncycastleCryptoCipherParameters_(id<OrgBouncycastleCryptoCipherParameters> publicParam, id<OrgBouncycastleCryptoCipherParameters> privateParam) {
  OrgBouncycastleCryptoAsymmetricCipherKeyPair *self = [OrgBouncycastleCryptoAsymmetricCipherKeyPair alloc];
  OrgBouncycastleCryptoAsymmetricCipherKeyPair_initWithOrgBouncycastleCryptoCipherParameters_withOrgBouncycastleCryptoCipherParameters_(self, publicParam, privateParam);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgBouncycastleCryptoAsymmetricCipherKeyPair)
