//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/ex3ndr/Develop/actor-model/library/actor-cocoa-base/build/java/im/actor/model/api/rpc/RequestCommitFileUpload.java
//


#include "IOSClass.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "im/actor/model/api/rpc/RequestCommitFileUpload.h"
#include "im/actor/model/droidkit/bser/Bser.h"
#include "im/actor/model/droidkit/bser/BserObject.h"
#include "im/actor/model/droidkit/bser/BserValues.h"
#include "im/actor/model/droidkit/bser/BserWriter.h"
#include "im/actor/model/network/parser/Request.h"
#include "java/io/IOException.h"

@interface APRequestCommitFileUpload () {
 @public
  IOSByteArray *uploadKey_;
  NSString *fileName_;
}

@end

J2OBJC_FIELD_SETTER(APRequestCommitFileUpload, uploadKey_, IOSByteArray *)
J2OBJC_FIELD_SETTER(APRequestCommitFileUpload, fileName_, NSString *)

@implementation APRequestCommitFileUpload

+ (APRequestCommitFileUpload *)fromBytesWithByteArray:(IOSByteArray *)data {
  return APRequestCommitFileUpload_fromBytesWithByteArray_(data);
}

- (instancetype)initWithByteArray:(IOSByteArray *)uploadKey
                     withNSString:(NSString *)fileName {
  APRequestCommitFileUpload_initWithByteArray_withNSString_(self, uploadKey, fileName);
  return self;
}

- (instancetype)init {
  APRequestCommitFileUpload_init(self);
  return self;
}

- (IOSByteArray *)getUploadKey {
  return self->uploadKey_;
}

- (NSString *)getFileName {
  return self->fileName_;
}

- (void)parseWithBSBserValues:(BSBserValues *)values {
  self->uploadKey_ = [((BSBserValues *) nil_chk(values)) getBytesWithInt:1];
  self->fileName_ = [values getStringWithInt:2];
}

- (void)serializeWithBSBserWriter:(BSBserWriter *)writer {
  if (self->uploadKey_ == nil) {
    @throw new_JavaIoIOException_init();
  }
  [((BSBserWriter *) nil_chk(writer)) writeBytesWithInt:1 withByteArray:self->uploadKey_];
  if (self->fileName_ == nil) {
    @throw new_JavaIoIOException_init();
  }
  [writer writeStringWithInt:2 withNSString:self->fileName_];
}

- (NSString *)description {
  NSString *res = @"rpc CommitFileUpload{";
  res = JreStrcat("$C", res, '}');
  return res;
}

- (jint)getHeaderKey {
  return APRequestCommitFileUpload_HEADER;
}

@end

APRequestCommitFileUpload *APRequestCommitFileUpload_fromBytesWithByteArray_(IOSByteArray *data) {
  APRequestCommitFileUpload_initialize();
  return ((APRequestCommitFileUpload *) BSBser_parseWithBSBserObject_withByteArray_(new_APRequestCommitFileUpload_init(), data));
}

void APRequestCommitFileUpload_initWithByteArray_withNSString_(APRequestCommitFileUpload *self, IOSByteArray *uploadKey, NSString *fileName) {
  (void) APRequest_init(self);
  self->uploadKey_ = uploadKey;
  self->fileName_ = fileName;
}

APRequestCommitFileUpload *new_APRequestCommitFileUpload_initWithByteArray_withNSString_(IOSByteArray *uploadKey, NSString *fileName) {
  APRequestCommitFileUpload *self = [APRequestCommitFileUpload alloc];
  APRequestCommitFileUpload_initWithByteArray_withNSString_(self, uploadKey, fileName);
  return self;
}

void APRequestCommitFileUpload_init(APRequestCommitFileUpload *self) {
  (void) APRequest_init(self);
}

APRequestCommitFileUpload *new_APRequestCommitFileUpload_init() {
  APRequestCommitFileUpload *self = [APRequestCommitFileUpload alloc];
  APRequestCommitFileUpload_init(self);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(APRequestCommitFileUpload)
