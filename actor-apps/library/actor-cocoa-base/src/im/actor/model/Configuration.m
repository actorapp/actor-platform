//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/ex3ndr/Develop/actor-model/library/actor-cocoa-base/build/java/im/actor/model/Configuration.java
//


#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "im/actor/model/AnalyticsProvider.h"
#include "im/actor/model/ApiConfiguration.h"
#include "im/actor/model/AppCategory.h"
#include "im/actor/model/Configuration.h"
#include "im/actor/model/CryptoProvider.h"
#include "im/actor/model/DeviceCategory.h"
#include "im/actor/model/DispatcherProvider.h"
#include "im/actor/model/FileSystemProvider.h"
#include "im/actor/model/HttpProvider.h"
#include "im/actor/model/LifecycleProvider.h"
#include "im/actor/model/LocaleProvider.h"
#include "im/actor/model/LogProvider.h"
#include "im/actor/model/MainThreadProvider.h"
#include "im/actor/model/NetworkProvider.h"
#include "im/actor/model/NotificationProvider.h"
#include "im/actor/model/PhoneBookProvider.h"
#include "im/actor/model/StorageProvider.h"
#include "im/actor/model/ThreadingProvider.h"

@interface AMConfiguration () {
 @public
  id<AMNetworkProvider> networkProvider_;
  IOSObjectArray *endpoints_;
  id<AMThreadingProvider> threadingProvider_;
  id<AMMainThreadProvider> mainThreadProvider_;
  id<AMStorageProvider> storageProvider_;
  id<AMLogProvider> log_;
  id<AMLocaleProvider> localeProvider_;
  id<AMPhoneBookProvider> phoneBookProvider_;
  id<AMCryptoProvider> cryptoProvider_;
  jboolean enableContactsLogging_;
  jboolean enableNetworkLogging_;
  jboolean enableFilesLogging_;
  id<AMFileSystemProvider> fileSystemProvider_;
  id<AMNotificationProvider> notificationProvider_;
  AMApiConfiguration *apiConfiguration_;
  id<AMDispatcherProvider> dispatcherProvider_;
  id<AMHttpProvider> httpProvider_;
  id<AMAnalyticsProvider> analyticsProvider_;
  AMDeviceCategoryEnum *deviceCategory_;
  AMAppCategoryEnum *appCategory_;
  id<AMLifecycleProvider> lifecycleProvider_;
}

@end

J2OBJC_FIELD_SETTER(AMConfiguration, networkProvider_, id<AMNetworkProvider>)
J2OBJC_FIELD_SETTER(AMConfiguration, endpoints_, IOSObjectArray *)
J2OBJC_FIELD_SETTER(AMConfiguration, threadingProvider_, id<AMThreadingProvider>)
J2OBJC_FIELD_SETTER(AMConfiguration, mainThreadProvider_, id<AMMainThreadProvider>)
J2OBJC_FIELD_SETTER(AMConfiguration, storageProvider_, id<AMStorageProvider>)
J2OBJC_FIELD_SETTER(AMConfiguration, log_, id<AMLogProvider>)
J2OBJC_FIELD_SETTER(AMConfiguration, localeProvider_, id<AMLocaleProvider>)
J2OBJC_FIELD_SETTER(AMConfiguration, phoneBookProvider_, id<AMPhoneBookProvider>)
J2OBJC_FIELD_SETTER(AMConfiguration, cryptoProvider_, id<AMCryptoProvider>)
J2OBJC_FIELD_SETTER(AMConfiguration, fileSystemProvider_, id<AMFileSystemProvider>)
J2OBJC_FIELD_SETTER(AMConfiguration, notificationProvider_, id<AMNotificationProvider>)
J2OBJC_FIELD_SETTER(AMConfiguration, apiConfiguration_, AMApiConfiguration *)
J2OBJC_FIELD_SETTER(AMConfiguration, dispatcherProvider_, id<AMDispatcherProvider>)
J2OBJC_FIELD_SETTER(AMConfiguration, httpProvider_, id<AMHttpProvider>)
J2OBJC_FIELD_SETTER(AMConfiguration, analyticsProvider_, id<AMAnalyticsProvider>)
J2OBJC_FIELD_SETTER(AMConfiguration, deviceCategory_, AMDeviceCategoryEnum *)
J2OBJC_FIELD_SETTER(AMConfiguration, appCategory_, AMAppCategoryEnum *)
J2OBJC_FIELD_SETTER(AMConfiguration, lifecycleProvider_, id<AMLifecycleProvider>)

@implementation AMConfiguration

- (instancetype)initWithAMNetworkProvider:(id<AMNetworkProvider>)networkProvider
            withAMConnectionEndpointArray:(IOSObjectArray *)endpoints
                  withAMThreadingProvider:(id<AMThreadingProvider>)threadingProvider
                 withAMMainThreadProvider:(id<AMMainThreadProvider>)mainThreadProvider
                    withAMStorageProvider:(id<AMStorageProvider>)storageProvider
                        withAMLogProvider:(id<AMLogProvider>)log
                     withAMLocaleProvider:(id<AMLocaleProvider>)localeProvider
                  withAMPhoneBookProvider:(id<AMPhoneBookProvider>)phoneBookProvider
                     withAMCryptoProvider:(id<AMCryptoProvider>)cryptoProvider
                 withAMFileSystemProvider:(id<AMFileSystemProvider>)fileSystemProvider
               withAMNotificationProvider:(id<AMNotificationProvider>)notificationProvider
                 withAMDispatcherProvider:(id<AMDispatcherProvider>)dispatcherProvider
                   withAMApiConfiguration:(AMApiConfiguration *)apiConfiguration
                              withBoolean:(jboolean)enableContactsLogging
                              withBoolean:(jboolean)enableNetworkLogging
                              withBoolean:(jboolean)enableFilesLogging
                       withAMHttpProvider:(id<AMHttpProvider>)httpProvider
                  withAMAnalyticsProvider:(id<AMAnalyticsProvider>)analyticsProvider
                 withAMDeviceCategoryEnum:(AMDeviceCategoryEnum *)deviceCategory
                    withAMAppCategoryEnum:(AMAppCategoryEnum *)appCategory
                  withAMLifecycleProvider:(id<AMLifecycleProvider>)lifecycleProvider {
  AMConfiguration_initWithAMNetworkProvider_withAMConnectionEndpointArray_withAMThreadingProvider_withAMMainThreadProvider_withAMStorageProvider_withAMLogProvider_withAMLocaleProvider_withAMPhoneBookProvider_withAMCryptoProvider_withAMFileSystemProvider_withAMNotificationProvider_withAMDispatcherProvider_withAMApiConfiguration_withBoolean_withBoolean_withBoolean_withAMHttpProvider_withAMAnalyticsProvider_withAMDeviceCategoryEnum_withAMAppCategoryEnum_withAMLifecycleProvider_(self, networkProvider, endpoints, threadingProvider, mainThreadProvider, storageProvider, log, localeProvider, phoneBookProvider, cryptoProvider, fileSystemProvider, notificationProvider, dispatcherProvider, apiConfiguration, enableContactsLogging, enableNetworkLogging, enableFilesLogging, httpProvider, analyticsProvider, deviceCategory, appCategory, lifecycleProvider);
  return self;
}

- (AMDeviceCategoryEnum *)getDeviceCategory {
  return deviceCategory_;
}

- (AMAppCategoryEnum *)getAppCategory {
  return appCategory_;
}

- (AMApiConfiguration *)getApiConfiguration {
  return apiConfiguration_;
}

- (id<AMNotificationProvider>)getNotificationProvider {
  return notificationProvider_;
}

- (jboolean)isEnableContactsLogging {
  return enableContactsLogging_;
}

- (jboolean)isEnableNetworkLogging {
  return enableNetworkLogging_;
}

- (jboolean)isEnableFilesLogging {
  return enableFilesLogging_;
}

- (id<AMCryptoProvider>)getCryptoProvider {
  return cryptoProvider_;
}

- (id<AMPhoneBookProvider>)getPhoneBookProvider {
  return phoneBookProvider_;
}

- (id<AMNetworkProvider>)getNetworkProvider {
  return networkProvider_;
}

- (IOSObjectArray *)getEndpoints {
  return endpoints_;
}

- (id<AMThreadingProvider>)getThreadingProvider {
  return threadingProvider_;
}

- (id<AMMainThreadProvider>)getMainThreadProvider {
  return mainThreadProvider_;
}

- (id<AMStorageProvider>)getStorageProvider {
  return storageProvider_;
}

- (id<AMLogProvider>)getLog {
  return log_;
}

- (id<AMLocaleProvider>)getLocaleProvider {
  return localeProvider_;
}

- (id<AMFileSystemProvider>)getFileSystemProvider {
  return fileSystemProvider_;
}

- (id<AMDispatcherProvider>)getDispatcherProvider {
  return dispatcherProvider_;
}

- (id<AMHttpProvider>)getHttpProvider {
  return httpProvider_;
}

- (id<AMAnalyticsProvider>)getAnalyticsProvider {
  return analyticsProvider_;
}

- (id<AMLifecycleProvider>)getLifecycleProvider {
  return lifecycleProvider_;
}

@end

void AMConfiguration_initWithAMNetworkProvider_withAMConnectionEndpointArray_withAMThreadingProvider_withAMMainThreadProvider_withAMStorageProvider_withAMLogProvider_withAMLocaleProvider_withAMPhoneBookProvider_withAMCryptoProvider_withAMFileSystemProvider_withAMNotificationProvider_withAMDispatcherProvider_withAMApiConfiguration_withBoolean_withBoolean_withBoolean_withAMHttpProvider_withAMAnalyticsProvider_withAMDeviceCategoryEnum_withAMAppCategoryEnum_withAMLifecycleProvider_(AMConfiguration *self, id<AMNetworkProvider> networkProvider, IOSObjectArray *endpoints, id<AMThreadingProvider> threadingProvider, id<AMMainThreadProvider> mainThreadProvider, id<AMStorageProvider> storageProvider, id<AMLogProvider> log, id<AMLocaleProvider> localeProvider, id<AMPhoneBookProvider> phoneBookProvider, id<AMCryptoProvider> cryptoProvider, id<AMFileSystemProvider> fileSystemProvider, id<AMNotificationProvider> notificationProvider, id<AMDispatcherProvider> dispatcherProvider, AMApiConfiguration *apiConfiguration, jboolean enableContactsLogging, jboolean enableNetworkLogging, jboolean enableFilesLogging, id<AMHttpProvider> httpProvider, id<AMAnalyticsProvider> analyticsProvider, AMDeviceCategoryEnum *deviceCategory, AMAppCategoryEnum *appCategory, id<AMLifecycleProvider> lifecycleProvider) {
  (void) NSObject_init(self);
  self->enableContactsLogging_ = NO;
  self->enableNetworkLogging_ = NO;
  self->enableFilesLogging_ = NO;
  self->networkProvider_ = networkProvider;
  self->endpoints_ = endpoints;
  self->threadingProvider_ = threadingProvider;
  self->mainThreadProvider_ = mainThreadProvider;
  self->storageProvider_ = storageProvider;
  self->log_ = log;
  self->localeProvider_ = localeProvider;
  self->phoneBookProvider_ = phoneBookProvider;
  self->cryptoProvider_ = cryptoProvider;
  self->fileSystemProvider_ = fileSystemProvider;
  self->enableContactsLogging_ = enableContactsLogging;
  self->enableNetworkLogging_ = enableNetworkLogging;
  self->enableFilesLogging_ = enableFilesLogging;
  self->notificationProvider_ = notificationProvider;
  self->apiConfiguration_ = apiConfiguration;
  self->dispatcherProvider_ = dispatcherProvider;
  self->httpProvider_ = httpProvider;
  self->analyticsProvider_ = analyticsProvider;
  self->deviceCategory_ = deviceCategory;
  self->appCategory_ = appCategory;
  self->lifecycleProvider_ = lifecycleProvider;
}

AMConfiguration *new_AMConfiguration_initWithAMNetworkProvider_withAMConnectionEndpointArray_withAMThreadingProvider_withAMMainThreadProvider_withAMStorageProvider_withAMLogProvider_withAMLocaleProvider_withAMPhoneBookProvider_withAMCryptoProvider_withAMFileSystemProvider_withAMNotificationProvider_withAMDispatcherProvider_withAMApiConfiguration_withBoolean_withBoolean_withBoolean_withAMHttpProvider_withAMAnalyticsProvider_withAMDeviceCategoryEnum_withAMAppCategoryEnum_withAMLifecycleProvider_(id<AMNetworkProvider> networkProvider, IOSObjectArray *endpoints, id<AMThreadingProvider> threadingProvider, id<AMMainThreadProvider> mainThreadProvider, id<AMStorageProvider> storageProvider, id<AMLogProvider> log, id<AMLocaleProvider> localeProvider, id<AMPhoneBookProvider> phoneBookProvider, id<AMCryptoProvider> cryptoProvider, id<AMFileSystemProvider> fileSystemProvider, id<AMNotificationProvider> notificationProvider, id<AMDispatcherProvider> dispatcherProvider, AMApiConfiguration *apiConfiguration, jboolean enableContactsLogging, jboolean enableNetworkLogging, jboolean enableFilesLogging, id<AMHttpProvider> httpProvider, id<AMAnalyticsProvider> analyticsProvider, AMDeviceCategoryEnum *deviceCategory, AMAppCategoryEnum *appCategory, id<AMLifecycleProvider> lifecycleProvider) {
  AMConfiguration *self = [AMConfiguration alloc];
  AMConfiguration_initWithAMNetworkProvider_withAMConnectionEndpointArray_withAMThreadingProvider_withAMMainThreadProvider_withAMStorageProvider_withAMLogProvider_withAMLocaleProvider_withAMPhoneBookProvider_withAMCryptoProvider_withAMFileSystemProvider_withAMNotificationProvider_withAMDispatcherProvider_withAMApiConfiguration_withBoolean_withBoolean_withBoolean_withAMHttpProvider_withAMAnalyticsProvider_withAMDeviceCategoryEnum_withAMAppCategoryEnum_withAMLifecycleProvider_(self, networkProvider, endpoints, threadingProvider, mainThreadProvider, storageProvider, log, localeProvider, phoneBookProvider, cryptoProvider, fileSystemProvider, notificationProvider, dispatcherProvider, apiConfiguration, enableContactsLogging, enableNetworkLogging, enableFilesLogging, httpProvider, analyticsProvider, deviceCategory, appCategory, lifecycleProvider);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(AMConfiguration)
