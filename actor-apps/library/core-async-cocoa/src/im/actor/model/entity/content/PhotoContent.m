//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/ex3ndr/Develop/actor-platform/actor-apps/library/core/src/main/java/im/actor/model/entity/content/PhotoContent.java
//


#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "im/actor/model/api/DocumentEx.h"
#include "im/actor/model/api/DocumentExPhoto.h"
#include "im/actor/model/api/DocumentMessage.h"
#include "im/actor/model/api/FastThumb.h"
#include "im/actor/model/api/Message.h"
#include "im/actor/model/entity/FileReference.h"
#include "im/actor/model/entity/content/DocumentContent.h"
#include "im/actor/model/entity/content/FastThumb.h"
#include "im/actor/model/entity/content/PhotoContent.h"
#include "im/actor/model/entity/content/internal/AbsLocalContent.h"
#include "im/actor/model/entity/content/internal/ContentLocalContainer.h"
#include "im/actor/model/entity/content/internal/ContentRemoteContainer.h"
#include "im/actor/model/entity/content/internal/LocalFastThumb.h"
#include "im/actor/model/entity/content/internal/LocalPhoto.h"

@interface AMPhotoContent () {
 @public
  jint w_;
  jint h_;
}

@end

@implementation AMPhotoContent

+ (AMPhotoContent *)createLocalPhotoWithNSString:(NSString *)descriptor
                                    withNSString:(NSString *)fileName
                                         withInt:(jint)fileSize
                                         withInt:(jint)w
                                         withInt:(jint)h
                                 withAMFastThumb:(AMFastThumb *)fastThumb {
  return AMPhotoContent_createLocalPhotoWithNSString_withNSString_withInt_withInt_withInt_withAMFastThumb_(descriptor, fileName, fileSize, w, h, fastThumb);
}

+ (AMPhotoContent *)createRemotePhotoWithAMFileReference:(AMFileReference *)reference
                                                 withInt:(jint)w
                                                 withInt:(jint)h
                                         withAMFastThumb:(AMFastThumb *)fastThumb {
  return AMPhotoContent_createRemotePhotoWithAMFileReference_withInt_withInt_withAMFastThumb_(reference, w, h, fastThumb);
}

- (instancetype)initWithImActorModelEntityContentInternalContentLocalContainer:(ImActorModelEntityContentInternalContentLocalContainer *)contentLocalContainer {
  AMPhotoContent_initWithImActorModelEntityContentInternalContentLocalContainer_(self, contentLocalContainer);
  return self;
}

- (instancetype)initWithImActorModelEntityContentInternalContentRemoteContainer:(ImActorModelEntityContentInternalContentRemoteContainer *)contentRemoteContainer {
  AMPhotoContent_initWithImActorModelEntityContentInternalContentRemoteContainer_(self, contentRemoteContainer);
  return self;
}

- (jint)getW {
  return w_;
}

- (jint)getH {
  return h_;
}

@end

AMPhotoContent *AMPhotoContent_createLocalPhotoWithNSString_withNSString_withInt_withInt_withInt_withAMFastThumb_(NSString *descriptor, NSString *fileName, jint fileSize, jint w, jint h, AMFastThumb *fastThumb) {
  AMPhotoContent_initialize();
  return new_AMPhotoContent_initWithImActorModelEntityContentInternalContentLocalContainer_(new_ImActorModelEntityContentInternalContentLocalContainer_initWithImActorModelEntityContentInternalAbsLocalContent_(new_ImActorModelEntityContentInternalLocalPhoto_initWithNSString_withNSString_withInt_withNSString_withImActorModelEntityContentInternalLocalFastThumb_withInt_withInt_(fileName, descriptor, fileSize, @"image/jpeg", fastThumb != nil ? new_ImActorModelEntityContentInternalLocalFastThumb_initWithAMFastThumb_(fastThumb) : nil, w, h)));
}

AMPhotoContent *AMPhotoContent_createRemotePhotoWithAMFileReference_withInt_withInt_withAMFastThumb_(AMFileReference *reference, jint w, jint h, AMFastThumb *fastThumb) {
  AMPhotoContent_initialize();
  return new_AMPhotoContent_initWithImActorModelEntityContentInternalContentRemoteContainer_(new_ImActorModelEntityContentInternalContentRemoteContainer_initWithAPMessage_(new_APDocumentMessage_initWithLong_withLong_withInt_withNSString_withNSString_withAPFastThumb_withAPDocumentEx_([((AMFileReference *) nil_chk(reference)) getFileId], [reference getAccessHash], [reference getFileSize], [reference getFileName], @"image/jpeg", fastThumb != nil ? new_APFastThumb_initWithInt_withInt_withByteArray_([fastThumb getW], [fastThumb getH], [fastThumb getImage]) : nil, new_APDocumentExPhoto_initWithInt_withInt_(w, h))));
}

void AMPhotoContent_initWithImActorModelEntityContentInternalContentLocalContainer_(AMPhotoContent *self, ImActorModelEntityContentInternalContentLocalContainer *contentLocalContainer) {
  (void) AMDocumentContent_initWithImActorModelEntityContentInternalContentLocalContainer_(self, contentLocalContainer);
  ImActorModelEntityContentInternalLocalPhoto *photo = ((ImActorModelEntityContentInternalLocalPhoto *) check_class_cast([((ImActorModelEntityContentInternalContentLocalContainer *) nil_chk(contentLocalContainer)) getContent], [ImActorModelEntityContentInternalLocalPhoto class]));
  self->w_ = [((ImActorModelEntityContentInternalLocalPhoto *) nil_chk(photo)) getW];
  self->h_ = [photo getH];
}

AMPhotoContent *new_AMPhotoContent_initWithImActorModelEntityContentInternalContentLocalContainer_(ImActorModelEntityContentInternalContentLocalContainer *contentLocalContainer) {
  AMPhotoContent *self = [AMPhotoContent alloc];
  AMPhotoContent_initWithImActorModelEntityContentInternalContentLocalContainer_(self, contentLocalContainer);
  return self;
}

void AMPhotoContent_initWithImActorModelEntityContentInternalContentRemoteContainer_(AMPhotoContent *self, ImActorModelEntityContentInternalContentRemoteContainer *contentRemoteContainer) {
  (void) AMDocumentContent_initWithImActorModelEntityContentInternalContentRemoteContainer_(self, contentRemoteContainer);
  APDocumentMessage *message = (APDocumentMessage *) check_class_cast([((ImActorModelEntityContentInternalContentRemoteContainer *) nil_chk(contentRemoteContainer)) getMessage], [APDocumentMessage class]);
  APDocumentExPhoto *photo = (APDocumentExPhoto *) check_class_cast([((APDocumentMessage *) nil_chk(message)) getExt], [APDocumentExPhoto class]);
  if (photo != nil) {
    self->w_ = [photo getW];
    self->h_ = [photo getH];
  }
}

AMPhotoContent *new_AMPhotoContent_initWithImActorModelEntityContentInternalContentRemoteContainer_(ImActorModelEntityContentInternalContentRemoteContainer *contentRemoteContainer) {
  AMPhotoContent *self = [AMPhotoContent alloc];
  AMPhotoContent_initWithImActorModelEntityContentInternalContentRemoteContainer_(self, contentRemoteContainer);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(AMPhotoContent)
