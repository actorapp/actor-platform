//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/ex3ndr/Develop/actor-platform/actor-apps/library/core/src/main/java/im/actor/model/api/ServiceExChangedTitle.java
//


#include "IOSClass.h"
#include "J2ObjC_source.h"
#include "im/actor/model/api/ServiceEx.h"
#include "im/actor/model/api/ServiceExChangedTitle.h"
#include "im/actor/model/droidkit/bser/BserObject.h"
#include "im/actor/model/droidkit/bser/BserValues.h"
#include "im/actor/model/droidkit/bser/BserWriter.h"
#include "im/actor/model/droidkit/bser/util/SparseArray.h"
#include "java/io/IOException.h"

@interface APServiceExChangedTitle () {
 @public
  NSString *title_;
}

@end

J2OBJC_FIELD_SETTER(APServiceExChangedTitle, title_, NSString *)

@implementation APServiceExChangedTitle

- (instancetype)initWithNSString:(NSString *)title {
  APServiceExChangedTitle_initWithNSString_(self, title);
  return self;
}

- (instancetype)init {
  APServiceExChangedTitle_init(self);
  return self;
}

- (jint)getHeader {
  return 5;
}

- (NSString *)getTitle {
  return self->title_;
}

- (void)parseWithBSBserValues:(BSBserValues *)values {
  self->title_ = [((BSBserValues *) nil_chk(values)) getStringWithInt:1];
  if ([values hasRemaining]) {
    [self setUnmappedObjectsWithImActorModelDroidkitBserUtilSparseArray:[values buildRemaining]];
  }
}

- (void)serializeWithBSBserWriter:(BSBserWriter *)writer {
  if (self->title_ == nil) {
    @throw new_JavaIoIOException_init();
  }
  [((BSBserWriter *) nil_chk(writer)) writeStringWithInt:1 withNSString:self->title_];
  if ([self getUnmappedObjects] != nil) {
    ImActorModelDroidkitBserUtilSparseArray *unmapped = [self getUnmappedObjects];
    for (jint i = 0; i < [((ImActorModelDroidkitBserUtilSparseArray *) nil_chk(unmapped)) size]; i++) {
      jint key = [unmapped keyAtWithInt:i];
      [writer writeUnmappedWithInt:key withId:[unmapped getWithInt:key]];
    }
  }
}

- (NSString *)description {
  NSString *res = @"struct ServiceExChangedTitle{";
  res = JreStrcat("$$", res, JreStrcat("$$", @"title=", self->title_));
  res = JreStrcat("$C", res, '}');
  return res;
}

@end

void APServiceExChangedTitle_initWithNSString_(APServiceExChangedTitle *self, NSString *title) {
  (void) APServiceEx_init(self);
  self->title_ = title;
}

APServiceExChangedTitle *new_APServiceExChangedTitle_initWithNSString_(NSString *title) {
  APServiceExChangedTitle *self = [APServiceExChangedTitle alloc];
  APServiceExChangedTitle_initWithNSString_(self, title);
  return self;
}

void APServiceExChangedTitle_init(APServiceExChangedTitle *self) {
  (void) APServiceEx_init(self);
}

APServiceExChangedTitle *new_APServiceExChangedTitle_init() {
  APServiceExChangedTitle *self = [APServiceExChangedTitle alloc];
  APServiceExChangedTitle_init(self);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(APServiceExChangedTitle)
