//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/ex3ndr/Develop/actor-platform/actor-apps/library/core/src/main/java/im/actor/model/api/AvatarImage.java
//


#include "IOSClass.h"
#include "J2ObjC_source.h"
#include "im/actor/model/api/AvatarImage.h"
#include "im/actor/model/api/FileLocation.h"
#include "im/actor/model/droidkit/bser/BserObject.h"
#include "im/actor/model/droidkit/bser/BserValues.h"
#include "im/actor/model/droidkit/bser/BserWriter.h"
#include "im/actor/model/droidkit/bser/util/SparseArray.h"
#include "java/io/IOException.h"

@interface APAvatarImage () {
 @public
  APFileLocation *fileLocation_;
  jint width_;
  jint height_;
  jint fileSize_;
}

@end

J2OBJC_FIELD_SETTER(APAvatarImage, fileLocation_, APFileLocation *)

@implementation APAvatarImage

- (instancetype)initWithAPFileLocation:(APFileLocation *)fileLocation
                               withInt:(jint)width
                               withInt:(jint)height
                               withInt:(jint)fileSize {
  APAvatarImage_initWithAPFileLocation_withInt_withInt_withInt_(self, fileLocation, width, height, fileSize);
  return self;
}

- (instancetype)init {
  APAvatarImage_init(self);
  return self;
}

- (APFileLocation *)getFileLocation {
  return self->fileLocation_;
}

- (jint)getWidth {
  return self->width_;
}

- (jint)getHeight {
  return self->height_;
}

- (jint)getFileSize {
  return self->fileSize_;
}

- (void)parseWithBSBserValues:(BSBserValues *)values {
  self->fileLocation_ = [((BSBserValues *) nil_chk(values)) getObjWithInt:1 withBSBserObject:new_APFileLocation_init()];
  self->width_ = [values getIntWithInt:2];
  self->height_ = [values getIntWithInt:3];
  self->fileSize_ = [values getIntWithInt:4];
  if ([values hasRemaining]) {
    [self setUnmappedObjectsWithImActorModelDroidkitBserUtilSparseArray:[values buildRemaining]];
  }
}

- (void)serializeWithBSBserWriter:(BSBserWriter *)writer {
  if (self->fileLocation_ == nil) {
    @throw new_JavaIoIOException_init();
  }
  [((BSBserWriter *) nil_chk(writer)) writeObjectWithInt:1 withBSBserObject:self->fileLocation_];
  [writer writeIntWithInt:2 withInt:self->width_];
  [writer writeIntWithInt:3 withInt:self->height_];
  [writer writeIntWithInt:4 withInt:self->fileSize_];
  if ([self getUnmappedObjects] != nil) {
    ImActorModelDroidkitBserUtilSparseArray *unmapped = [self getUnmappedObjects];
    for (jint i = 0; i < [((ImActorModelDroidkitBserUtilSparseArray *) nil_chk(unmapped)) size]; i++) {
      jint key = [unmapped keyAtWithInt:i];
      [writer writeUnmappedWithInt:key withId:[unmapped getWithInt:key]];
    }
  }
}

- (NSString *)description {
  NSString *res = @"struct AvatarImage{";
  res = JreStrcat("$$", res, JreStrcat("$@", @"fileLocation=", self->fileLocation_));
  res = JreStrcat("$$", res, JreStrcat("$I", @", width=", self->width_));
  res = JreStrcat("$$", res, JreStrcat("$I", @", height=", self->height_));
  res = JreStrcat("$$", res, JreStrcat("$I", @", fileSize=", self->fileSize_));
  res = JreStrcat("$C", res, '}');
  return res;
}

@end

void APAvatarImage_initWithAPFileLocation_withInt_withInt_withInt_(APAvatarImage *self, APFileLocation *fileLocation, jint width, jint height, jint fileSize) {
  (void) BSBserObject_init(self);
  self->fileLocation_ = fileLocation;
  self->width_ = width;
  self->height_ = height;
  self->fileSize_ = fileSize;
}

APAvatarImage *new_APAvatarImage_initWithAPFileLocation_withInt_withInt_withInt_(APFileLocation *fileLocation, jint width, jint height, jint fileSize) {
  APAvatarImage *self = [APAvatarImage alloc];
  APAvatarImage_initWithAPFileLocation_withInt_withInt_withInt_(self, fileLocation, width, height, fileSize);
  return self;
}

void APAvatarImage_init(APAvatarImage *self) {
  (void) BSBserObject_init(self);
}

APAvatarImage *new_APAvatarImage_init() {
  APAvatarImage *self = [APAvatarImage alloc];
  APAvatarImage_init(self);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(APAvatarImage)
