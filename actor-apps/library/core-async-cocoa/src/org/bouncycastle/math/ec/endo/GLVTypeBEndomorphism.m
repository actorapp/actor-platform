//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/ex3ndr/Develop/actor-platform/actor-apps/library/core-crypto/src/main/java/org/bouncycastle/math/ec/endo/GLVTypeBEndomorphism.java
//


#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "java/math/BigInteger.h"
#include "org/bouncycastle/math/ec/ECConstants.h"
#include "org/bouncycastle/math/ec/ECCurve.h"
#include "org/bouncycastle/math/ec/ECFieldElement.h"
#include "org/bouncycastle/math/ec/ECPointMap.h"
#include "org/bouncycastle/math/ec/ScaleXPointMap.h"
#include "org/bouncycastle/math/ec/endo/GLVTypeBEndomorphism.h"
#include "org/bouncycastle/math/ec/endo/GLVTypeBParameters.h"

@implementation OrgBouncycastleMathEcEndoGLVTypeBEndomorphism

- (instancetype)initWithOrgBouncycastleMathEcECCurve:(OrgBouncycastleMathEcECCurve *)curve
     withOrgBouncycastleMathEcEndoGLVTypeBParameters:(OrgBouncycastleMathEcEndoGLVTypeBParameters *)parameters {
  OrgBouncycastleMathEcEndoGLVTypeBEndomorphism_initWithOrgBouncycastleMathEcECCurve_withOrgBouncycastleMathEcEndoGLVTypeBParameters_(self, curve, parameters);
  return self;
}

- (IOSObjectArray *)decomposeScalarWithJavaMathBigInteger:(JavaMathBigInteger *)k {
  jint bits = [((OrgBouncycastleMathEcEndoGLVTypeBParameters *) nil_chk(parameters_)) getBits];
  JavaMathBigInteger *b1 = [self calculateBWithJavaMathBigInteger:k withJavaMathBigInteger:[parameters_ getG1] withInt:bits];
  JavaMathBigInteger *b2 = [self calculateBWithJavaMathBigInteger:k withJavaMathBigInteger:[parameters_ getG2] withInt:bits];
  IOSObjectArray *v1 = [parameters_ getV1], *v2 = [parameters_ getV2];
  JavaMathBigInteger *a = [((JavaMathBigInteger *) nil_chk(k)) subtractWithJavaMathBigInteger:[((JavaMathBigInteger *) nil_chk(([((JavaMathBigInteger *) nil_chk(b1)) multiplyWithJavaMathBigInteger:IOSObjectArray_Get(nil_chk(v1), 0)]))) addWithJavaMathBigInteger:[((JavaMathBigInteger *) nil_chk(b2)) multiplyWithJavaMathBigInteger:IOSObjectArray_Get(nil_chk(v2), 0)]]];
  JavaMathBigInteger *b = [((JavaMathBigInteger *) nil_chk([((JavaMathBigInteger *) nil_chk(([b1 multiplyWithJavaMathBigInteger:IOSObjectArray_Get(v1, 1)]))) addWithJavaMathBigInteger:[b2 multiplyWithJavaMathBigInteger:IOSObjectArray_Get(v2, 1)]])) negate];
  return [IOSObjectArray newArrayWithObjects:(id[]){ a, b } count:2 type:JavaMathBigInteger_class_()];
}

- (id<OrgBouncycastleMathEcECPointMap>)getPointMap {
  return pointMap_;
}

- (jboolean)hasEfficientPointMap {
  return YES;
}

- (JavaMathBigInteger *)calculateBWithJavaMathBigInteger:(JavaMathBigInteger *)k
                                  withJavaMathBigInteger:(JavaMathBigInteger *)g
                                                 withInt:(jint)t {
  jboolean negative = ([((JavaMathBigInteger *) nil_chk(g)) signum] < 0);
  JavaMathBigInteger *b = [((JavaMathBigInteger *) nil_chk(k)) multiplyWithJavaMathBigInteger:[g abs]];
  jboolean extra = [((JavaMathBigInteger *) nil_chk(b)) testBitWithInt:t - 1];
  b = [b shiftRightWithInt:t];
  if (extra) {
    b = [((JavaMathBigInteger *) nil_chk(b)) addWithJavaMathBigInteger:OrgBouncycastleMathEcECConstants_get_ONE_()];
  }
  return negative ? [((JavaMathBigInteger *) nil_chk(b)) negate] : b;
}

@end

void OrgBouncycastleMathEcEndoGLVTypeBEndomorphism_initWithOrgBouncycastleMathEcECCurve_withOrgBouncycastleMathEcEndoGLVTypeBParameters_(OrgBouncycastleMathEcEndoGLVTypeBEndomorphism *self, OrgBouncycastleMathEcECCurve *curve, OrgBouncycastleMathEcEndoGLVTypeBParameters *parameters) {
  (void) NSObject_init(self);
  self->curve_ = curve;
  self->parameters_ = parameters;
  self->pointMap_ = new_OrgBouncycastleMathEcScaleXPointMap_initWithOrgBouncycastleMathEcECFieldElement_([((OrgBouncycastleMathEcECCurve *) nil_chk(curve)) fromBigIntegerWithJavaMathBigInteger:[((OrgBouncycastleMathEcEndoGLVTypeBParameters *) nil_chk(parameters)) getBeta]]);
}

OrgBouncycastleMathEcEndoGLVTypeBEndomorphism *new_OrgBouncycastleMathEcEndoGLVTypeBEndomorphism_initWithOrgBouncycastleMathEcECCurve_withOrgBouncycastleMathEcEndoGLVTypeBParameters_(OrgBouncycastleMathEcECCurve *curve, OrgBouncycastleMathEcEndoGLVTypeBParameters *parameters) {
  OrgBouncycastleMathEcEndoGLVTypeBEndomorphism *self = [OrgBouncycastleMathEcEndoGLVTypeBEndomorphism alloc];
  OrgBouncycastleMathEcEndoGLVTypeBEndomorphism_initWithOrgBouncycastleMathEcECCurve_withOrgBouncycastleMathEcEndoGLVTypeBParameters_(self, curve, parameters);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgBouncycastleMathEcEndoGLVTypeBEndomorphism)
