//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/ex3ndr/Develop/actor-proprietary/actor-apps/core/src/main/java/im/actor/model/api/rpc/RequestEditGroupTopic.java
//


#include "IOSClass.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "im/actor/model/api/GroupOutPeer.h"
#include "im/actor/model/api/rpc/RequestEditGroupTopic.h"
#include "im/actor/model/droidkit/bser/Bser.h"
#include "im/actor/model/droidkit/bser/BserObject.h"
#include "im/actor/model/droidkit/bser/BserValues.h"
#include "im/actor/model/droidkit/bser/BserWriter.h"
#include "im/actor/model/network/parser/Request.h"
#include "java/io/IOException.h"

@interface APRequestEditGroupTopic () {
 @public
  APGroupOutPeer *groupPeer_;
  jlong rid_;
  NSString *topic_;
}

@end

J2OBJC_FIELD_SETTER(APRequestEditGroupTopic, groupPeer_, APGroupOutPeer *)
J2OBJC_FIELD_SETTER(APRequestEditGroupTopic, topic_, NSString *)

@implementation APRequestEditGroupTopic

+ (APRequestEditGroupTopic *)fromBytesWithByteArray:(IOSByteArray *)data {
  return APRequestEditGroupTopic_fromBytesWithByteArray_(data);
}

- (instancetype)initWithAPGroupOutPeer:(APGroupOutPeer *)groupPeer
                              withLong:(jlong)rid
                          withNSString:(NSString *)topic {
  APRequestEditGroupTopic_initWithAPGroupOutPeer_withLong_withNSString_(self, groupPeer, rid, topic);
  return self;
}

- (instancetype)init {
  APRequestEditGroupTopic_init(self);
  return self;
}

- (APGroupOutPeer *)getGroupPeer {
  return self->groupPeer_;
}

- (jlong)getRid {
  return self->rid_;
}

- (NSString *)getTopic {
  return self->topic_;
}

- (void)parseWithBSBserValues:(BSBserValues *)values {
  self->groupPeer_ = [((BSBserValues *) nil_chk(values)) getObjWithInt:1 withBSBserObject:new_APGroupOutPeer_init()];
  self->rid_ = [values getLongWithInt:2];
  self->topic_ = [values optStringWithInt:3];
}

- (void)serializeWithBSBserWriter:(BSBserWriter *)writer {
  if (self->groupPeer_ == nil) {
    @throw new_JavaIoIOException_init();
  }
  [((BSBserWriter *) nil_chk(writer)) writeObjectWithInt:1 withBSBserObject:self->groupPeer_];
  [writer writeLongWithInt:2 withLong:self->rid_];
  if (self->topic_ != nil) {
    [writer writeStringWithInt:3 withNSString:self->topic_];
  }
}

- (NSString *)description {
  NSString *res = @"rpc EditGroupTopic{";
  res = JreStrcat("$$", res, JreStrcat("$@", @"groupPeer=", self->groupPeer_));
  res = JreStrcat("$$", res, JreStrcat("$J", @", rid=", self->rid_));
  res = JreStrcat("$$", res, JreStrcat("$$", @", topic=", self->topic_));
  res = JreStrcat("$C", res, '}');
  return res;
}

- (jint)getHeaderKey {
  return APRequestEditGroupTopic_HEADER;
}

@end

APRequestEditGroupTopic *APRequestEditGroupTopic_fromBytesWithByteArray_(IOSByteArray *data) {
  APRequestEditGroupTopic_initialize();
  return ((APRequestEditGroupTopic *) BSBser_parseWithBSBserObject_withByteArray_(new_APRequestEditGroupTopic_init(), data));
}

void APRequestEditGroupTopic_initWithAPGroupOutPeer_withLong_withNSString_(APRequestEditGroupTopic *self, APGroupOutPeer *groupPeer, jlong rid, NSString *topic) {
  (void) APRequest_init(self);
  self->groupPeer_ = groupPeer;
  self->rid_ = rid;
  self->topic_ = topic;
}

APRequestEditGroupTopic *new_APRequestEditGroupTopic_initWithAPGroupOutPeer_withLong_withNSString_(APGroupOutPeer *groupPeer, jlong rid, NSString *topic) {
  APRequestEditGroupTopic *self = [APRequestEditGroupTopic alloc];
  APRequestEditGroupTopic_initWithAPGroupOutPeer_withLong_withNSString_(self, groupPeer, rid, topic);
  return self;
}

void APRequestEditGroupTopic_init(APRequestEditGroupTopic *self) {
  (void) APRequest_init(self);
}

APRequestEditGroupTopic *new_APRequestEditGroupTopic_init() {
  APRequestEditGroupTopic *self = [APRequestEditGroupTopic alloc];
  APRequestEditGroupTopic_init(self);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(APRequestEditGroupTopic)
