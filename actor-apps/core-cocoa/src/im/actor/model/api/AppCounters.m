//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/ex3ndr/Develop/actor-proprietary/actor-apps/core/src/main/java/im/actor/model/api/AppCounters.java
//


#include "IOSClass.h"
#include "J2ObjC_source.h"
#include "im/actor/model/api/AppCounters.h"
#include "im/actor/model/droidkit/bser/BserObject.h"
#include "im/actor/model/droidkit/bser/BserValues.h"
#include "im/actor/model/droidkit/bser/BserWriter.h"
#include "im/actor/model/droidkit/bser/util/SparseArray.h"
#include "java/io/IOException.h"
#include "java/lang/Integer.h"

@interface APAppCounters () {
 @public
  JavaLangInteger *globalCounter_;
}

@end

J2OBJC_FIELD_SETTER(APAppCounters, globalCounter_, JavaLangInteger *)

@implementation APAppCounters

- (instancetype)initWithJavaLangInteger:(JavaLangInteger *)globalCounter {
  APAppCounters_initWithJavaLangInteger_(self, globalCounter);
  return self;
}

- (instancetype)init {
  APAppCounters_init(self);
  return self;
}

- (JavaLangInteger *)getGlobalCounter {
  return self->globalCounter_;
}

- (void)parseWithBSBserValues:(BSBserValues *)values {
  self->globalCounter_ = JavaLangInteger_valueOfWithInt_([((BSBserValues *) nil_chk(values)) optIntWithInt:1]);
  if ([values hasRemaining]) {
    [self setUnmappedObjectsWithImActorModelDroidkitBserUtilSparseArray:[values buildRemaining]];
  }
}

- (void)serializeWithBSBserWriter:(BSBserWriter *)writer {
  if (self->globalCounter_ != nil) {
    [((BSBserWriter *) nil_chk(writer)) writeIntWithInt:1 withInt:[self->globalCounter_ intValue]];
  }
  if ([self getUnmappedObjects] != nil) {
    ImActorModelDroidkitBserUtilSparseArray *unmapped = [self getUnmappedObjects];
    for (jint i = 0; i < [((ImActorModelDroidkitBserUtilSparseArray *) nil_chk(unmapped)) size]; i++) {
      jint key = [unmapped keyAtWithInt:i];
      [((BSBserWriter *) nil_chk(writer)) writeUnmappedWithInt:key withId:[unmapped getWithInt:key]];
    }
  }
}

- (NSString *)description {
  NSString *res = @"struct AppCounters{";
  res = JreStrcat("$$", res, JreStrcat("$@", @"globalCounter=", self->globalCounter_));
  res = JreStrcat("$C", res, '}');
  return res;
}

@end

void APAppCounters_initWithJavaLangInteger_(APAppCounters *self, JavaLangInteger *globalCounter) {
  (void) BSBserObject_init(self);
  self->globalCounter_ = globalCounter;
}

APAppCounters *new_APAppCounters_initWithJavaLangInteger_(JavaLangInteger *globalCounter) {
  APAppCounters *self = [APAppCounters alloc];
  APAppCounters_initWithJavaLangInteger_(self, globalCounter);
  return self;
}

void APAppCounters_init(APAppCounters *self) {
  (void) BSBserObject_init(self);
}

APAppCounters *new_APAppCounters_init() {
  APAppCounters *self = [APAppCounters alloc];
  APAppCounters_init(self);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(APAppCounters)
