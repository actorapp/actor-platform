//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/ex3ndr/Develop/actor-proprietary/actor-apps/core/src/main/java/im/actor/model/modules/updates/MessagesProcessor.java
//


#include "J2ObjC_source.h"
#include "im/actor/model/api/AppCounters.h"
#include "im/actor/model/api/Dialog.h"
#include "im/actor/model/api/HistoryMessage.h"
#include "im/actor/model/api/Message.h"
#include "im/actor/model/api/MessageState.h"
#include "im/actor/model/api/Peer.h"
#include "im/actor/model/api/rpc/ResponseLoadDialogs.h"
#include "im/actor/model/api/rpc/ResponseLoadHistory.h"
#include "im/actor/model/droidkit/actors/ActorRef.h"
#include "im/actor/model/entity/Message.h"
#include "im/actor/model/entity/MessageState.h"
#include "im/actor/model/entity/Peer.h"
#include "im/actor/model/entity/content/AbsContent.h"
#include "im/actor/model/entity/content/ServiceUserRegistered.h"
#include "im/actor/model/modules/AppStateModule.h"
#include "im/actor/model/modules/BaseModule.h"
#include "im/actor/model/modules/Modules.h"
#include "im/actor/model/modules/messages/ConversationActor.h"
#include "im/actor/model/modules/messages/ConversationHistoryActor.h"
#include "im/actor/model/modules/messages/CursorReceiverActor.h"
#include "im/actor/model/modules/messages/DialogsActor.h"
#include "im/actor/model/modules/messages/DialogsHistoryActor.h"
#include "im/actor/model/modules/messages/OwnReadActor.h"
#include "im/actor/model/modules/messages/SenderActor.h"
#include "im/actor/model/modules/messages/entity/DialogHistory.h"
#include "im/actor/model/modules/messages/entity/EntityConverter.h"
#include "im/actor/model/modules/updates/MessagesProcessor.h"
#include "java/io/IOException.h"
#include "java/lang/Long.h"
#include "java/lang/Math.h"
#include "java/util/ArrayList.h"
#include "java/util/List.h"

@implementation ImActorModelModulesUpdatesMessagesProcessor

- (instancetype)initWithImActorModelModulesModules:(ImActorModelModulesModules *)messenger {
  ImActorModelModulesUpdatesMessagesProcessor_initWithImActorModelModulesModules_(self, messenger);
  return self;
}

- (void)onMessageWithAPPeer:(APPeer *)_peer
                    withInt:(jint)senderUid
                   withLong:(jlong)date
                   withLong:(jlong)rid
              withAPMessage:(APMessage *)content {
  AMPeer *peer = ImActorModelModulesMessagesEntityEntityConverter_convertWithAPPeer_(_peer);
  AMAbsContent *msgContent;
  @try {
    msgContent = AMAbsContent_fromMessageWithAPMessage_(content);
  }
  @catch (JavaIoIOException *e) {
    [((JavaIoIOException *) nil_chk(e)) printStackTrace];
    return;
  }
  jboolean isOut = [self myUid] == senderUid;
  AMMessage *message = new_AMMessage_initWithLong_withLong_withLong_withInt_withAMMessageStateEnum_withAMAbsContent_(rid, date, date, senderUid, isOut ? AMMessageStateEnum_get_SENT() : AMMessageStateEnum_get_UNKNOWN(), msgContent);
  [((DKActorRef *) nil_chk([self conversationActorWithAMPeer:peer])) sendWithId:message];
  if (!isOut) {
    [((DKActorRef *) nil_chk([self plainReceiveActor])) sendWithId:new_ImActorModelModulesMessagesCursorReceiverActor_MarkReceived_initWithAMPeer_withLong_(peer, date)];
    [((DKActorRef *) nil_chk([self ownReadActor])) sendWithId:new_ImActorModelModulesMessagesOwnReadActor_InMessage_initWithAMPeer_withAMMessage_(peer, message)];
  }
}

- (void)onUserRegisteredWithLong:(jlong)rid
                         withInt:(jint)uid
                        withLong:(jlong)date {
  AMMessage *message = new_AMMessage_initWithLong_withLong_withLong_withInt_withAMMessageStateEnum_withAMAbsContent_(rid, date, date, uid, AMMessageStateEnum_get_UNKNOWN(), AMServiceUserRegistered_create());
  [((DKActorRef *) nil_chk([self conversationActorWithAMPeer:AMPeer_userWithInt_(uid)])) sendWithId:message];
}

- (void)onMessageReadWithAPPeer:(APPeer *)_peer
                       withLong:(jlong)startDate
                       withLong:(jlong)readDate {
  AMPeer *peer = ImActorModelModulesMessagesEntityEntityConverter_convertWithAPPeer_(_peer);
  [((DKActorRef *) nil_chk([self conversationActorWithAMPeer:peer])) sendWithId:new_ImActorModelModulesMessagesConversationActor_MessageRead_initWithLong_(startDate)];
}

- (void)onMessageReceivedWithAPPeer:(APPeer *)_peer
                           withLong:(jlong)startDate
                           withLong:(jlong)receivedDate {
  AMPeer *peer = ImActorModelModulesMessagesEntityEntityConverter_convertWithAPPeer_(_peer);
  [((DKActorRef *) nil_chk([self conversationActorWithAMPeer:peer])) sendWithId:new_ImActorModelModulesMessagesConversationActor_MessageReceived_initWithLong_(startDate)];
}

- (void)onMessageReadByMeWithAPPeer:(APPeer *)_peer
                           withLong:(jlong)startDate {
  AMPeer *peer = ImActorModelModulesMessagesEntityEntityConverter_convertWithAPPeer_(_peer);
  [((DKActorRef *) nil_chk([self ownReadActor])) sendWithId:new_ImActorModelModulesMessagesOwnReadActor_MessageReadByMe_initWithAMPeer_withLong_(peer, startDate)];
}

- (void)onMessageSentWithAPPeer:(APPeer *)_peer
                       withLong:(jlong)rid
                       withLong:(jlong)date {
  AMPeer *peer = ImActorModelModulesMessagesEntityEntityConverter_convertWithAPPeer_(_peer);
  [((DKActorRef *) nil_chk([self conversationActorWithAMPeer:peer])) sendWithId:new_ImActorModelModulesMessagesConversationActor_MessageSent_initWithLong_withLong_(rid, date)];
  [((DKActorRef *) nil_chk([self sendActor])) sendWithId:new_ImActorModelModulesMessagesSenderActor_MessageSent_initWithAMPeer_withLong_(peer, rid)];
}

- (void)onMessageDateChangedWithAPPeer:(APPeer *)_peer
                              withLong:(jlong)rid
                              withLong:(jlong)ndate {
  AMPeer *peer = ImActorModelModulesMessagesEntityEntityConverter_convertWithAPPeer_(_peer);
  [((DKActorRef *) nil_chk([self conversationActorWithAMPeer:peer])) sendWithId:new_ImActorModelModulesMessagesConversationActor_MessageDateChange_initWithLong_withLong_(rid, ndate)];
}

- (void)onMessageContentChangedWithAPPeer:(APPeer *)_peer
                                 withLong:(jlong)rid
                            withAPMessage:(APMessage *)message {
  AMPeer *peer = ImActorModelModulesMessagesEntityEntityConverter_convertWithAPPeer_(_peer);
  AMAbsContent *content;
  @try {
    content = AMAbsContent_fromMessageWithAPMessage_(message);
  }
  @catch (JavaIoIOException *e) {
    [((JavaIoIOException *) nil_chk(e)) printStackTrace];
    return;
  }
  [((DKActorRef *) nil_chk([self conversationActorWithAMPeer:peer])) sendWithId:new_ImActorModelModulesMessagesConversationActor_MessageContentUpdated_initWithLong_withAMAbsContent_(rid, content)];
}

- (void)onMessageDeleteWithAPPeer:(APPeer *)_peer
                 withJavaUtilList:(id<JavaUtilList>)rids {
  AMPeer *peer = ImActorModelModulesMessagesEntityEntityConverter_convertWithAPPeer_(_peer);
  [((DKActorRef *) nil_chk([self conversationActorWithAMPeer:peer])) sendWithId:new_ImActorModelModulesMessagesConversationActor_MessagesDeleted_initWithJavaUtilList_(rids)];
}

- (void)onChatClearWithAPPeer:(APPeer *)_peer {
  AMPeer *peer = ImActorModelModulesMessagesEntityEntityConverter_convertWithAPPeer_(_peer);
  [((DKActorRef *) nil_chk([self conversationActorWithAMPeer:peer])) sendWithId:new_ImActorModelModulesMessagesConversationActor_ClearConversation_init()];
}

- (void)onChatDeleteWithAPPeer:(APPeer *)_peer {
  AMPeer *peer = ImActorModelModulesMessagesEntityEntityConverter_convertWithAPPeer_(_peer);
  [((DKActorRef *) nil_chk([self conversationActorWithAMPeer:peer])) sendWithId:new_ImActorModelModulesMessagesConversationActor_DeleteConversation_init()];
}

- (void)onDialogsLoadedWithAPResponseLoadDialogs:(APResponseLoadDialogs *)dialogsResponse {
  JavaUtilArrayList *dialogs = new_JavaUtilArrayList_init();
  jlong maxLoadedDate = JavaLangLong_MAX_VALUE;
  for (APDialog * __strong dialog in nil_chk([((APResponseLoadDialogs *) nil_chk(dialogsResponse)) getDialogs])) {
    maxLoadedDate = JavaLangMath_minWithLong_withLong_([((APDialog *) nil_chk(dialog)) getSortDate], maxLoadedDate);
    AMPeer *peer = ImActorModelModulesMessagesEntityEntityConverter_convertWithAPPeer_([dialog getPeer]);
    AMAbsContent *msgContent = nil;
    @try {
      msgContent = AMAbsContent_fromMessageWithAPMessage_([dialog getMessage]);
    }
    @catch (JavaIoIOException *e) {
      [((JavaIoIOException *) nil_chk(e)) printStackTrace];
    }
    if (msgContent == nil) {
      continue;
    }
    [dialogs addWithId:new_ImActorModelModulesMessagesEntityDialogHistory_initWithAMPeer_withInt_withLong_withLong_withLong_withInt_withAMAbsContent_withAMMessageStateEnum_(peer, [dialog getUnreadCount], [dialog getSortDate], [dialog getRid], [dialog getDate], [dialog getSenderUid], msgContent, ImActorModelModulesMessagesEntityEntityConverter_convertWithAPMessageStateEnum_([dialog getState]))];
  }
  if ([dialogs size] > 0) {
    [((DKActorRef *) nil_chk([self dialogsActor])) sendWithId:new_ImActorModelModulesMessagesDialogsActor_HistoryLoaded_initWithJavaUtilList_(dialogs)];
  }
  else {
    [((ImActorModelModulesAppStateModule *) nil_chk([((ImActorModelModulesModules *) nil_chk([self modules])) getAppStateModule])) onDialogsLoaded];
  }
  [((DKActorRef *) nil_chk([self dialogsHistoryActor])) sendWithId:new_ImActorModelModulesMessagesDialogsHistoryActor_LoadedMore_initWithInt_withLong_([((id<JavaUtilList>) nil_chk([dialogsResponse getDialogs])) size], maxLoadedDate)];
}

- (void)onMessagesLoadedWithAMPeer:(AMPeer *)peer
         withAPResponseLoadHistory:(APResponseLoadHistory *)historyResponse {
  JavaUtilArrayList *messages = new_JavaUtilArrayList_init();
  jlong maxLoadedDate = JavaLangLong_MAX_VALUE;
  for (APHistoryMessage * __strong historyMessage in nil_chk([((APResponseLoadHistory *) nil_chk(historyResponse)) getHistory])) {
    maxLoadedDate = JavaLangMath_minWithLong_withLong_([((APHistoryMessage *) nil_chk(historyMessage)) getDate], maxLoadedDate);
    AMAbsContent *content = nil;
    @try {
      content = AMAbsContent_fromMessageWithAPMessage_([historyMessage getMessage]);
    }
    @catch (JavaIoIOException *e) {
      [((JavaIoIOException *) nil_chk(e)) printStackTrace];
    }
    if (content == nil) {
      continue;
    }
    AMMessageStateEnum *state = ImActorModelModulesMessagesEntityEntityConverter_convertWithAPMessageStateEnum_([historyMessage getState]);
    [messages addWithId:new_AMMessage_initWithLong_withLong_withLong_withInt_withAMMessageStateEnum_withAMAbsContent_([historyMessage getRid], [historyMessage getDate], [historyMessage getDate], [historyMessage getSenderUid], state, content)];
  }
  if ([messages size] > 0) {
    [((DKActorRef *) nil_chk([self conversationActorWithAMPeer:peer])) sendWithId:new_ImActorModelModulesMessagesConversationActor_HistoryLoaded_initWithJavaUtilList_(messages)];
  }
  [((DKActorRef *) nil_chk([self conversationHistoryActorWithAMPeer:peer])) sendWithId:new_ImActorModelModulesMessagesConversationHistoryActor_LoadedMore_initWithInt_withLong_([((id<JavaUtilList>) nil_chk([historyResponse getHistory])) size], maxLoadedDate)];
}

- (void)onCountersChangedWithAPAppCounters:(APAppCounters *)counters {
  [((ImActorModelModulesAppStateModule *) nil_chk([((ImActorModelModulesModules *) nil_chk([self modules])) getAppStateModule])) onCountersChangedWithAPAppCounters:counters];
}

@end

void ImActorModelModulesUpdatesMessagesProcessor_initWithImActorModelModulesModules_(ImActorModelModulesUpdatesMessagesProcessor *self, ImActorModelModulesModules *messenger) {
  (void) ImActorModelModulesBaseModule_initWithImActorModelModulesModules_(self, messenger);
}

ImActorModelModulesUpdatesMessagesProcessor *new_ImActorModelModulesUpdatesMessagesProcessor_initWithImActorModelModulesModules_(ImActorModelModulesModules *messenger) {
  ImActorModelModulesUpdatesMessagesProcessor *self = [ImActorModelModulesUpdatesMessagesProcessor alloc];
  ImActorModelModulesUpdatesMessagesProcessor_initWithImActorModelModulesModules_(self, messenger);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ImActorModelModulesUpdatesMessagesProcessor)
