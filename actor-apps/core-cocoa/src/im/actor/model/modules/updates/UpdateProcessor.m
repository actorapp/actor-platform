//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/ex3ndr/Develop/actor-proprietary/actor-apps/core/src/main/java/im/actor/model/modules/updates/UpdateProcessor.java
//


#include "IOSObjectArray.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "im/actor/model/api/AppCounters.h"
#include "im/actor/model/api/Avatar.h"
#include "im/actor/model/api/Group.h"
#include "im/actor/model/api/Message.h"
#include "im/actor/model/api/Peer.h"
#include "im/actor/model/api/PeerType.h"
#include "im/actor/model/api/TypingType.h"
#include "im/actor/model/api/User.h"
#include "im/actor/model/api/rpc/ResponseAuth.h"
#include "im/actor/model/api/rpc/ResponseGetContacts.h"
#include "im/actor/model/api/rpc/ResponseLoadDialogs.h"
#include "im/actor/model/api/rpc/ResponseLoadHistory.h"
#include "im/actor/model/api/updates/UpdateChatClear.h"
#include "im/actor/model/api/updates/UpdateChatDelete.h"
#include "im/actor/model/api/updates/UpdateContactRegistered.h"
#include "im/actor/model/api/updates/UpdateContactsAdded.h"
#include "im/actor/model/api/updates/UpdateContactsRemoved.h"
#include "im/actor/model/api/updates/UpdateCountersChanged.h"
#include "im/actor/model/api/updates/UpdateGroupAvatarChanged.h"
#include "im/actor/model/api/updates/UpdateGroupInvite.h"
#include "im/actor/model/api/updates/UpdateGroupMembersUpdate.h"
#include "im/actor/model/api/updates/UpdateGroupOnline.h"
#include "im/actor/model/api/updates/UpdateGroupTitleChanged.h"
#include "im/actor/model/api/updates/UpdateGroupUserInvited.h"
#include "im/actor/model/api/updates/UpdateGroupUserKick.h"
#include "im/actor/model/api/updates/UpdateGroupUserLeave.h"
#include "im/actor/model/api/updates/UpdateMessage.h"
#include "im/actor/model/api/updates/UpdateMessageContentChanged.h"
#include "im/actor/model/api/updates/UpdateMessageDelete.h"
#include "im/actor/model/api/updates/UpdateMessageRead.h"
#include "im/actor/model/api/updates/UpdateMessageReadByMe.h"
#include "im/actor/model/api/updates/UpdateMessageReceived.h"
#include "im/actor/model/api/updates/UpdateMessageSent.h"
#include "im/actor/model/api/updates/UpdateParameterChanged.h"
#include "im/actor/model/api/updates/UpdateTyping.h"
#include "im/actor/model/api/updates/UpdateUserAboutChanged.h"
#include "im/actor/model/api/updates/UpdateUserAvatarChanged.h"
#include "im/actor/model/api/updates/UpdateUserLastSeen.h"
#include "im/actor/model/api/updates/UpdateUserLocalNameChanged.h"
#include "im/actor/model/api/updates/UpdateUserNameChanged.h"
#include "im/actor/model/api/updates/UpdateUserNickChanged.h"
#include "im/actor/model/api/updates/UpdateUserOffline.h"
#include "im/actor/model/api/updates/UpdateUserOnline.h"
#include "im/actor/model/concurrency/CommandCallback.h"
#include "im/actor/model/droidkit/actors/ActorRef.h"
#include "im/actor/model/entity/Peer.h"
#include "im/actor/model/modules/BaseModule.h"
#include "im/actor/model/modules/Contacts.h"
#include "im/actor/model/modules/Modules.h"
#include "im/actor/model/modules/Notifications.h"
#include "im/actor/model/modules/Users.h"
#include "im/actor/model/modules/contacts/ContactsSyncActor.h"
#include "im/actor/model/modules/updates/ContactsProcessor.h"
#include "im/actor/model/modules/updates/GroupsProcessor.h"
#include "im/actor/model/modules/updates/MessagesProcessor.h"
#include "im/actor/model/modules/updates/PresenceProcessor.h"
#include "im/actor/model/modules/updates/SettingsProcessor.h"
#include "im/actor/model/modules/updates/TypingProcessor.h"
#include "im/actor/model/modules/updates/UpdateProcessor.h"
#include "im/actor/model/modules/updates/UsersProcessor.h"
#include "im/actor/model/modules/updates/internal/ContactsLoaded.h"
#include "im/actor/model/modules/updates/internal/DialogHistoryLoaded.h"
#include "im/actor/model/modules/updates/internal/GroupCreated.h"
#include "im/actor/model/modules/updates/internal/InternalUpdate.h"
#include "im/actor/model/modules/updates/internal/LoggedIn.h"
#include "im/actor/model/modules/updates/internal/MessagesHistoryLoaded.h"
#include "im/actor/model/modules/updates/internal/UsersFounded.h"
#include "im/actor/model/mvvm/MVVMCollection.h"
#include "im/actor/model/network/parser/Update.h"
#include "im/actor/model/viewmodel/UserVM.h"
#include "java/lang/Integer.h"
#include "java/lang/Runnable.h"
#include "java/util/ArrayList.h"
#include "java/util/HashSet.h"
#include "java/util/List.h"

@interface ImActorModelModulesUpdatesUpdateProcessor () {
 @public
  ImActorModelModulesUpdatesSettingsProcessor *settingsProcessor_;
  ImActorModelModulesUpdatesUsersProcessor *usersProcessor_;
  ImActorModelModulesUpdatesMessagesProcessor *messagesProcessor_;
  ImActorModelModulesUpdatesGroupsProcessor *groupsProcessor_;
  ImActorModelModulesUpdatesPresenceProcessor *presenceProcessor_;
  ImActorModelModulesUpdatesTypingProcessor *typingProcessor_;
  ImActorModelModulesUpdatesContactsProcessor *contactsProcessor_;
}

@end

J2OBJC_FIELD_SETTER(ImActorModelModulesUpdatesUpdateProcessor, settingsProcessor_, ImActorModelModulesUpdatesSettingsProcessor *)
J2OBJC_FIELD_SETTER(ImActorModelModulesUpdatesUpdateProcessor, usersProcessor_, ImActorModelModulesUpdatesUsersProcessor *)
J2OBJC_FIELD_SETTER(ImActorModelModulesUpdatesUpdateProcessor, messagesProcessor_, ImActorModelModulesUpdatesMessagesProcessor *)
J2OBJC_FIELD_SETTER(ImActorModelModulesUpdatesUpdateProcessor, groupsProcessor_, ImActorModelModulesUpdatesGroupsProcessor *)
J2OBJC_FIELD_SETTER(ImActorModelModulesUpdatesUpdateProcessor, presenceProcessor_, ImActorModelModulesUpdatesPresenceProcessor *)
J2OBJC_FIELD_SETTER(ImActorModelModulesUpdatesUpdateProcessor, typingProcessor_, ImActorModelModulesUpdatesTypingProcessor *)
J2OBJC_FIELD_SETTER(ImActorModelModulesUpdatesUpdateProcessor, contactsProcessor_, ImActorModelModulesUpdatesContactsProcessor *)

static NSString *ImActorModelModulesUpdatesUpdateProcessor_TAG_ = @"Updates";
J2OBJC_STATIC_FIELD_GETTER(ImActorModelModulesUpdatesUpdateProcessor, TAG_, NSString *)

@interface ImActorModelModulesUpdatesUpdateProcessor_$1 : NSObject < JavaLangRunnable > {
 @public
  ImActorModelModulesUpdatesInternalUsersFounded *val$founded_;
  JavaUtilArrayList *val$users_;
}

- (void)run;

- (instancetype)initWithImActorModelModulesUpdatesInternalUsersFounded:(ImActorModelModulesUpdatesInternalUsersFounded *)capture$0
                                                 withJavaUtilArrayList:(JavaUtilArrayList *)capture$1;

@end

J2OBJC_EMPTY_STATIC_INIT(ImActorModelModulesUpdatesUpdateProcessor_$1)

J2OBJC_FIELD_SETTER(ImActorModelModulesUpdatesUpdateProcessor_$1, val$founded_, ImActorModelModulesUpdatesInternalUsersFounded *)
J2OBJC_FIELD_SETTER(ImActorModelModulesUpdatesUpdateProcessor_$1, val$users_, JavaUtilArrayList *)

__attribute__((unused)) static void ImActorModelModulesUpdatesUpdateProcessor_$1_initWithImActorModelModulesUpdatesInternalUsersFounded_withJavaUtilArrayList_(ImActorModelModulesUpdatesUpdateProcessor_$1 *self, ImActorModelModulesUpdatesInternalUsersFounded *capture$0, JavaUtilArrayList *capture$1);

__attribute__((unused)) static ImActorModelModulesUpdatesUpdateProcessor_$1 *new_ImActorModelModulesUpdatesUpdateProcessor_$1_initWithImActorModelModulesUpdatesInternalUsersFounded_withJavaUtilArrayList_(ImActorModelModulesUpdatesInternalUsersFounded *capture$0, JavaUtilArrayList *capture$1) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(ImActorModelModulesUpdatesUpdateProcessor_$1)

@interface ImActorModelModulesUpdatesUpdateProcessor_$2 : NSObject < JavaLangRunnable > {
 @public
  ImActorModelModulesUpdatesInternalGroupCreated *val$created_;
}

- (void)run;

- (instancetype)initWithImActorModelModulesUpdatesInternalGroupCreated:(ImActorModelModulesUpdatesInternalGroupCreated *)capture$0;

@end

J2OBJC_EMPTY_STATIC_INIT(ImActorModelModulesUpdatesUpdateProcessor_$2)

J2OBJC_FIELD_SETTER(ImActorModelModulesUpdatesUpdateProcessor_$2, val$created_, ImActorModelModulesUpdatesInternalGroupCreated *)

__attribute__((unused)) static void ImActorModelModulesUpdatesUpdateProcessor_$2_initWithImActorModelModulesUpdatesInternalGroupCreated_(ImActorModelModulesUpdatesUpdateProcessor_$2 *self, ImActorModelModulesUpdatesInternalGroupCreated *capture$0);

__attribute__((unused)) static ImActorModelModulesUpdatesUpdateProcessor_$2 *new_ImActorModelModulesUpdatesUpdateProcessor_$2_initWithImActorModelModulesUpdatesInternalGroupCreated_(ImActorModelModulesUpdatesInternalGroupCreated *capture$0) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(ImActorModelModulesUpdatesUpdateProcessor_$2)

@implementation ImActorModelModulesUpdatesUpdateProcessor

- (instancetype)initWithImActorModelModulesModules:(ImActorModelModulesModules *)modules {
  ImActorModelModulesUpdatesUpdateProcessor_initWithImActorModelModulesModules_(self, modules);
  return self;
}

- (void)applyRelatedWithJavaUtilList:(id<JavaUtilList>)users
                    withJavaUtilList:(id<JavaUtilList>)groups
                         withBoolean:(jboolean)force {
  [((ImActorModelModulesUpdatesUsersProcessor *) nil_chk(usersProcessor_)) applyUsersWithJavaUtilCollection:users withBoolean:force];
  [((ImActorModelModulesUpdatesGroupsProcessor *) nil_chk(groupsProcessor_)) applyGroupsWithJavaUtilCollection:groups withBoolean:force];
}

- (void)processInternalUpdateWithImActorModelModulesUpdatesInternalInternalUpdate:(ImActorModelModulesUpdatesInternalInternalUpdate *)update {
  if ([update isKindOfClass:[ImActorModelModulesUpdatesInternalDialogHistoryLoaded class]]) {
    APResponseLoadDialogs *dialogs = [((ImActorModelModulesUpdatesInternalDialogHistoryLoaded *) nil_chk(((ImActorModelModulesUpdatesInternalDialogHistoryLoaded *) check_class_cast(update, [ImActorModelModulesUpdatesInternalDialogHistoryLoaded class])))) getDialogs];
    [self applyRelatedWithJavaUtilList:[((APResponseLoadDialogs *) nil_chk(dialogs)) getUsers] withJavaUtilList:[dialogs getGroups] withBoolean:NO];
    [((ImActorModelModulesUpdatesMessagesProcessor *) nil_chk(messagesProcessor_)) onDialogsLoadedWithAPResponseLoadDialogs:dialogs];
  }
  else if ([update isKindOfClass:[ImActorModelModulesUpdatesInternalMessagesHistoryLoaded class]]) {
    ImActorModelModulesUpdatesInternalMessagesHistoryLoaded *historyLoaded = (ImActorModelModulesUpdatesInternalMessagesHistoryLoaded *) check_class_cast(update, [ImActorModelModulesUpdatesInternalMessagesHistoryLoaded class]);
    [self applyRelatedWithJavaUtilList:[((APResponseLoadHistory *) nil_chk([((ImActorModelModulesUpdatesInternalMessagesHistoryLoaded *) nil_chk(historyLoaded)) getLoadHistory])) getUsers] withJavaUtilList:new_JavaUtilArrayList_init() withBoolean:NO];
    [((ImActorModelModulesUpdatesMessagesProcessor *) nil_chk(messagesProcessor_)) onMessagesLoadedWithAMPeer:[historyLoaded getPeer] withAPResponseLoadHistory:[historyLoaded getLoadHistory]];
  }
  else if ([update isKindOfClass:[ImActorModelModulesUpdatesInternalLoggedIn class]]) {
    JavaUtilArrayList *users = new_JavaUtilArrayList_init();
    [users addWithId:[((APResponseAuth *) nil_chk([((ImActorModelModulesUpdatesInternalLoggedIn *) nil_chk(((ImActorModelModulesUpdatesInternalLoggedIn *) check_class_cast(update, [ImActorModelModulesUpdatesInternalLoggedIn class])))) getAuth])) getUser]];
    [self applyRelatedWithJavaUtilList:users withJavaUtilList:new_JavaUtilArrayList_init() withBoolean:YES];
    [self runOnUiThreadWithJavaLangRunnable:[((ImActorModelModulesUpdatesInternalLoggedIn *) nil_chk(((ImActorModelModulesUpdatesInternalLoggedIn *) check_class_cast(update, [ImActorModelModulesUpdatesInternalLoggedIn class])))) getRunnable]];
  }
  else if ([update isKindOfClass:[ImActorModelModulesUpdatesInternalContactsLoaded class]]) {
    ImActorModelModulesUpdatesInternalContactsLoaded *contactsLoaded = (ImActorModelModulesUpdatesInternalContactsLoaded *) check_class_cast(update, [ImActorModelModulesUpdatesInternalContactsLoaded class]);
    [self applyRelatedWithJavaUtilList:[((APResponseGetContacts *) nil_chk([((ImActorModelModulesUpdatesInternalContactsLoaded *) nil_chk(contactsLoaded)) getContacts])) getUsers] withJavaUtilList:new_JavaUtilArrayList_init() withBoolean:NO];
    [((DKActorRef *) nil_chk([((ImActorModelModulesContacts *) nil_chk([((ImActorModelModulesModules *) nil_chk([self modules])) getContactsModule])) getContactSyncActor])) sendWithId:new_ImActorModelModulesContactsContactsSyncActor_ContactsLoaded_initWithAPResponseGetContacts_([contactsLoaded getContacts])];
  }
  else if ([update isKindOfClass:[ImActorModelModulesUpdatesInternalUsersFounded class]]) {
    ImActorModelModulesUpdatesInternalUsersFounded *founded = (ImActorModelModulesUpdatesInternalUsersFounded *) check_class_cast(update, [ImActorModelModulesUpdatesInternalUsersFounded class]);
    [self applyRelatedWithJavaUtilList:[((ImActorModelModulesUpdatesInternalUsersFounded *) nil_chk(((ImActorModelModulesUpdatesInternalUsersFounded *) check_class_cast(update, [ImActorModelModulesUpdatesInternalUsersFounded class])))) getUsers] withJavaUtilList:new_JavaUtilArrayList_init() withBoolean:NO];
    JavaUtilArrayList *users = new_JavaUtilArrayList_init();
    for (APUser * __strong u in nil_chk([((ImActorModelModulesUpdatesInternalUsersFounded *) nil_chk(founded)) getUsers])) {
      [users addWithId:[((AMMVVMCollection *) nil_chk([((ImActorModelModulesUsers *) nil_chk([((ImActorModelModulesModules *) nil_chk([self modules])) getUsersModule])) getUsersCollection])) getWithId:[((APUser *) nil_chk(u)) getId]]];
    }
    [self runOnUiThreadWithJavaLangRunnable:new_ImActorModelModulesUpdatesUpdateProcessor_$1_initWithImActorModelModulesUpdatesInternalUsersFounded_withJavaUtilArrayList_(founded, users)];
  }
  else if ([update isKindOfClass:[ImActorModelModulesUpdatesInternalGroupCreated class]]) {
    ImActorModelModulesUpdatesInternalGroupCreated *created = (ImActorModelModulesUpdatesInternalGroupCreated *) check_class_cast(update, [ImActorModelModulesUpdatesInternalGroupCreated class]);
    JavaUtilArrayList *groups = new_JavaUtilArrayList_init();
    [groups addWithId:[((ImActorModelModulesUpdatesInternalGroupCreated *) nil_chk(created)) getGroup]];
    [self applyRelatedWithJavaUtilList:[created getUsers] withJavaUtilList:groups withBoolean:NO];
    [self runOnUiThreadWithJavaLangRunnable:new_ImActorModelModulesUpdatesUpdateProcessor_$2_initWithImActorModelModulesUpdatesInternalGroupCreated_(created)];
  }
}

- (void)applyDifferenceUpdateWithJavaUtilList:(id<JavaUtilList>)users
                             withJavaUtilList:(id<JavaUtilList>)groups
                             withJavaUtilList:(id<JavaUtilList>)updates {
  [self applyRelatedWithJavaUtilList:users withJavaUtilList:groups withBoolean:NO];
  [((ImActorModelModulesNotifications *) nil_chk([((ImActorModelModulesModules *) nil_chk([self modules])) getNotifications])) pauseNotifications];
  for (jint i = 0; i < [((id<JavaUtilList>) nil_chk(updates)) size]; i++) {
    [self processUpdateWithAPUpdate:[updates getWithInt:i]];
  }
  [((ImActorModelModulesNotifications *) nil_chk([((ImActorModelModulesModules *) nil_chk([self modules])) getNotifications])) resumeNotifications];
  [self applyRelatedWithJavaUtilList:users withJavaUtilList:groups withBoolean:YES];
}

- (void)processWeakUpdateWithAPUpdate:(APUpdate *)update
                             withLong:(jlong)date {
  if ([update isKindOfClass:[APUpdateUserOnline class]]) {
    APUpdateUserOnline *userOnline = (APUpdateUserOnline *) check_class_cast(update, [APUpdateUserOnline class]);
    [((ImActorModelModulesUpdatesPresenceProcessor *) nil_chk(presenceProcessor_)) onUserOnlineWithInt:[((APUpdateUserOnline *) nil_chk(userOnline)) getUid] withLong:date];
  }
  else if ([update isKindOfClass:[APUpdateUserOffline class]]) {
    APUpdateUserOffline *offline = (APUpdateUserOffline *) check_class_cast(update, [APUpdateUserOffline class]);
    [((ImActorModelModulesUpdatesPresenceProcessor *) nil_chk(presenceProcessor_)) onUserOfflineWithInt:[((APUpdateUserOffline *) nil_chk(offline)) getUid] withLong:date];
  }
  else if ([update isKindOfClass:[APUpdateUserLastSeen class]]) {
    APUpdateUserLastSeen *lastSeen = (APUpdateUserLastSeen *) check_class_cast(update, [APUpdateUserLastSeen class]);
    [((ImActorModelModulesUpdatesPresenceProcessor *) nil_chk(presenceProcessor_)) onUserLastSeenWithInt:[((APUpdateUserLastSeen *) nil_chk(lastSeen)) getUid] withLong:[lastSeen getDate] withLong:date];
  }
  else if ([update isKindOfClass:[APUpdateGroupOnline class]]) {
    APUpdateGroupOnline *groupOnline = (APUpdateGroupOnline *) check_class_cast(update, [APUpdateGroupOnline class]);
    [((ImActorModelModulesUpdatesPresenceProcessor *) nil_chk(presenceProcessor_)) onGroupOnlineWithInt:[((APUpdateGroupOnline *) nil_chk(groupOnline)) getGroupId] withInt:[groupOnline getCount] withLong:date];
  }
  else if ([update isKindOfClass:[APUpdateTyping class]]) {
    APUpdateTyping *typing = (APUpdateTyping *) check_class_cast(update, [APUpdateTyping class]);
    [((ImActorModelModulesUpdatesTypingProcessor *) nil_chk(typingProcessor_)) onTypingWithAPPeer:[((APUpdateTyping *) nil_chk(typing)) getPeer] withInt:[typing getUid] withAPTypingTypeEnum:[typing getTypingType]];
  }
}

- (void)processUpdateWithAPUpdate:(APUpdate *)update {
  if ([update isKindOfClass:[APUpdateUserNameChanged class]]) {
    APUpdateUserNameChanged *userNameChanged = (APUpdateUserNameChanged *) check_class_cast(update, [APUpdateUserNameChanged class]);
    [((ImActorModelModulesUpdatesUsersProcessor *) nil_chk(usersProcessor_)) onUserNameChangedWithInt:[((APUpdateUserNameChanged *) nil_chk(userNameChanged)) getUid] withNSString:[userNameChanged getName]];
  }
  else if ([update isKindOfClass:[APUpdateUserLocalNameChanged class]]) {
    APUpdateUserLocalNameChanged *localNameChanged = (APUpdateUserLocalNameChanged *) check_class_cast(update, [APUpdateUserLocalNameChanged class]);
    [((ImActorModelModulesUpdatesUsersProcessor *) nil_chk(usersProcessor_)) onUserLocalNameChangedWithInt:[((APUpdateUserLocalNameChanged *) nil_chk(localNameChanged)) getUid] withNSString:[localNameChanged getLocalName]];
  }
  else if ([update isKindOfClass:[APUpdateUserNickChanged class]]) {
    APUpdateUserNickChanged *nickChanged = (APUpdateUserNickChanged *) check_class_cast(update, [APUpdateUserNickChanged class]);
    [((ImActorModelModulesUpdatesUsersProcessor *) nil_chk(usersProcessor_)) onUserNickChangedWithInt:[((APUpdateUserNickChanged *) nil_chk(nickChanged)) getUid] withNSString:[nickChanged getNickname]];
  }
  else if ([update isKindOfClass:[APUpdateUserAboutChanged class]]) {
    APUpdateUserAboutChanged *userAboutChanged = (APUpdateUserAboutChanged *) check_class_cast(update, [APUpdateUserAboutChanged class]);
    [((ImActorModelModulesUpdatesUsersProcessor *) nil_chk(usersProcessor_)) onUserAboutChangedWithInt:[((APUpdateUserAboutChanged *) nil_chk(userAboutChanged)) getUid] withNSString:[userAboutChanged getAbout]];
  }
  else if ([update isKindOfClass:[APUpdateUserAvatarChanged class]]) {
    APUpdateUserAvatarChanged *avatarChanged = (APUpdateUserAvatarChanged *) check_class_cast(update, [APUpdateUserAvatarChanged class]);
    [((ImActorModelModulesUpdatesUsersProcessor *) nil_chk(usersProcessor_)) onUserAvatarChangedWithInt:[((APUpdateUserAvatarChanged *) nil_chk(avatarChanged)) getUid] withAPAvatar:[avatarChanged getAvatar]];
  }
  else if ([update isKindOfClass:[APUpdateMessage class]]) {
    APUpdateMessage *message = (APUpdateMessage *) check_class_cast(update, [APUpdateMessage class]);
    [((ImActorModelModulesUpdatesMessagesProcessor *) nil_chk(messagesProcessor_)) onMessageWithAPPeer:[((APUpdateMessage *) nil_chk(message)) getPeer] withInt:[message getSenderUid] withLong:[message getDate] withLong:[message getRid] withAPMessage:[message getMessage]];
    [((ImActorModelModulesUpdatesTypingProcessor *) nil_chk(typingProcessor_)) onMessageWithAPPeer:[message getPeer] withInt:[message getSenderUid]];
  }
  else if ([update isKindOfClass:[APUpdateMessageRead class]]) {
    APUpdateMessageRead *messageRead = (APUpdateMessageRead *) check_class_cast(update, [APUpdateMessageRead class]);
    [((ImActorModelModulesUpdatesMessagesProcessor *) nil_chk(messagesProcessor_)) onMessageReadWithAPPeer:[((APUpdateMessageRead *) nil_chk(messageRead)) getPeer] withLong:[messageRead getStartDate] withLong:[messageRead getReadDate]];
  }
  else if ([update isKindOfClass:[APUpdateMessageReadByMe class]]) {
    APUpdateMessageReadByMe *messageReadByMe = (APUpdateMessageReadByMe *) check_class_cast(update, [APUpdateMessageReadByMe class]);
    [((ImActorModelModulesUpdatesMessagesProcessor *) nil_chk(messagesProcessor_)) onMessageReadByMeWithAPPeer:[((APUpdateMessageReadByMe *) nil_chk(messageReadByMe)) getPeer] withLong:[messageReadByMe getStartDate]];
  }
  else if ([update isKindOfClass:[APUpdateMessageReceived class]]) {
    APUpdateMessageReceived *received = (APUpdateMessageReceived *) check_class_cast(update, [APUpdateMessageReceived class]);
    [((ImActorModelModulesUpdatesMessagesProcessor *) nil_chk(messagesProcessor_)) onMessageReceivedWithAPPeer:[((APUpdateMessageReceived *) nil_chk(received)) getPeer] withLong:[received getStartDate] withLong:[received getReceivedDate]];
  }
  else if ([update isKindOfClass:[APUpdateMessageDelete class]]) {
    APUpdateMessageDelete *messageDelete = (APUpdateMessageDelete *) check_class_cast(update, [APUpdateMessageDelete class]);
    [((ImActorModelModulesUpdatesMessagesProcessor *) nil_chk(messagesProcessor_)) onMessageDeleteWithAPPeer:[((APUpdateMessageDelete *) nil_chk(messageDelete)) getPeer] withJavaUtilList:[messageDelete getRids]];
  }
  else if ([update isKindOfClass:[APUpdateMessageSent class]]) {
    APUpdateMessageSent *messageSent = (APUpdateMessageSent *) check_class_cast(update, [APUpdateMessageSent class]);
    [((ImActorModelModulesUpdatesMessagesProcessor *) nil_chk(messagesProcessor_)) onMessageSentWithAPPeer:[((APUpdateMessageSent *) nil_chk(messageSent)) getPeer] withLong:[messageSent getRid] withLong:[messageSent getDate]];
  }
  else if ([update isKindOfClass:[APUpdateMessageContentChanged class]]) {
    APUpdateMessageContentChanged *contentChanged = (APUpdateMessageContentChanged *) check_class_cast(update, [APUpdateMessageContentChanged class]);
    [((ImActorModelModulesUpdatesMessagesProcessor *) nil_chk(messagesProcessor_)) onMessageContentChangedWithAPPeer:[((APUpdateMessageContentChanged *) nil_chk(contentChanged)) getPeer] withLong:[contentChanged getRid] withAPMessage:[contentChanged getMessage]];
  }
  else if ([update isKindOfClass:[APUpdateChatClear class]]) {
    APUpdateChatClear *chatClear = (APUpdateChatClear *) check_class_cast(update, [APUpdateChatClear class]);
    [((ImActorModelModulesUpdatesMessagesProcessor *) nil_chk(messagesProcessor_)) onChatClearWithAPPeer:[((APUpdateChatClear *) nil_chk(chatClear)) getPeer]];
  }
  else if ([update isKindOfClass:[APUpdateChatDelete class]]) {
    APUpdateChatDelete *chatDelete = (APUpdateChatDelete *) check_class_cast(update, [APUpdateChatDelete class]);
    [((ImActorModelModulesUpdatesMessagesProcessor *) nil_chk(messagesProcessor_)) onChatDeleteWithAPPeer:[((APUpdateChatDelete *) nil_chk(chatDelete)) getPeer]];
  }
  else if ([update isKindOfClass:[APUpdateContactRegistered class]]) {
    APUpdateContactRegistered *registered = (APUpdateContactRegistered *) check_class_cast(update, [APUpdateContactRegistered class]);
    if (![((APUpdateContactRegistered *) nil_chk(registered)) isSilent]) {
      [((ImActorModelModulesUpdatesMessagesProcessor *) nil_chk(messagesProcessor_)) onUserRegisteredWithLong:[registered getRid] withInt:[registered getUid] withLong:[registered getDate]];
    }
  }
  else if ([update isKindOfClass:[APUpdateGroupTitleChanged class]]) {
    APUpdateGroupTitleChanged *titleChanged = (APUpdateGroupTitleChanged *) check_class_cast(update, [APUpdateGroupTitleChanged class]);
    [((ImActorModelModulesUpdatesGroupsProcessor *) nil_chk(groupsProcessor_)) onTitleChangedWithInt:[((APUpdateGroupTitleChanged *) nil_chk(titleChanged)) getGroupId] withLong:[titleChanged getRid] withInt:[titleChanged getUid] withNSString:[titleChanged getTitle] withLong:[titleChanged getDate] withBoolean:NO];
  }
  else if ([update isKindOfClass:[APUpdateGroupAvatarChanged class]]) {
    APUpdateGroupAvatarChanged *avatarChanged = (APUpdateGroupAvatarChanged *) check_class_cast(update, [APUpdateGroupAvatarChanged class]);
    [((ImActorModelModulesUpdatesGroupsProcessor *) nil_chk(groupsProcessor_)) onAvatarChangedWithInt:[((APUpdateGroupAvatarChanged *) nil_chk(avatarChanged)) getGroupId] withLong:[avatarChanged getRid] withInt:[avatarChanged getUid] withAPAvatar:[avatarChanged getAvatar] withLong:[avatarChanged getDate] withBoolean:NO];
  }
  else if ([update isKindOfClass:[APUpdateGroupInvite class]]) {
    APUpdateGroupInvite *groupInvite = (APUpdateGroupInvite *) check_class_cast(update, [APUpdateGroupInvite class]);
    [((ImActorModelModulesUpdatesGroupsProcessor *) nil_chk(groupsProcessor_)) onGroupInviteWithInt:[((APUpdateGroupInvite *) nil_chk(groupInvite)) getGroupId] withLong:[groupInvite getRid] withInt:[groupInvite getInviteUid] withLong:[groupInvite getDate] withBoolean:NO];
  }
  else if ([update isKindOfClass:[APUpdateGroupUserLeave class]]) {
    APUpdateGroupUserLeave *leave = (APUpdateGroupUserLeave *) check_class_cast(update, [APUpdateGroupUserLeave class]);
    [((ImActorModelModulesUpdatesGroupsProcessor *) nil_chk(groupsProcessor_)) onUserLeaveWithInt:[((APUpdateGroupUserLeave *) nil_chk(leave)) getGroupId] withLong:[leave getRid] withInt:[leave getUid] withLong:[leave getDate] withBoolean:NO];
  }
  else if ([update isKindOfClass:[APUpdateGroupUserKick class]]) {
    APUpdateGroupUserKick *userKick = (APUpdateGroupUserKick *) check_class_cast(update, [APUpdateGroupUserKick class]);
    [((ImActorModelModulesUpdatesGroupsProcessor *) nil_chk(groupsProcessor_)) onUserKickedWithInt:[((APUpdateGroupUserKick *) nil_chk(userKick)) getGroupId] withLong:[userKick getRid] withInt:[userKick getUid] withInt:[userKick getKickerUid] withLong:[userKick getDate] withBoolean:NO];
  }
  else if ([update isKindOfClass:[APUpdateGroupUserInvited class]]) {
    APUpdateGroupUserInvited *userInvited = (APUpdateGroupUserInvited *) check_class_cast(update, [APUpdateGroupUserInvited class]);
    [((ImActorModelModulesUpdatesGroupsProcessor *) nil_chk(groupsProcessor_)) onUserAddedWithInt:[((APUpdateGroupUserInvited *) nil_chk(userInvited)) getGroupId] withLong:[userInvited getRid] withInt:[userInvited getUid] withInt:[userInvited getInviterUid] withLong:[userInvited getDate] withBoolean:NO];
  }
  else if ([update isKindOfClass:[APUpdateContactsAdded class]]) {
    APUpdateContactsAdded *contactsAdded = (APUpdateContactsAdded *) check_class_cast(update, [APUpdateContactsAdded class]);
    IOSIntArray *res = [IOSIntArray newArrayWithLength:[((id<JavaUtilList>) nil_chk([((APUpdateContactsAdded *) nil_chk(contactsAdded)) getUids])) size]];
    for (jint i = 0; i < res->size_; i++) {
      *IOSIntArray_GetRef(res, i) = [((JavaLangInteger *) nil_chk([((id<JavaUtilList>) nil_chk([contactsAdded getUids])) getWithInt:i])) intValue];
    }
    [((ImActorModelModulesUpdatesContactsProcessor *) nil_chk(contactsProcessor_)) onContactsAddedWithIntArray:res];
  }
  else if ([update isKindOfClass:[APUpdateContactsRemoved class]]) {
    APUpdateContactsRemoved *contactsRemoved = (APUpdateContactsRemoved *) check_class_cast(update, [APUpdateContactsRemoved class]);
    IOSIntArray *res = [IOSIntArray newArrayWithLength:[((id<JavaUtilList>) nil_chk([((APUpdateContactsRemoved *) nil_chk(contactsRemoved)) getUids])) size]];
    for (jint i = 0; i < res->size_; i++) {
      *IOSIntArray_GetRef(res, i) = [((JavaLangInteger *) nil_chk([((id<JavaUtilList>) nil_chk([contactsRemoved getUids])) getWithInt:i])) intValue];
    }
    [((ImActorModelModulesUpdatesContactsProcessor *) nil_chk(contactsProcessor_)) onContactsRemovedWithIntArray:res];
  }
  else if ([update isKindOfClass:[APUpdateGroupMembersUpdate class]]) {
    [((ImActorModelModulesUpdatesGroupsProcessor *) nil_chk(groupsProcessor_)) onMembersUpdatedWithInt:[((APUpdateGroupMembersUpdate *) nil_chk(((APUpdateGroupMembersUpdate *) check_class_cast(update, [APUpdateGroupMembersUpdate class])))) getGroupId] withJavaUtilList:[((APUpdateGroupMembersUpdate *) nil_chk(((APUpdateGroupMembersUpdate *) check_class_cast(update, [APUpdateGroupMembersUpdate class])))) getMembers]];
  }
  else if ([update isKindOfClass:[APUpdateParameterChanged class]]) {
    [((ImActorModelModulesUpdatesSettingsProcessor *) nil_chk(settingsProcessor_)) onSettingsChangedWithNSString:[((APUpdateParameterChanged *) nil_chk(((APUpdateParameterChanged *) check_class_cast(update, [APUpdateParameterChanged class])))) getKey] withNSString:[((APUpdateParameterChanged *) nil_chk(((APUpdateParameterChanged *) check_class_cast(update, [APUpdateParameterChanged class])))) getValue]];
  }
  else if ([update isKindOfClass:[APUpdateCountersChanged class]]) {
    [((ImActorModelModulesUpdatesMessagesProcessor *) nil_chk(messagesProcessor_)) onCountersChangedWithAPAppCounters:[((APUpdateCountersChanged *) nil_chk(((APUpdateCountersChanged *) check_class_cast(update, [APUpdateCountersChanged class])))) getCounters]];
  }
}

- (jboolean)isCausesInvalidationWithAPUpdate:(APUpdate *)update {
  JavaUtilHashSet *users = new_JavaUtilHashSet_init();
  JavaUtilHashSet *groups = new_JavaUtilHashSet_init();
  if ([update isKindOfClass:[APUpdateMessage class]]) {
    APUpdateMessage *updateMessage = (APUpdateMessage *) check_class_cast(update, [APUpdateMessage class]);
    [users addWithId:JavaLangInteger_valueOfWithInt_([((APUpdateMessage *) nil_chk(updateMessage)) getSenderUid])];
    if ([((APPeer *) nil_chk([updateMessage getPeer])) getType] == APPeerTypeEnum_get_GROUP()) {
      [groups addWithId:JavaLangInteger_valueOfWithInt_([((APPeer *) nil_chk([updateMessage getPeer])) getId])];
    }
    if ([((APPeer *) nil_chk([updateMessage getPeer])) getType] == APPeerTypeEnum_get_PRIVATE()) {
      [users addWithId:JavaLangInteger_valueOfWithInt_([((APPeer *) nil_chk([updateMessage getPeer])) getId])];
    }
  }
  else if ([update isKindOfClass:[APUpdateContactRegistered class]]) {
    APUpdateContactRegistered *contactRegistered = (APUpdateContactRegistered *) check_class_cast(update, [APUpdateContactRegistered class]);
    [users addWithId:JavaLangInteger_valueOfWithInt_([((APUpdateContactRegistered *) nil_chk(contactRegistered)) getUid])];
  }
  else if ([update isKindOfClass:[APUpdateGroupInvite class]]) {
    APUpdateGroupInvite *groupInvite = (APUpdateGroupInvite *) check_class_cast(update, [APUpdateGroupInvite class]);
    [users addWithId:JavaLangInteger_valueOfWithInt_([((APUpdateGroupInvite *) nil_chk(groupInvite)) getInviteUid])];
    [groups addWithId:JavaLangInteger_valueOfWithInt_([groupInvite getGroupId])];
  }
  else if ([update isKindOfClass:[APUpdateGroupUserInvited class]]) {
    APUpdateGroupUserInvited *invited = (APUpdateGroupUserInvited *) check_class_cast(update, [APUpdateGroupUserInvited class]);
    [users addWithId:JavaLangInteger_valueOfWithInt_([((APUpdateGroupUserInvited *) nil_chk(invited)) getInviterUid])];
    [users addWithId:JavaLangInteger_valueOfWithInt_([invited getUid])];
    [groups addWithId:JavaLangInteger_valueOfWithInt_([invited getGroupId])];
  }
  else if ([update isKindOfClass:[APUpdateGroupUserKick class]]) {
    APUpdateGroupUserKick *kick = (APUpdateGroupUserKick *) check_class_cast(update, [APUpdateGroupUserKick class]);
    [users addWithId:JavaLangInteger_valueOfWithInt_([((APUpdateGroupUserKick *) nil_chk(kick)) getKickerUid])];
    [users addWithId:JavaLangInteger_valueOfWithInt_([kick getUid])];
    [groups addWithId:JavaLangInteger_valueOfWithInt_([kick getGroupId])];
  }
  else if ([update isKindOfClass:[APUpdateGroupUserLeave class]]) {
    APUpdateGroupUserLeave *leave = (APUpdateGroupUserLeave *) check_class_cast(update, [APUpdateGroupUserLeave class]);
    [users addWithId:JavaLangInteger_valueOfWithInt_([((APUpdateGroupUserLeave *) nil_chk(leave)) getUid])];
    [groups addWithId:JavaLangInteger_valueOfWithInt_([leave getGroupId])];
  }
  else if ([update isKindOfClass:[APUpdateContactsAdded class]]) {
    [users addAllWithJavaUtilCollection:[((APUpdateContactsAdded *) nil_chk(((APUpdateContactsAdded *) check_class_cast(update, [APUpdateContactsAdded class])))) getUids]];
  }
  else if ([update isKindOfClass:[APUpdateContactsRemoved class]]) {
    [users addAllWithJavaUtilCollection:[((APUpdateContactsRemoved *) nil_chk(((APUpdateContactsRemoved *) check_class_cast(update, [APUpdateContactsRemoved class])))) getUids]];
  }
  else if ([update isKindOfClass:[APUpdateUserLocalNameChanged class]]) {
    APUpdateUserLocalNameChanged *localNameChanged = (APUpdateUserLocalNameChanged *) check_class_cast(update, [APUpdateUserLocalNameChanged class]);
    [users addWithId:JavaLangInteger_valueOfWithInt_([((APUpdateUserLocalNameChanged *) nil_chk(localNameChanged)) getUid])];
  }
  if (![((ImActorModelModulesUpdatesUsersProcessor *) nil_chk(usersProcessor_)) hasUsersWithJavaUtilCollection:users]) {
    return YES;
  }
  if (![((ImActorModelModulesUpdatesGroupsProcessor *) nil_chk(groupsProcessor_)) hasGroupsWithJavaUtilCollection:groups]) {
    return YES;
  }
  return NO;
}

@end

void ImActorModelModulesUpdatesUpdateProcessor_initWithImActorModelModulesModules_(ImActorModelModulesUpdatesUpdateProcessor *self, ImActorModelModulesModules *modules) {
  (void) ImActorModelModulesBaseModule_initWithImActorModelModulesModules_(self, modules);
  self->settingsProcessor_ = new_ImActorModelModulesUpdatesSettingsProcessor_initWithImActorModelModulesModules_(modules);
  self->usersProcessor_ = new_ImActorModelModulesUpdatesUsersProcessor_initWithImActorModelModulesModules_(modules);
  self->messagesProcessor_ = new_ImActorModelModulesUpdatesMessagesProcessor_initWithImActorModelModulesModules_(modules);
  self->groupsProcessor_ = new_ImActorModelModulesUpdatesGroupsProcessor_initWithImActorModelModulesModules_(modules);
  self->presenceProcessor_ = new_ImActorModelModulesUpdatesPresenceProcessor_initWithImActorModelModulesModules_(modules);
  self->typingProcessor_ = new_ImActorModelModulesUpdatesTypingProcessor_initWithImActorModelModulesModules_(modules);
  self->contactsProcessor_ = new_ImActorModelModulesUpdatesContactsProcessor_initWithImActorModelModulesModules_(modules);
}

ImActorModelModulesUpdatesUpdateProcessor *new_ImActorModelModulesUpdatesUpdateProcessor_initWithImActorModelModulesModules_(ImActorModelModulesModules *modules) {
  ImActorModelModulesUpdatesUpdateProcessor *self = [ImActorModelModulesUpdatesUpdateProcessor alloc];
  ImActorModelModulesUpdatesUpdateProcessor_initWithImActorModelModulesModules_(self, modules);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ImActorModelModulesUpdatesUpdateProcessor)

@implementation ImActorModelModulesUpdatesUpdateProcessor_$1

- (void)run {
  [((id<AMCommandCallback>) nil_chk([((ImActorModelModulesUpdatesInternalUsersFounded *) nil_chk(val$founded_)) getCommandCallback])) onResult:[val$users_ toArrayWithNSObjectArray:[IOSObjectArray newArrayWithLength:[((JavaUtilArrayList *) nil_chk(val$users_)) size] type:AMUserVM_class_()]]];
}

- (instancetype)initWithImActorModelModulesUpdatesInternalUsersFounded:(ImActorModelModulesUpdatesInternalUsersFounded *)capture$0
                                                 withJavaUtilArrayList:(JavaUtilArrayList *)capture$1 {
  ImActorModelModulesUpdatesUpdateProcessor_$1_initWithImActorModelModulesUpdatesInternalUsersFounded_withJavaUtilArrayList_(self, capture$0, capture$1);
  return self;
}

@end

void ImActorModelModulesUpdatesUpdateProcessor_$1_initWithImActorModelModulesUpdatesInternalUsersFounded_withJavaUtilArrayList_(ImActorModelModulesUpdatesUpdateProcessor_$1 *self, ImActorModelModulesUpdatesInternalUsersFounded *capture$0, JavaUtilArrayList *capture$1) {
  self->val$founded_ = capture$0;
  self->val$users_ = capture$1;
  (void) NSObject_init(self);
}

ImActorModelModulesUpdatesUpdateProcessor_$1 *new_ImActorModelModulesUpdatesUpdateProcessor_$1_initWithImActorModelModulesUpdatesInternalUsersFounded_withJavaUtilArrayList_(ImActorModelModulesUpdatesInternalUsersFounded *capture$0, JavaUtilArrayList *capture$1) {
  ImActorModelModulesUpdatesUpdateProcessor_$1 *self = [ImActorModelModulesUpdatesUpdateProcessor_$1 alloc];
  ImActorModelModulesUpdatesUpdateProcessor_$1_initWithImActorModelModulesUpdatesInternalUsersFounded_withJavaUtilArrayList_(self, capture$0, capture$1);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ImActorModelModulesUpdatesUpdateProcessor_$1)

@implementation ImActorModelModulesUpdatesUpdateProcessor_$2

- (void)run {
  [((id<AMCommandCallback>) nil_chk([((ImActorModelModulesUpdatesInternalGroupCreated *) nil_chk(val$created_)) getCallback])) onResult:JavaLangInteger_valueOfWithInt_([((APGroup *) nil_chk([val$created_ getGroup])) getId])];
}

- (instancetype)initWithImActorModelModulesUpdatesInternalGroupCreated:(ImActorModelModulesUpdatesInternalGroupCreated *)capture$0 {
  ImActorModelModulesUpdatesUpdateProcessor_$2_initWithImActorModelModulesUpdatesInternalGroupCreated_(self, capture$0);
  return self;
}

@end

void ImActorModelModulesUpdatesUpdateProcessor_$2_initWithImActorModelModulesUpdatesInternalGroupCreated_(ImActorModelModulesUpdatesUpdateProcessor_$2 *self, ImActorModelModulesUpdatesInternalGroupCreated *capture$0) {
  self->val$created_ = capture$0;
  (void) NSObject_init(self);
}

ImActorModelModulesUpdatesUpdateProcessor_$2 *new_ImActorModelModulesUpdatesUpdateProcessor_$2_initWithImActorModelModulesUpdatesInternalGroupCreated_(ImActorModelModulesUpdatesInternalGroupCreated *capture$0) {
  ImActorModelModulesUpdatesUpdateProcessor_$2 *self = [ImActorModelModulesUpdatesUpdateProcessor_$2 alloc];
  ImActorModelModulesUpdatesUpdateProcessor_$2_initWithImActorModelModulesUpdatesInternalGroupCreated_(self, capture$0);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ImActorModelModulesUpdatesUpdateProcessor_$2)
