//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/ex3ndr/Develop/actor-proprietary/actor-apps/core/src/main/java/im/actor/model/modules/file/DownloadManager.java
//


#include "IOSClass.h"
#include "J2ObjC_source.h"
#include "im/actor/model/Configuration.h"
#include "im/actor/model/FileSystemProvider.h"
#include "im/actor/model/droidkit/actors/Actor.h"
#include "im/actor/model/droidkit/actors/ActorCreator.h"
#include "im/actor/model/droidkit/actors/ActorRef.h"
#include "im/actor/model/droidkit/actors/ActorSystem.h"
#include "im/actor/model/droidkit/actors/Environment.h"
#include "im/actor/model/droidkit/actors/Props.h"
#include "im/actor/model/droidkit/actors/messages/PoisonPill.h"
#include "im/actor/model/droidkit/engine/KeyValueEngine.h"
#include "im/actor/model/entity/FileReference.h"
#include "im/actor/model/files/FileSystemReference.h"
#include "im/actor/model/log/Log.h"
#include "im/actor/model/modules/Files.h"
#include "im/actor/model/modules/Modules.h"
#include "im/actor/model/modules/file/DownloadManager.h"
#include "im/actor/model/modules/file/DownloadTask.h"
#include "im/actor/model/modules/file/entity/Downloaded.h"
#include "im/actor/model/modules/utils/ModuleActor.h"
#include "im/actor/model/modules/utils/RandomUtils.h"
#include "im/actor/model/viewmodel/FileCallback.h"
#include "java/lang/Runnable.h"
#include "java/util/ArrayList.h"

@class ImActorModelModulesFileDownloadManager_QueueItem;

#define ImActorModelModulesFileDownloadManager_SIM_MAX_DOWNLOADS 2

@interface ImActorModelModulesFileDownloadManager () {
 @public
  jboolean LOG_;
  JavaUtilArrayList *queue_;
  id<DKKeyValueEngine> downloaded_;
}

- (void)checkQueue;

- (ImActorModelModulesFileDownloadManager_QueueItem *)findItemWithLong:(jlong)id_;

- (void)promoteWithLong:(jlong)id_;

@end

J2OBJC_FIELD_SETTER(ImActorModelModulesFileDownloadManager, queue_, JavaUtilArrayList *)
J2OBJC_FIELD_SETTER(ImActorModelModulesFileDownloadManager, downloaded_, id<DKKeyValueEngine>)

static NSString *ImActorModelModulesFileDownloadManager_TAG_ = @"DownloadManager";
J2OBJC_STATIC_FIELD_GETTER(ImActorModelModulesFileDownloadManager, TAG_, NSString *)

J2OBJC_STATIC_FIELD_GETTER(ImActorModelModulesFileDownloadManager, SIM_MAX_DOWNLOADS, jint)

__attribute__((unused)) static void ImActorModelModulesFileDownloadManager_checkQueue(ImActorModelModulesFileDownloadManager *self);

__attribute__((unused)) static ImActorModelModulesFileDownloadManager_QueueItem *ImActorModelModulesFileDownloadManager_findItemWithLong_(ImActorModelModulesFileDownloadManager *self, jlong id_);

__attribute__((unused)) static void ImActorModelModulesFileDownloadManager_promoteWithLong_(ImActorModelModulesFileDownloadManager *self, jlong id_);

@interface ImActorModelModulesFileDownloadManager_QueueItem : NSObject {
 @public
  AMFileReference *fileReference_;
  jboolean isStopped_;
  JavaUtilArrayList *callbacks_;
  jboolean isStarted_;
  jfloat progress_;
  DKActorRef *taskRef_;
}

- (instancetype)initWithImActorModelModulesFileDownloadManager:(ImActorModelModulesFileDownloadManager *)outer$
                                           withAMFileReference:(AMFileReference *)fileReference;

@end

J2OBJC_EMPTY_STATIC_INIT(ImActorModelModulesFileDownloadManager_QueueItem)

J2OBJC_FIELD_SETTER(ImActorModelModulesFileDownloadManager_QueueItem, fileReference_, AMFileReference *)
J2OBJC_FIELD_SETTER(ImActorModelModulesFileDownloadManager_QueueItem, callbacks_, JavaUtilArrayList *)
J2OBJC_FIELD_SETTER(ImActorModelModulesFileDownloadManager_QueueItem, taskRef_, DKActorRef *)

__attribute__((unused)) static void ImActorModelModulesFileDownloadManager_QueueItem_initWithImActorModelModulesFileDownloadManager_withAMFileReference_(ImActorModelModulesFileDownloadManager_QueueItem *self, ImActorModelModulesFileDownloadManager *outer$, AMFileReference *fileReference);

__attribute__((unused)) static ImActorModelModulesFileDownloadManager_QueueItem *new_ImActorModelModulesFileDownloadManager_QueueItem_initWithImActorModelModulesFileDownloadManager_withAMFileReference_(ImActorModelModulesFileDownloadManager *outer$, AMFileReference *fileReference) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(ImActorModelModulesFileDownloadManager_QueueItem)

@interface ImActorModelModulesFileDownloadManager_RequestState () {
 @public
  jlong fileId_;
  id<AMFileCallback> callback_;
}

@end

J2OBJC_FIELD_SETTER(ImActorModelModulesFileDownloadManager_RequestState, callback_, id<AMFileCallback>)

@interface ImActorModelModulesFileDownloadManager_BindDownload () {
 @public
  AMFileReference *fileReference_;
  jboolean isAutostart__;
  id<AMFileCallback> callback_;
}

@end

J2OBJC_FIELD_SETTER(ImActorModelModulesFileDownloadManager_BindDownload, fileReference_, AMFileReference *)
J2OBJC_FIELD_SETTER(ImActorModelModulesFileDownloadManager_BindDownload, callback_, id<AMFileCallback>)

@interface ImActorModelModulesFileDownloadManager_StartDownload () {
 @public
  AMFileReference *fileReference_;
}

@end

J2OBJC_FIELD_SETTER(ImActorModelModulesFileDownloadManager_StartDownload, fileReference_, AMFileReference *)

@interface ImActorModelModulesFileDownloadManager_CancelDownload () {
 @public
  jlong fileId_;
}

@end

@interface ImActorModelModulesFileDownloadManager_UnbindDownload () {
 @public
  jlong fileId_;
  jboolean isAutocancel__;
  id<AMFileCallback> callback_;
}

@end

J2OBJC_FIELD_SETTER(ImActorModelModulesFileDownloadManager_UnbindDownload, callback_, id<AMFileCallback>)

@interface ImActorModelModulesFileDownloadManager_OnDownloadProgress () {
 @public
  jlong fileId_;
  jfloat progress_;
}

@end

@interface ImActorModelModulesFileDownloadManager_OnDownloaded () {
 @public
  jlong fileId_;
  id<AMFileSystemReference> reference_;
}

@end

J2OBJC_FIELD_SETTER(ImActorModelModulesFileDownloadManager_OnDownloaded, reference_, id<AMFileSystemReference>)

@interface ImActorModelModulesFileDownloadManager_OnDownloadedError () {
 @public
  jlong fileId_;
}

@end

@interface ImActorModelModulesFileDownloadManager_$1 : NSObject < JavaLangRunnable > {
 @public
  id<AMFileCallback> val$callback_;
  id<AMFileSystemReference> val$fileSystemReference_;
}

- (void)run;

- (instancetype)initWithAMFileCallback:(id<AMFileCallback>)capture$0
             withAMFileSystemReference:(id<AMFileSystemReference>)capture$1;

@end

J2OBJC_EMPTY_STATIC_INIT(ImActorModelModulesFileDownloadManager_$1)

J2OBJC_FIELD_SETTER(ImActorModelModulesFileDownloadManager_$1, val$callback_, id<AMFileCallback>)
J2OBJC_FIELD_SETTER(ImActorModelModulesFileDownloadManager_$1, val$fileSystemReference_, id<AMFileSystemReference>)

__attribute__((unused)) static void ImActorModelModulesFileDownloadManager_$1_initWithAMFileCallback_withAMFileSystemReference_(ImActorModelModulesFileDownloadManager_$1 *self, id<AMFileCallback> capture$0, id<AMFileSystemReference> capture$1);

__attribute__((unused)) static ImActorModelModulesFileDownloadManager_$1 *new_ImActorModelModulesFileDownloadManager_$1_initWithAMFileCallback_withAMFileSystemReference_(id<AMFileCallback> capture$0, id<AMFileSystemReference> capture$1) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(ImActorModelModulesFileDownloadManager_$1)

@interface ImActorModelModulesFileDownloadManager_$2 : NSObject < JavaLangRunnable > {
 @public
  id<AMFileCallback> val$callback_;
}

- (void)run;

- (instancetype)initWithAMFileCallback:(id<AMFileCallback>)capture$0;

@end

J2OBJC_EMPTY_STATIC_INIT(ImActorModelModulesFileDownloadManager_$2)

J2OBJC_FIELD_SETTER(ImActorModelModulesFileDownloadManager_$2, val$callback_, id<AMFileCallback>)

__attribute__((unused)) static void ImActorModelModulesFileDownloadManager_$2_initWithAMFileCallback_(ImActorModelModulesFileDownloadManager_$2 *self, id<AMFileCallback> capture$0);

__attribute__((unused)) static ImActorModelModulesFileDownloadManager_$2 *new_ImActorModelModulesFileDownloadManager_$2_initWithAMFileCallback_(id<AMFileCallback> capture$0) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(ImActorModelModulesFileDownloadManager_$2)

@interface ImActorModelModulesFileDownloadManager_$3 : NSObject < JavaLangRunnable > {
 @public
  id<AMFileCallback> val$callback_;
  jfloat val$progress_;
}

- (void)run;

- (instancetype)initWithAMFileCallback:(id<AMFileCallback>)capture$0
                             withFloat:(jfloat)capture$1;

@end

J2OBJC_EMPTY_STATIC_INIT(ImActorModelModulesFileDownloadManager_$3)

J2OBJC_FIELD_SETTER(ImActorModelModulesFileDownloadManager_$3, val$callback_, id<AMFileCallback>)

__attribute__((unused)) static void ImActorModelModulesFileDownloadManager_$3_initWithAMFileCallback_withFloat_(ImActorModelModulesFileDownloadManager_$3 *self, id<AMFileCallback> capture$0, jfloat capture$1);

__attribute__((unused)) static ImActorModelModulesFileDownloadManager_$3 *new_ImActorModelModulesFileDownloadManager_$3_initWithAMFileCallback_withFloat_(id<AMFileCallback> capture$0, jfloat capture$1) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(ImActorModelModulesFileDownloadManager_$3)

@interface ImActorModelModulesFileDownloadManager_$4 : NSObject < JavaLangRunnable > {
 @public
  id<AMFileCallback> val$callback_;
}

- (void)run;

- (instancetype)initWithAMFileCallback:(id<AMFileCallback>)capture$0;

@end

J2OBJC_EMPTY_STATIC_INIT(ImActorModelModulesFileDownloadManager_$4)

J2OBJC_FIELD_SETTER(ImActorModelModulesFileDownloadManager_$4, val$callback_, id<AMFileCallback>)

__attribute__((unused)) static void ImActorModelModulesFileDownloadManager_$4_initWithAMFileCallback_(ImActorModelModulesFileDownloadManager_$4 *self, id<AMFileCallback> capture$0);

__attribute__((unused)) static ImActorModelModulesFileDownloadManager_$4 *new_ImActorModelModulesFileDownloadManager_$4_initWithAMFileCallback_(id<AMFileCallback> capture$0) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(ImActorModelModulesFileDownloadManager_$4)

@interface ImActorModelModulesFileDownloadManager_$5 : NSObject < JavaLangRunnable > {
 @public
  id<AMFileCallback> val$callback_;
}

- (void)run;

- (instancetype)initWithAMFileCallback:(id<AMFileCallback>)capture$0;

@end

J2OBJC_EMPTY_STATIC_INIT(ImActorModelModulesFileDownloadManager_$5)

J2OBJC_FIELD_SETTER(ImActorModelModulesFileDownloadManager_$5, val$callback_, id<AMFileCallback>)

__attribute__((unused)) static void ImActorModelModulesFileDownloadManager_$5_initWithAMFileCallback_(ImActorModelModulesFileDownloadManager_$5 *self, id<AMFileCallback> capture$0);

__attribute__((unused)) static ImActorModelModulesFileDownloadManager_$5 *new_ImActorModelModulesFileDownloadManager_$5_initWithAMFileCallback_(id<AMFileCallback> capture$0) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(ImActorModelModulesFileDownloadManager_$5)

@interface ImActorModelModulesFileDownloadManager_$6 : NSObject < JavaLangRunnable > {
 @public
  id<AMFileCallback> val$callback_;
  id<AMFileSystemReference> val$fileSystemReference_;
}

- (void)run;

- (instancetype)initWithAMFileCallback:(id<AMFileCallback>)capture$0
             withAMFileSystemReference:(id<AMFileSystemReference>)capture$1;

@end

J2OBJC_EMPTY_STATIC_INIT(ImActorModelModulesFileDownloadManager_$6)

J2OBJC_FIELD_SETTER(ImActorModelModulesFileDownloadManager_$6, val$callback_, id<AMFileCallback>)
J2OBJC_FIELD_SETTER(ImActorModelModulesFileDownloadManager_$6, val$fileSystemReference_, id<AMFileSystemReference>)

__attribute__((unused)) static void ImActorModelModulesFileDownloadManager_$6_initWithAMFileCallback_withAMFileSystemReference_(ImActorModelModulesFileDownloadManager_$6 *self, id<AMFileCallback> capture$0, id<AMFileSystemReference> capture$1);

__attribute__((unused)) static ImActorModelModulesFileDownloadManager_$6 *new_ImActorModelModulesFileDownloadManager_$6_initWithAMFileCallback_withAMFileSystemReference_(id<AMFileCallback> capture$0, id<AMFileSystemReference> capture$1) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(ImActorModelModulesFileDownloadManager_$6)

@interface ImActorModelModulesFileDownloadManager_$7 : NSObject < JavaLangRunnable > {
 @public
  id<AMFileCallback> val$callback_;
}

- (void)run;

- (instancetype)initWithAMFileCallback:(id<AMFileCallback>)capture$0;

@end

J2OBJC_EMPTY_STATIC_INIT(ImActorModelModulesFileDownloadManager_$7)

J2OBJC_FIELD_SETTER(ImActorModelModulesFileDownloadManager_$7, val$callback_, id<AMFileCallback>)

__attribute__((unused)) static void ImActorModelModulesFileDownloadManager_$7_initWithAMFileCallback_(ImActorModelModulesFileDownloadManager_$7 *self, id<AMFileCallback> capture$0);

__attribute__((unused)) static ImActorModelModulesFileDownloadManager_$7 *new_ImActorModelModulesFileDownloadManager_$7_initWithAMFileCallback_(id<AMFileCallback> capture$0) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(ImActorModelModulesFileDownloadManager_$7)

@interface ImActorModelModulesFileDownloadManager_$8 : NSObject < JavaLangRunnable > {
 @public
  id<AMFileCallback> val$callback_;
}

- (void)run;

- (instancetype)initWithAMFileCallback:(id<AMFileCallback>)capture$0;

@end

J2OBJC_EMPTY_STATIC_INIT(ImActorModelModulesFileDownloadManager_$8)

J2OBJC_FIELD_SETTER(ImActorModelModulesFileDownloadManager_$8, val$callback_, id<AMFileCallback>)

__attribute__((unused)) static void ImActorModelModulesFileDownloadManager_$8_initWithAMFileCallback_(ImActorModelModulesFileDownloadManager_$8 *self, id<AMFileCallback> capture$0);

__attribute__((unused)) static ImActorModelModulesFileDownloadManager_$8 *new_ImActorModelModulesFileDownloadManager_$8_initWithAMFileCallback_(id<AMFileCallback> capture$0) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(ImActorModelModulesFileDownloadManager_$8)

@interface ImActorModelModulesFileDownloadManager_$9 : NSObject < JavaLangRunnable > {
 @public
  id<AMFileCallback> val$callback_;
}

- (void)run;

- (instancetype)initWithAMFileCallback:(id<AMFileCallback>)capture$0;

@end

J2OBJC_EMPTY_STATIC_INIT(ImActorModelModulesFileDownloadManager_$9)

J2OBJC_FIELD_SETTER(ImActorModelModulesFileDownloadManager_$9, val$callback_, id<AMFileCallback>)

__attribute__((unused)) static void ImActorModelModulesFileDownloadManager_$9_initWithAMFileCallback_(ImActorModelModulesFileDownloadManager_$9 *self, id<AMFileCallback> capture$0);

__attribute__((unused)) static ImActorModelModulesFileDownloadManager_$9 *new_ImActorModelModulesFileDownloadManager_$9_initWithAMFileCallback_(id<AMFileCallback> capture$0) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(ImActorModelModulesFileDownloadManager_$9)

@interface ImActorModelModulesFileDownloadManager_$10 : NSObject < JavaLangRunnable > {
 @public
  id<AMFileCallback> val$callback_;
  jfloat val$progress_;
}

- (void)run;

- (instancetype)initWithAMFileCallback:(id<AMFileCallback>)capture$0
                             withFloat:(jfloat)capture$1;

@end

J2OBJC_EMPTY_STATIC_INIT(ImActorModelModulesFileDownloadManager_$10)

J2OBJC_FIELD_SETTER(ImActorModelModulesFileDownloadManager_$10, val$callback_, id<AMFileCallback>)

__attribute__((unused)) static void ImActorModelModulesFileDownloadManager_$10_initWithAMFileCallback_withFloat_(ImActorModelModulesFileDownloadManager_$10 *self, id<AMFileCallback> capture$0, jfloat capture$1);

__attribute__((unused)) static ImActorModelModulesFileDownloadManager_$10 *new_ImActorModelModulesFileDownloadManager_$10_initWithAMFileCallback_withFloat_(id<AMFileCallback> capture$0, jfloat capture$1) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(ImActorModelModulesFileDownloadManager_$10)

@interface ImActorModelModulesFileDownloadManager_$11 : NSObject < JavaLangRunnable > {
 @public
  id<AMFileCallback> val$callback_;
}

- (void)run;

- (instancetype)initWithAMFileCallback:(id<AMFileCallback>)capture$0;

@end

J2OBJC_EMPTY_STATIC_INIT(ImActorModelModulesFileDownloadManager_$11)

J2OBJC_FIELD_SETTER(ImActorModelModulesFileDownloadManager_$11, val$callback_, id<AMFileCallback>)

__attribute__((unused)) static void ImActorModelModulesFileDownloadManager_$11_initWithAMFileCallback_(ImActorModelModulesFileDownloadManager_$11 *self, id<AMFileCallback> capture$0);

__attribute__((unused)) static ImActorModelModulesFileDownloadManager_$11 *new_ImActorModelModulesFileDownloadManager_$11_initWithAMFileCallback_(id<AMFileCallback> capture$0) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(ImActorModelModulesFileDownloadManager_$11)

@interface ImActorModelModulesFileDownloadManager_$12 : NSObject < JavaLangRunnable > {
 @public
  id<AMFileCallback> val$callback_;
}

- (void)run;

- (instancetype)initWithAMFileCallback:(id<AMFileCallback>)capture$0;

@end

J2OBJC_EMPTY_STATIC_INIT(ImActorModelModulesFileDownloadManager_$12)

J2OBJC_FIELD_SETTER(ImActorModelModulesFileDownloadManager_$12, val$callback_, id<AMFileCallback>)

__attribute__((unused)) static void ImActorModelModulesFileDownloadManager_$12_initWithAMFileCallback_(ImActorModelModulesFileDownloadManager_$12 *self, id<AMFileCallback> capture$0);

__attribute__((unused)) static ImActorModelModulesFileDownloadManager_$12 *new_ImActorModelModulesFileDownloadManager_$12_initWithAMFileCallback_(id<AMFileCallback> capture$0) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(ImActorModelModulesFileDownloadManager_$12)

@interface ImActorModelModulesFileDownloadManager_$13 : NSObject < JavaLangRunnable > {
 @public
  id<AMFileCallback> val$callback_;
}

- (void)run;

- (instancetype)initWithAMFileCallback:(id<AMFileCallback>)capture$0;

@end

J2OBJC_EMPTY_STATIC_INIT(ImActorModelModulesFileDownloadManager_$13)

J2OBJC_FIELD_SETTER(ImActorModelModulesFileDownloadManager_$13, val$callback_, id<AMFileCallback>)

__attribute__((unused)) static void ImActorModelModulesFileDownloadManager_$13_initWithAMFileCallback_(ImActorModelModulesFileDownloadManager_$13 *self, id<AMFileCallback> capture$0);

__attribute__((unused)) static ImActorModelModulesFileDownloadManager_$13 *new_ImActorModelModulesFileDownloadManager_$13_initWithAMFileCallback_(id<AMFileCallback> capture$0) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(ImActorModelModulesFileDownloadManager_$13)

@interface ImActorModelModulesFileDownloadManager_$14 : NSObject < JavaLangRunnable > {
 @public
  id<AMFileCallback> val$c_;
}

- (void)run;

- (instancetype)initWithAMFileCallback:(id<AMFileCallback>)capture$0;

@end

J2OBJC_EMPTY_STATIC_INIT(ImActorModelModulesFileDownloadManager_$14)

J2OBJC_FIELD_SETTER(ImActorModelModulesFileDownloadManager_$14, val$c_, id<AMFileCallback>)

__attribute__((unused)) static void ImActorModelModulesFileDownloadManager_$14_initWithAMFileCallback_(ImActorModelModulesFileDownloadManager_$14 *self, id<AMFileCallback> capture$0);

__attribute__((unused)) static ImActorModelModulesFileDownloadManager_$14 *new_ImActorModelModulesFileDownloadManager_$14_initWithAMFileCallback_(id<AMFileCallback> capture$0) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(ImActorModelModulesFileDownloadManager_$14)

@interface ImActorModelModulesFileDownloadManager_$15 : NSObject < DKActorCreator > {
 @public
  ImActorModelModulesFileDownloadManager *this$0_;
  ImActorModelModulesFileDownloadManager_QueueItem *val$finalPendingQueue_;
}

- (ImActorModelModulesFileDownloadTask *)create;

- (instancetype)initWithImActorModelModulesFileDownloadManager:(ImActorModelModulesFileDownloadManager *)outer$
          withImActorModelModulesFileDownloadManager_QueueItem:(ImActorModelModulesFileDownloadManager_QueueItem *)capture$0;

@end

J2OBJC_EMPTY_STATIC_INIT(ImActorModelModulesFileDownloadManager_$15)

J2OBJC_FIELD_SETTER(ImActorModelModulesFileDownloadManager_$15, this$0_, ImActorModelModulesFileDownloadManager *)
J2OBJC_FIELD_SETTER(ImActorModelModulesFileDownloadManager_$15, val$finalPendingQueue_, ImActorModelModulesFileDownloadManager_QueueItem *)

__attribute__((unused)) static void ImActorModelModulesFileDownloadManager_$15_initWithImActorModelModulesFileDownloadManager_withImActorModelModulesFileDownloadManager_QueueItem_(ImActorModelModulesFileDownloadManager_$15 *self, ImActorModelModulesFileDownloadManager *outer$, ImActorModelModulesFileDownloadManager_QueueItem *capture$0);

__attribute__((unused)) static ImActorModelModulesFileDownloadManager_$15 *new_ImActorModelModulesFileDownloadManager_$15_initWithImActorModelModulesFileDownloadManager_withImActorModelModulesFileDownloadManager_QueueItem_(ImActorModelModulesFileDownloadManager *outer$, ImActorModelModulesFileDownloadManager_QueueItem *capture$0) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(ImActorModelModulesFileDownloadManager_$15)

@interface ImActorModelModulesFileDownloadManager_$16 : NSObject < JavaLangRunnable > {
 @public
  id<AMFileCallback> val$fileCallback_;
  jfloat val$progress_;
}

- (void)run;

- (instancetype)initWithAMFileCallback:(id<AMFileCallback>)capture$0
                             withFloat:(jfloat)capture$1;

@end

J2OBJC_EMPTY_STATIC_INIT(ImActorModelModulesFileDownloadManager_$16)

J2OBJC_FIELD_SETTER(ImActorModelModulesFileDownloadManager_$16, val$fileCallback_, id<AMFileCallback>)

__attribute__((unused)) static void ImActorModelModulesFileDownloadManager_$16_initWithAMFileCallback_withFloat_(ImActorModelModulesFileDownloadManager_$16 *self, id<AMFileCallback> capture$0, jfloat capture$1);

__attribute__((unused)) static ImActorModelModulesFileDownloadManager_$16 *new_ImActorModelModulesFileDownloadManager_$16_initWithAMFileCallback_withFloat_(id<AMFileCallback> capture$0, jfloat capture$1) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(ImActorModelModulesFileDownloadManager_$16)

@interface ImActorModelModulesFileDownloadManager_$17 : NSObject < JavaLangRunnable > {
 @public
  id<AMFileCallback> val$fileCallback_;
  id<AMFileSystemReference> val$reference_;
}

- (void)run;

- (instancetype)initWithAMFileCallback:(id<AMFileCallback>)capture$0
             withAMFileSystemReference:(id<AMFileSystemReference>)capture$1;

@end

J2OBJC_EMPTY_STATIC_INIT(ImActorModelModulesFileDownloadManager_$17)

J2OBJC_FIELD_SETTER(ImActorModelModulesFileDownloadManager_$17, val$fileCallback_, id<AMFileCallback>)
J2OBJC_FIELD_SETTER(ImActorModelModulesFileDownloadManager_$17, val$reference_, id<AMFileSystemReference>)

__attribute__((unused)) static void ImActorModelModulesFileDownloadManager_$17_initWithAMFileCallback_withAMFileSystemReference_(ImActorModelModulesFileDownloadManager_$17 *self, id<AMFileCallback> capture$0, id<AMFileSystemReference> capture$1);

__attribute__((unused)) static ImActorModelModulesFileDownloadManager_$17 *new_ImActorModelModulesFileDownloadManager_$17_initWithAMFileCallback_withAMFileSystemReference_(id<AMFileCallback> capture$0, id<AMFileSystemReference> capture$1) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(ImActorModelModulesFileDownloadManager_$17)

@interface ImActorModelModulesFileDownloadManager_$18 : NSObject < JavaLangRunnable > {
 @public
  id<AMFileCallback> val$fileCallback_;
}

- (void)run;

- (instancetype)initWithAMFileCallback:(id<AMFileCallback>)capture$0;

@end

J2OBJC_EMPTY_STATIC_INIT(ImActorModelModulesFileDownloadManager_$18)

J2OBJC_FIELD_SETTER(ImActorModelModulesFileDownloadManager_$18, val$fileCallback_, id<AMFileCallback>)

__attribute__((unused)) static void ImActorModelModulesFileDownloadManager_$18_initWithAMFileCallback_(ImActorModelModulesFileDownloadManager_$18 *self, id<AMFileCallback> capture$0);

__attribute__((unused)) static ImActorModelModulesFileDownloadManager_$18 *new_ImActorModelModulesFileDownloadManager_$18_initWithAMFileCallback_(id<AMFileCallback> capture$0) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(ImActorModelModulesFileDownloadManager_$18)

@implementation ImActorModelModulesFileDownloadManager

- (instancetype)initWithImActorModelModulesModules:(ImActorModelModulesModules *)messenger {
  ImActorModelModulesFileDownloadManager_initWithImActorModelModulesModules_(self, messenger);
  return self;
}

- (void)preStart {
  [super preStart];
  downloaded_ = [((ImActorModelModulesFiles *) nil_chk([((ImActorModelModulesModules *) nil_chk([self modules])) getFilesModule])) getDownloadedEngine];
  LOG_ = [((AMConfiguration *) nil_chk([self config])) isEnableFilesLogging];
}

- (void)requestStateWithLong:(jlong)fileId
          withAMFileCallback:(id<AMFileCallback>)callback {
  if (LOG_) {
    AMLog_dWithNSString_withNSString_(ImActorModelModulesFileDownloadManager_TAG_, JreStrcat("$J", @"Requesting state file #", fileId));
  }
  ImActorModelModulesFileEntityDownloaded *downloaded1 = [((id<DKKeyValueEngine>) nil_chk(downloaded_)) getValueWithKey:fileId];
  if (downloaded1 != nil) {
    id<AMFileSystemProvider> provider = [((AMConfiguration *) nil_chk([((ImActorModelModulesModules *) nil_chk([self modules])) getConfiguration])) getFileSystemProvider];
    id<AMFileSystemReference> reference = [((id<AMFileSystemProvider>) nil_chk(provider)) fileFromDescriptor:[downloaded1 getDescriptor]];
    jboolean isExist = [((id<AMFileSystemReference>) nil_chk(reference)) isExist];
    jint fileSize = [reference getSize];
    if (isExist && fileSize == [downloaded1 getFileSize]) {
      if (LOG_) {
        AMLog_dWithNSString_withNSString_(ImActorModelModulesFileDownloadManager_TAG_, @"- Downloaded");
      }
      id<AMFileSystemReference> fileSystemReference = [((id<AMFileSystemProvider>) nil_chk([((AMConfiguration *) nil_chk([((ImActorModelModulesModules *) nil_chk([self modules])) getConfiguration])) getFileSystemProvider])) fileFromDescriptor:[downloaded1 getDescriptor]];
      DKEnvironment_dispatchCallbackWithJavaLangRunnable_(new_ImActorModelModulesFileDownloadManager_$1_initWithAMFileCallback_withAMFileSystemReference_(callback, fileSystemReference));
      return;
    }
    else {
      if (LOG_) {
        AMLog_dWithNSString_withNSString_(ImActorModelModulesFileDownloadManager_TAG_, @"- File is corrupted");
        if (!isExist) {
          AMLog_dWithNSString_withNSString_(ImActorModelModulesFileDownloadManager_TAG_, @"- File not found");
        }
        if (fileSize != [downloaded1 getFileSize]) {
          AMLog_dWithNSString_withNSString_(ImActorModelModulesFileDownloadManager_TAG_, JreStrcat("$I$I", @"- Incorrect file size. Expected: ", [downloaded1 getFileSize], @", got: ", fileSize));
        }
      }
      [downloaded_ removeItemWithKey:[downloaded1 getFileId]];
    }
  }
  ImActorModelModulesFileDownloadManager_QueueItem *queueItem = ImActorModelModulesFileDownloadManager_findItemWithLong_(self, fileId);
  if (queueItem == nil) {
    DKEnvironment_dispatchCallbackWithJavaLangRunnable_(new_ImActorModelModulesFileDownloadManager_$2_initWithAMFileCallback_(callback));
  }
  else {
    if (queueItem->isStarted_) {
      jfloat progress = queueItem->progress_;
      DKEnvironment_dispatchCallbackWithJavaLangRunnable_(new_ImActorModelModulesFileDownloadManager_$3_initWithAMFileCallback_withFloat_(callback, progress));
    }
    else if (queueItem->isStopped_) {
      DKEnvironment_dispatchCallbackWithJavaLangRunnable_(new_ImActorModelModulesFileDownloadManager_$4_initWithAMFileCallback_(callback));
    }
    else {
      DKEnvironment_dispatchCallbackWithJavaLangRunnable_(new_ImActorModelModulesFileDownloadManager_$5_initWithAMFileCallback_(callback));
    }
  }
}

- (void)bindDownloadWithAMFileReference:(AMFileReference *)fileReference
                            withBoolean:(jboolean)autoStart
                     withAMFileCallback:(id<AMFileCallback>)callback {
  if (LOG_) {
    AMLog_dWithNSString_withNSString_(ImActorModelModulesFileDownloadManager_TAG_, JreStrcat("$J", @"Binding file #", [((AMFileReference *) nil_chk(fileReference)) getFileId]));
  }
  ImActorModelModulesFileEntityDownloaded *downloaded1 = [((id<DKKeyValueEngine>) nil_chk(downloaded_)) getValueWithKey:[((AMFileReference *) nil_chk(fileReference)) getFileId]];
  if (downloaded1 != nil) {
    id<AMFileSystemProvider> provider = [((AMConfiguration *) nil_chk([((ImActorModelModulesModules *) nil_chk([self modules])) getConfiguration])) getFileSystemProvider];
    id<AMFileSystemReference> reference = [((id<AMFileSystemProvider>) nil_chk(provider)) fileFromDescriptor:[downloaded1 getDescriptor]];
    jboolean isExist = [((id<AMFileSystemReference>) nil_chk(reference)) isExist];
    jint fileSize = [reference getSize];
    if (isExist && fileSize == [downloaded1 getFileSize]) {
      if (LOG_) {
        AMLog_dWithNSString_withNSString_(ImActorModelModulesFileDownloadManager_TAG_, @"- Downloaded");
      }
      id<AMFileSystemReference> fileSystemReference = [((id<AMFileSystemProvider>) nil_chk([((AMConfiguration *) nil_chk([((ImActorModelModulesModules *) nil_chk([self modules])) getConfiguration])) getFileSystemProvider])) fileFromDescriptor:[downloaded1 getDescriptor]];
      DKEnvironment_dispatchCallbackWithJavaLangRunnable_(new_ImActorModelModulesFileDownloadManager_$6_initWithAMFileCallback_withAMFileSystemReference_(callback, fileSystemReference));
      return;
    }
    else {
      if (LOG_) {
        AMLog_dWithNSString_withNSString_(ImActorModelModulesFileDownloadManager_TAG_, @"- File is corrupted");
        if (!isExist) {
          AMLog_dWithNSString_withNSString_(ImActorModelModulesFileDownloadManager_TAG_, @"- File not found");
        }
        if (fileSize != [downloaded1 getFileSize]) {
          AMLog_dWithNSString_withNSString_(ImActorModelModulesFileDownloadManager_TAG_, JreStrcat("$I$I", @"- Incorrect file size. Expected: ", [downloaded1 getFileSize], @", got: ", fileSize));
        }
      }
      [downloaded_ removeItemWithKey:[downloaded1 getFileId]];
    }
  }
  ImActorModelModulesFileDownloadManager_QueueItem *queueItem = ImActorModelModulesFileDownloadManager_findItemWithLong_(self, [fileReference getFileId]);
  if (queueItem == nil) {
    if (LOG_) {
      AMLog_dWithNSString_withNSString_(ImActorModelModulesFileDownloadManager_TAG_, @"- Adding to queue");
    }
    queueItem = new_ImActorModelModulesFileDownloadManager_QueueItem_initWithImActorModelModulesFileDownloadManager_withAMFileReference_(self, fileReference);
    [((JavaUtilArrayList *) nil_chk(queueItem->callbacks_)) addWithId:callback];
    if (autoStart) {
      queueItem->isStopped_ = NO;
      DKEnvironment_dispatchCallbackWithJavaLangRunnable_(new_ImActorModelModulesFileDownloadManager_$7_initWithAMFileCallback_(callback));
    }
    else {
      queueItem->isStopped_ = YES;
      DKEnvironment_dispatchCallbackWithJavaLangRunnable_(new_ImActorModelModulesFileDownloadManager_$8_initWithAMFileCallback_(callback));
    }
    [((JavaUtilArrayList *) nil_chk(queue_)) addWithInt:0 withId:queueItem];
  }
  else {
    AMLog_dWithNSString_withNSString_(ImActorModelModulesFileDownloadManager_TAG_, @"- Promoting in queue");
    ImActorModelModulesFileDownloadManager_promoteWithLong_(self, [fileReference getFileId]);
    if (![((JavaUtilArrayList *) nil_chk(queueItem->callbacks_)) containsWithId:callback]) {
      [queueItem->callbacks_ addWithId:callback];
    }
    if (queueItem->isStopped_) {
      DKEnvironment_dispatchCallbackWithJavaLangRunnable_(new_ImActorModelModulesFileDownloadManager_$9_initWithAMFileCallback_(callback));
    }
    else {
      if (queueItem->isStarted_) {
        jfloat progress = queueItem->progress_;
        DKEnvironment_dispatchCallbackWithJavaLangRunnable_(new_ImActorModelModulesFileDownloadManager_$10_initWithAMFileCallback_withFloat_(callback, progress));
      }
      else {
        DKEnvironment_dispatchCallbackWithJavaLangRunnable_(new_ImActorModelModulesFileDownloadManager_$11_initWithAMFileCallback_(callback));
      }
    }
  }
  ImActorModelModulesFileDownloadManager_checkQueue(self);
}

- (void)startDownloadWithAMFileReference:(AMFileReference *)fileReference {
  if (LOG_) {
    AMLog_dWithNSString_withNSString_(ImActorModelModulesFileDownloadManager_TAG_, JreStrcat("$J", @"Starting download #", [((AMFileReference *) nil_chk(fileReference)) getFileId]));
  }
  ImActorModelModulesFileDownloadManager_QueueItem *queueItem = ImActorModelModulesFileDownloadManager_findItemWithLong_(self, [((AMFileReference *) nil_chk(fileReference)) getFileId]);
  if (queueItem == nil) {
    if (LOG_) {
      AMLog_dWithNSString_withNSString_(ImActorModelModulesFileDownloadManager_TAG_, @"- Adding to queue");
    }
    queueItem = new_ImActorModelModulesFileDownloadManager_QueueItem_initWithImActorModelModulesFileDownloadManager_withAMFileReference_(self, fileReference);
    queueItem->isStopped_ = NO;
    [((JavaUtilArrayList *) nil_chk(queue_)) addWithInt:0 withId:queueItem];
  }
  else {
    if (LOG_) {
      AMLog_dWithNSString_withNSString_(ImActorModelModulesFileDownloadManager_TAG_, @"- Promoting in queue");
    }
    if (queueItem->isStopped_) {
      queueItem->isStopped_ = NO;
      for (id<AMFileCallback> __strong callback in nil_chk(queueItem->callbacks_)) {
        DKEnvironment_dispatchCallbackWithJavaLangRunnable_(new_ImActorModelModulesFileDownloadManager_$12_initWithAMFileCallback_(callback));
      }
    }
    ImActorModelModulesFileDownloadManager_promoteWithLong_(self, [fileReference getFileId]);
  }
  ImActorModelModulesFileDownloadManager_checkQueue(self);
}

- (void)cancelDownloadWithLong:(jlong)fileId {
  if (LOG_) {
    AMLog_dWithNSString_withNSString_(ImActorModelModulesFileDownloadManager_TAG_, JreStrcat("$J", @"Stopping download #", fileId));
  }
  ImActorModelModulesFileDownloadManager_QueueItem *queueItem = ImActorModelModulesFileDownloadManager_findItemWithLong_(self, fileId);
  if (queueItem == nil) {
    if (LOG_) {
      AMLog_dWithNSString_withNSString_(ImActorModelModulesFileDownloadManager_TAG_, @"- Not present in queue");
    }
  }
  else {
    if (queueItem->isStarted_) {
      if (LOG_) {
        AMLog_dWithNSString_withNSString_(ImActorModelModulesFileDownloadManager_TAG_, @"- Stopping actor");
      }
      [((DKActorRef *) nil_chk(queueItem->taskRef_)) sendWithId:ImActorModelDroidkitActorsMessagesPoisonPill_get_INSTANCE_()];
      queueItem->taskRef_ = nil;
      queueItem->isStarted_ = NO;
    }
    if (LOG_) {
      AMLog_dWithNSString_withNSString_(ImActorModelModulesFileDownloadManager_TAG_, @"- Marking as stopped");
    }
    queueItem->isStopped_ = YES;
    for (id<AMFileCallback> __strong callback in nil_chk(queueItem->callbacks_)) {
      DKEnvironment_dispatchCallbackWithJavaLangRunnable_(new_ImActorModelModulesFileDownloadManager_$13_initWithAMFileCallback_(callback));
    }
  }
  ImActorModelModulesFileDownloadManager_checkQueue(self);
}

- (void)unbindDownloadWithLong:(jlong)fileId
                   withBoolean:(jboolean)autoCancel
            withAMFileCallback:(id<AMFileCallback>)callback {
  if (LOG_) {
    AMLog_dWithNSString_withNSString_(ImActorModelModulesFileDownloadManager_TAG_, JreStrcat("$J", @"Unbind file #", fileId));
  }
  ImActorModelModulesFileDownloadManager_QueueItem *queueItem = ImActorModelModulesFileDownloadManager_findItemWithLong_(self, fileId);
  if (queueItem == nil) {
    if (LOG_) {
      AMLog_dWithNSString_withNSString_(ImActorModelModulesFileDownloadManager_TAG_, @"- Not present in queue");
    }
  }
  else {
    if (autoCancel) {
      if (queueItem->isStarted_) {
        if (LOG_) {
          AMLog_dWithNSString_withNSString_(ImActorModelModulesFileDownloadManager_TAG_, @"- Stopping actor");
        }
        [((DKActorRef *) nil_chk(queueItem->taskRef_)) sendWithId:ImActorModelDroidkitActorsMessagesPoisonPill_get_INSTANCE_()];
        queueItem->taskRef_ = nil;
        queueItem->isStarted_ = NO;
      }
      if (!queueItem->isStopped_) {
        if (LOG_) {
          AMLog_dWithNSString_withNSString_(ImActorModelModulesFileDownloadManager_TAG_, @"- Marking as stopped");
        }
        queueItem->isStopped_ = YES;
        for (id<AMFileCallback> __strong c in nil_chk(queueItem->callbacks_)) {
          if (c != callback) {
            DKEnvironment_dispatchCallbackWithJavaLangRunnable_(new_ImActorModelModulesFileDownloadManager_$14_initWithAMFileCallback_(c));
          }
        }
      }
      [((JavaUtilArrayList *) nil_chk(queue_)) removeWithId:queueItem];
    }
    else {
      if (LOG_) {
        AMLog_dWithNSString_withNSString_(ImActorModelModulesFileDownloadManager_TAG_, @"- Removing callback");
      }
      [((JavaUtilArrayList *) nil_chk(queueItem->callbacks_)) removeWithId:callback];
    }
  }
  ImActorModelModulesFileDownloadManager_checkQueue(self);
}

- (void)checkQueue {
  ImActorModelModulesFileDownloadManager_checkQueue(self);
}

- (void)onDownloadProgressWithLong:(jlong)fileId
                         withFloat:(jfloat)progress {
  if (LOG_) {
    AMLog_dWithNSString_withNSString_(ImActorModelModulesFileDownloadManager_TAG_, JreStrcat("$JCF", @"onDownloadProgress file #", fileId, ' ', progress));
  }
  ImActorModelModulesFileDownloadManager_QueueItem *queueItem = ImActorModelModulesFileDownloadManager_findItemWithLong_(self, fileId);
  if (queueItem == nil) {
    return;
  }
  if (!((ImActorModelModulesFileDownloadManager_QueueItem *) nil_chk(queueItem))->isStarted_) {
    return;
  }
  queueItem->progress_ = progress;
  for (id<AMFileCallback> __strong fileCallback in nil_chk(queueItem->callbacks_)) {
    DKEnvironment_dispatchCallbackWithJavaLangRunnable_(new_ImActorModelModulesFileDownloadManager_$16_initWithAMFileCallback_withFloat_(fileCallback, progress));
  }
}

- (void)onDownloadedWithLong:(jlong)fileId
   withAMFileSystemReference:(id<AMFileSystemReference>)reference {
  if (LOG_) {
    AMLog_dWithNSString_withNSString_(ImActorModelModulesFileDownloadManager_TAG_, JreStrcat("$J", @"onDownloaded file #", fileId));
  }
  ImActorModelModulesFileDownloadManager_QueueItem *queueItem = ImActorModelModulesFileDownloadManager_findItemWithLong_(self, fileId);
  if (queueItem == nil) {
    return;
  }
  if (!((ImActorModelModulesFileDownloadManager_QueueItem *) nil_chk(queueItem))->isStarted_) {
    return;
  }
  [((id<DKKeyValueEngine>) nil_chk(downloaded_)) addOrUpdateItem:new_ImActorModelModulesFileEntityDownloaded_initWithLong_withInt_withNSString_([((AMFileReference *) nil_chk(queueItem->fileReference_)) getFileId], [queueItem->fileReference_ getFileSize], [((id<AMFileSystemReference>) nil_chk(reference)) getDescriptor])];
  [((JavaUtilArrayList *) nil_chk(queue_)) removeWithId:queueItem];
  [((DKActorRef *) nil_chk(queueItem->taskRef_)) sendWithId:ImActorModelDroidkitActorsMessagesPoisonPill_get_INSTANCE_()];
  for (id<AMFileCallback> __strong fileCallback in nil_chk(queueItem->callbacks_)) {
    DKEnvironment_dispatchCallbackWithJavaLangRunnable_(new_ImActorModelModulesFileDownloadManager_$17_initWithAMFileCallback_withAMFileSystemReference_(fileCallback, reference));
  }
  ImActorModelModulesFileDownloadManager_checkQueue(self);
}

- (void)onDownloadErrorWithLong:(jlong)fileId {
  if (LOG_) {
    AMLog_dWithNSString_withNSString_(ImActorModelModulesFileDownloadManager_TAG_, JreStrcat("$J", @"onDownloadError file #", fileId));
  }
  ImActorModelModulesFileDownloadManager_QueueItem *queueItem = ImActorModelModulesFileDownloadManager_findItemWithLong_(self, fileId);
  if (queueItem == nil) {
    return;
  }
  if (!((ImActorModelModulesFileDownloadManager_QueueItem *) nil_chk(queueItem))->isStarted_) {
    return;
  }
  [((DKActorRef *) nil_chk(queueItem->taskRef_)) sendWithId:ImActorModelDroidkitActorsMessagesPoisonPill_get_INSTANCE_()];
  queueItem->isStopped_ = YES;
  queueItem->isStarted_ = NO;
  for (id<AMFileCallback> __strong fileCallback in nil_chk(queueItem->callbacks_)) {
    DKEnvironment_dispatchCallbackWithJavaLangRunnable_(new_ImActorModelModulesFileDownloadManager_$18_initWithAMFileCallback_(fileCallback));
  }
  ImActorModelModulesFileDownloadManager_checkQueue(self);
}

- (ImActorModelModulesFileDownloadManager_QueueItem *)findItemWithLong:(jlong)id_ {
  return ImActorModelModulesFileDownloadManager_findItemWithLong_(self, id_);
}

- (void)promoteWithLong:(jlong)id_ {
  ImActorModelModulesFileDownloadManager_promoteWithLong_(self, id_);
}

- (void)onReceiveWithId:(id)message {
  if ([message isKindOfClass:[ImActorModelModulesFileDownloadManager_BindDownload class]]) {
    ImActorModelModulesFileDownloadManager_BindDownload *requestDownload = (ImActorModelModulesFileDownloadManager_BindDownload *) check_class_cast(message, [ImActorModelModulesFileDownloadManager_BindDownload class]);
    [self bindDownloadWithAMFileReference:[((ImActorModelModulesFileDownloadManager_BindDownload *) nil_chk(requestDownload)) getFileReference] withBoolean:[requestDownload isAutostart] withAMFileCallback:[requestDownload getCallback]];
  }
  else if ([message isKindOfClass:[ImActorModelModulesFileDownloadManager_CancelDownload class]]) {
    ImActorModelModulesFileDownloadManager_CancelDownload *cancelDownload = (ImActorModelModulesFileDownloadManager_CancelDownload *) check_class_cast(message, [ImActorModelModulesFileDownloadManager_CancelDownload class]);
    [self cancelDownloadWithLong:[((ImActorModelModulesFileDownloadManager_CancelDownload *) nil_chk(cancelDownload)) getFileId]];
  }
  else if ([message isKindOfClass:[ImActorModelModulesFileDownloadManager_UnbindDownload class]]) {
    ImActorModelModulesFileDownloadManager_UnbindDownload *unbindDownload = (ImActorModelModulesFileDownloadManager_UnbindDownload *) check_class_cast(message, [ImActorModelModulesFileDownloadManager_UnbindDownload class]);
    [self unbindDownloadWithLong:[((ImActorModelModulesFileDownloadManager_UnbindDownload *) nil_chk(unbindDownload)) getFileId] withBoolean:[unbindDownload isAutocancel] withAMFileCallback:[unbindDownload getCallback]];
  }
  else if ([message isKindOfClass:[ImActorModelModulesFileDownloadManager_StartDownload class]]) {
    ImActorModelModulesFileDownloadManager_StartDownload *startDownload = (ImActorModelModulesFileDownloadManager_StartDownload *) check_class_cast(message, [ImActorModelModulesFileDownloadManager_StartDownload class]);
    [self startDownloadWithAMFileReference:[((ImActorModelModulesFileDownloadManager_StartDownload *) nil_chk(startDownload)) getFileReference]];
  }
  else if ([message isKindOfClass:[ImActorModelModulesFileDownloadManager_OnDownloadProgress class]]) {
    ImActorModelModulesFileDownloadManager_OnDownloadProgress *downloadProgress = (ImActorModelModulesFileDownloadManager_OnDownloadProgress *) check_class_cast(message, [ImActorModelModulesFileDownloadManager_OnDownloadProgress class]);
    [self onDownloadProgressWithLong:[((ImActorModelModulesFileDownloadManager_OnDownloadProgress *) nil_chk(downloadProgress)) getFileId] withFloat:[downloadProgress getProgress]];
  }
  else if ([message isKindOfClass:[ImActorModelModulesFileDownloadManager_OnDownloaded class]]) {
    ImActorModelModulesFileDownloadManager_OnDownloaded *onDownloaded = (ImActorModelModulesFileDownloadManager_OnDownloaded *) check_class_cast(message, [ImActorModelModulesFileDownloadManager_OnDownloaded class]);
    [self onDownloadedWithLong:[((ImActorModelModulesFileDownloadManager_OnDownloaded *) nil_chk(onDownloaded)) getFileId] withAMFileSystemReference:[onDownloaded getReference]];
  }
  else if ([message isKindOfClass:[ImActorModelModulesFileDownloadManager_OnDownloadedError class]]) {
    ImActorModelModulesFileDownloadManager_OnDownloadedError *error = (ImActorModelModulesFileDownloadManager_OnDownloadedError *) check_class_cast(message, [ImActorModelModulesFileDownloadManager_OnDownloadedError class]);
    [self onDownloadErrorWithLong:[((ImActorModelModulesFileDownloadManager_OnDownloadedError *) nil_chk(error)) getFileId]];
  }
  else if ([message isKindOfClass:[ImActorModelModulesFileDownloadManager_RequestState class]]) {
    ImActorModelModulesFileDownloadManager_RequestState *requestState = (ImActorModelModulesFileDownloadManager_RequestState *) check_class_cast(message, [ImActorModelModulesFileDownloadManager_RequestState class]);
    [self requestStateWithLong:[((ImActorModelModulesFileDownloadManager_RequestState *) nil_chk(requestState)) getFileId] withAMFileCallback:[requestState getCallback]];
  }
  else {
    [self dropWithId:message];
  }
}

@end

void ImActorModelModulesFileDownloadManager_initWithImActorModelModulesModules_(ImActorModelModulesFileDownloadManager *self, ImActorModelModulesModules *messenger) {
  (void) ImActorModelModulesUtilsModuleActor_initWithImActorModelModulesModules_(self, messenger);
  self->queue_ = new_JavaUtilArrayList_init();
}

ImActorModelModulesFileDownloadManager *new_ImActorModelModulesFileDownloadManager_initWithImActorModelModulesModules_(ImActorModelModulesModules *messenger) {
  ImActorModelModulesFileDownloadManager *self = [ImActorModelModulesFileDownloadManager alloc];
  ImActorModelModulesFileDownloadManager_initWithImActorModelModulesModules_(self, messenger);
  return self;
}

void ImActorModelModulesFileDownloadManager_checkQueue(ImActorModelModulesFileDownloadManager *self) {
  if (self->LOG_) {
    AMLog_dWithNSString_withNSString_(ImActorModelModulesFileDownloadManager_TAG_, @"- Checking queue");
  }
  jint activeDownloads = 0;
  for (ImActorModelModulesFileDownloadManager_QueueItem * __strong queueItem in nil_chk(self->queue_)) {
    if (((ImActorModelModulesFileDownloadManager_QueueItem *) nil_chk(queueItem))->isStarted_) {
      activeDownloads++;
    }
  }
  if (activeDownloads >= ImActorModelModulesFileDownloadManager_SIM_MAX_DOWNLOADS) {
    if (self->LOG_) {
      AMLog_dWithNSString_withNSString_(ImActorModelModulesFileDownloadManager_TAG_, @"- Already have max number of simultaneous downloads");
    }
    return;
  }
  ImActorModelModulesFileDownloadManager_QueueItem *pendingQueue = nil;
  for (ImActorModelModulesFileDownloadManager_QueueItem * __strong queueItem in self->queue_) {
    if (!((ImActorModelModulesFileDownloadManager_QueueItem *) nil_chk(queueItem))->isStarted_ && !queueItem->isStopped_) {
      pendingQueue = queueItem;
      break;
    }
  }
  if (pendingQueue == nil) {
    if (self->LOG_) {
      AMLog_dWithNSString_withNSString_(ImActorModelModulesFileDownloadManager_TAG_, @"- No work for downloading");
    }
    return;
  }
  if (self->LOG_) {
    AMLog_dWithNSString_withNSString_(ImActorModelModulesFileDownloadManager_TAG_, JreStrcat("$J", @"- Starting download file #", [((AMFileReference *) nil_chk(((ImActorModelModulesFileDownloadManager_QueueItem *) nil_chk(pendingQueue))->fileReference_)) getFileId]));
  }
  ((ImActorModelModulesFileDownloadManager_QueueItem *) nil_chk(pendingQueue))->isStarted_ = YES;
  ImActorModelModulesFileDownloadManager_QueueItem *finalPendingQueue = pendingQueue;
  pendingQueue->taskRef_ = [((DKActorSystem *) nil_chk([self system])) actorOfWithDKProps:[((DKProps *) nil_chk(DKProps_createWithIOSClass_withDKActorCreator_(ImActorModelModulesFileDownloadTask_class_(), new_ImActorModelModulesFileDownloadManager_$15_initWithImActorModelModulesFileDownloadManager_withImActorModelModulesFileDownloadManager_QueueItem_(self, finalPendingQueue)))) changeDispatcherWithNSString:@"heavy"] withNSString:JreStrcat("$J", @"actor/download/task_", ImActorModelModulesUtilsRandomUtils_nextRid())];
}

ImActorModelModulesFileDownloadManager_QueueItem *ImActorModelModulesFileDownloadManager_findItemWithLong_(ImActorModelModulesFileDownloadManager *self, jlong id_) {
  for (ImActorModelModulesFileDownloadManager_QueueItem * __strong q in nil_chk(self->queue_)) {
    if ([((AMFileReference *) nil_chk(((ImActorModelModulesFileDownloadManager_QueueItem *) nil_chk(q))->fileReference_)) getFileId] == id_) {
      return q;
    }
  }
  return nil;
}

void ImActorModelModulesFileDownloadManager_promoteWithLong_(ImActorModelModulesFileDownloadManager *self, jlong id_) {
  for (ImActorModelModulesFileDownloadManager_QueueItem * __strong q in nil_chk(self->queue_)) {
    if ([((AMFileReference *) nil_chk(((ImActorModelModulesFileDownloadManager_QueueItem *) nil_chk(q))->fileReference_)) getFileId] == id_) {
      if (!q->isStarted_) {
        [self->queue_ removeWithId:q];
        [self->queue_ addWithInt:0 withId:q];
      }
      return;
    }
  }
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ImActorModelModulesFileDownloadManager)

@implementation ImActorModelModulesFileDownloadManager_QueueItem

- (instancetype)initWithImActorModelModulesFileDownloadManager:(ImActorModelModulesFileDownloadManager *)outer$
                                           withAMFileReference:(AMFileReference *)fileReference {
  ImActorModelModulesFileDownloadManager_QueueItem_initWithImActorModelModulesFileDownloadManager_withAMFileReference_(self, outer$, fileReference);
  return self;
}

@end

void ImActorModelModulesFileDownloadManager_QueueItem_initWithImActorModelModulesFileDownloadManager_withAMFileReference_(ImActorModelModulesFileDownloadManager_QueueItem *self, ImActorModelModulesFileDownloadManager *outer$, AMFileReference *fileReference) {
  (void) NSObject_init(self);
  self->callbacks_ = new_JavaUtilArrayList_init();
  self->fileReference_ = fileReference;
}

ImActorModelModulesFileDownloadManager_QueueItem *new_ImActorModelModulesFileDownloadManager_QueueItem_initWithImActorModelModulesFileDownloadManager_withAMFileReference_(ImActorModelModulesFileDownloadManager *outer$, AMFileReference *fileReference) {
  ImActorModelModulesFileDownloadManager_QueueItem *self = [ImActorModelModulesFileDownloadManager_QueueItem alloc];
  ImActorModelModulesFileDownloadManager_QueueItem_initWithImActorModelModulesFileDownloadManager_withAMFileReference_(self, outer$, fileReference);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ImActorModelModulesFileDownloadManager_QueueItem)

@implementation ImActorModelModulesFileDownloadManager_RequestState

- (instancetype)initWithLong:(jlong)fileId
          withAMFileCallback:(id<AMFileCallback>)callback {
  ImActorModelModulesFileDownloadManager_RequestState_initWithLong_withAMFileCallback_(self, fileId, callback);
  return self;
}

- (jlong)getFileId {
  return fileId_;
}

- (id<AMFileCallback>)getCallback {
  return callback_;
}

@end

void ImActorModelModulesFileDownloadManager_RequestState_initWithLong_withAMFileCallback_(ImActorModelModulesFileDownloadManager_RequestState *self, jlong fileId, id<AMFileCallback> callback) {
  (void) NSObject_init(self);
  self->fileId_ = fileId;
  self->callback_ = callback;
}

ImActorModelModulesFileDownloadManager_RequestState *new_ImActorModelModulesFileDownloadManager_RequestState_initWithLong_withAMFileCallback_(jlong fileId, id<AMFileCallback> callback) {
  ImActorModelModulesFileDownloadManager_RequestState *self = [ImActorModelModulesFileDownloadManager_RequestState alloc];
  ImActorModelModulesFileDownloadManager_RequestState_initWithLong_withAMFileCallback_(self, fileId, callback);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ImActorModelModulesFileDownloadManager_RequestState)

@implementation ImActorModelModulesFileDownloadManager_BindDownload

- (instancetype)initWithAMFileReference:(AMFileReference *)fileReference
                            withBoolean:(jboolean)isAutostart
                     withAMFileCallback:(id<AMFileCallback>)callback {
  ImActorModelModulesFileDownloadManager_BindDownload_initWithAMFileReference_withBoolean_withAMFileCallback_(self, fileReference, isAutostart, callback);
  return self;
}

- (AMFileReference *)getFileReference {
  return fileReference_;
}

- (jboolean)isAutostart {
  return isAutostart__;
}

- (id<AMFileCallback>)getCallback {
  return callback_;
}

@end

void ImActorModelModulesFileDownloadManager_BindDownload_initWithAMFileReference_withBoolean_withAMFileCallback_(ImActorModelModulesFileDownloadManager_BindDownload *self, AMFileReference *fileReference, jboolean isAutostart, id<AMFileCallback> callback) {
  (void) NSObject_init(self);
  self->fileReference_ = fileReference;
  self->isAutostart__ = isAutostart;
  self->callback_ = callback;
}

ImActorModelModulesFileDownloadManager_BindDownload *new_ImActorModelModulesFileDownloadManager_BindDownload_initWithAMFileReference_withBoolean_withAMFileCallback_(AMFileReference *fileReference, jboolean isAutostart, id<AMFileCallback> callback) {
  ImActorModelModulesFileDownloadManager_BindDownload *self = [ImActorModelModulesFileDownloadManager_BindDownload alloc];
  ImActorModelModulesFileDownloadManager_BindDownload_initWithAMFileReference_withBoolean_withAMFileCallback_(self, fileReference, isAutostart, callback);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ImActorModelModulesFileDownloadManager_BindDownload)

@implementation ImActorModelModulesFileDownloadManager_StartDownload

- (instancetype)initWithAMFileReference:(AMFileReference *)fileReference {
  ImActorModelModulesFileDownloadManager_StartDownload_initWithAMFileReference_(self, fileReference);
  return self;
}

- (AMFileReference *)getFileReference {
  return fileReference_;
}

@end

void ImActorModelModulesFileDownloadManager_StartDownload_initWithAMFileReference_(ImActorModelModulesFileDownloadManager_StartDownload *self, AMFileReference *fileReference) {
  (void) NSObject_init(self);
  self->fileReference_ = fileReference;
}

ImActorModelModulesFileDownloadManager_StartDownload *new_ImActorModelModulesFileDownloadManager_StartDownload_initWithAMFileReference_(AMFileReference *fileReference) {
  ImActorModelModulesFileDownloadManager_StartDownload *self = [ImActorModelModulesFileDownloadManager_StartDownload alloc];
  ImActorModelModulesFileDownloadManager_StartDownload_initWithAMFileReference_(self, fileReference);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ImActorModelModulesFileDownloadManager_StartDownload)

@implementation ImActorModelModulesFileDownloadManager_CancelDownload

- (instancetype)initWithLong:(jlong)fileId {
  ImActorModelModulesFileDownloadManager_CancelDownload_initWithLong_(self, fileId);
  return self;
}

- (jlong)getFileId {
  return fileId_;
}

@end

void ImActorModelModulesFileDownloadManager_CancelDownload_initWithLong_(ImActorModelModulesFileDownloadManager_CancelDownload *self, jlong fileId) {
  (void) NSObject_init(self);
  self->fileId_ = fileId;
}

ImActorModelModulesFileDownloadManager_CancelDownload *new_ImActorModelModulesFileDownloadManager_CancelDownload_initWithLong_(jlong fileId) {
  ImActorModelModulesFileDownloadManager_CancelDownload *self = [ImActorModelModulesFileDownloadManager_CancelDownload alloc];
  ImActorModelModulesFileDownloadManager_CancelDownload_initWithLong_(self, fileId);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ImActorModelModulesFileDownloadManager_CancelDownload)

@implementation ImActorModelModulesFileDownloadManager_UnbindDownload

- (instancetype)initWithLong:(jlong)fileId
                 withBoolean:(jboolean)isAutocancel
          withAMFileCallback:(id<AMFileCallback>)callback {
  ImActorModelModulesFileDownloadManager_UnbindDownload_initWithLong_withBoolean_withAMFileCallback_(self, fileId, isAutocancel, callback);
  return self;
}

- (jlong)getFileId {
  return fileId_;
}

- (id<AMFileCallback>)getCallback {
  return callback_;
}

- (jboolean)isAutocancel {
  return isAutocancel__;
}

@end

void ImActorModelModulesFileDownloadManager_UnbindDownload_initWithLong_withBoolean_withAMFileCallback_(ImActorModelModulesFileDownloadManager_UnbindDownload *self, jlong fileId, jboolean isAutocancel, id<AMFileCallback> callback) {
  (void) NSObject_init(self);
  self->fileId_ = fileId;
  self->isAutocancel__ = isAutocancel;
  self->callback_ = callback;
}

ImActorModelModulesFileDownloadManager_UnbindDownload *new_ImActorModelModulesFileDownloadManager_UnbindDownload_initWithLong_withBoolean_withAMFileCallback_(jlong fileId, jboolean isAutocancel, id<AMFileCallback> callback) {
  ImActorModelModulesFileDownloadManager_UnbindDownload *self = [ImActorModelModulesFileDownloadManager_UnbindDownload alloc];
  ImActorModelModulesFileDownloadManager_UnbindDownload_initWithLong_withBoolean_withAMFileCallback_(self, fileId, isAutocancel, callback);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ImActorModelModulesFileDownloadManager_UnbindDownload)

@implementation ImActorModelModulesFileDownloadManager_OnDownloadProgress

- (instancetype)initWithLong:(jlong)fileId
                   withFloat:(jfloat)progress {
  ImActorModelModulesFileDownloadManager_OnDownloadProgress_initWithLong_withFloat_(self, fileId, progress);
  return self;
}

- (jlong)getFileId {
  return fileId_;
}

- (jfloat)getProgress {
  return progress_;
}

@end

void ImActorModelModulesFileDownloadManager_OnDownloadProgress_initWithLong_withFloat_(ImActorModelModulesFileDownloadManager_OnDownloadProgress *self, jlong fileId, jfloat progress) {
  (void) NSObject_init(self);
  self->fileId_ = fileId;
  self->progress_ = progress;
}

ImActorModelModulesFileDownloadManager_OnDownloadProgress *new_ImActorModelModulesFileDownloadManager_OnDownloadProgress_initWithLong_withFloat_(jlong fileId, jfloat progress) {
  ImActorModelModulesFileDownloadManager_OnDownloadProgress *self = [ImActorModelModulesFileDownloadManager_OnDownloadProgress alloc];
  ImActorModelModulesFileDownloadManager_OnDownloadProgress_initWithLong_withFloat_(self, fileId, progress);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ImActorModelModulesFileDownloadManager_OnDownloadProgress)

@implementation ImActorModelModulesFileDownloadManager_OnDownloaded

- (instancetype)initWithLong:(jlong)fileId
   withAMFileSystemReference:(id<AMFileSystemReference>)reference {
  ImActorModelModulesFileDownloadManager_OnDownloaded_initWithLong_withAMFileSystemReference_(self, fileId, reference);
  return self;
}

- (jlong)getFileId {
  return fileId_;
}

- (id<AMFileSystemReference>)getReference {
  return reference_;
}

@end

void ImActorModelModulesFileDownloadManager_OnDownloaded_initWithLong_withAMFileSystemReference_(ImActorModelModulesFileDownloadManager_OnDownloaded *self, jlong fileId, id<AMFileSystemReference> reference) {
  (void) NSObject_init(self);
  self->fileId_ = fileId;
  self->reference_ = reference;
}

ImActorModelModulesFileDownloadManager_OnDownloaded *new_ImActorModelModulesFileDownloadManager_OnDownloaded_initWithLong_withAMFileSystemReference_(jlong fileId, id<AMFileSystemReference> reference) {
  ImActorModelModulesFileDownloadManager_OnDownloaded *self = [ImActorModelModulesFileDownloadManager_OnDownloaded alloc];
  ImActorModelModulesFileDownloadManager_OnDownloaded_initWithLong_withAMFileSystemReference_(self, fileId, reference);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ImActorModelModulesFileDownloadManager_OnDownloaded)

@implementation ImActorModelModulesFileDownloadManager_OnDownloadedError

- (instancetype)initWithLong:(jlong)fileId {
  ImActorModelModulesFileDownloadManager_OnDownloadedError_initWithLong_(self, fileId);
  return self;
}

- (jlong)getFileId {
  return fileId_;
}

@end

void ImActorModelModulesFileDownloadManager_OnDownloadedError_initWithLong_(ImActorModelModulesFileDownloadManager_OnDownloadedError *self, jlong fileId) {
  (void) NSObject_init(self);
  self->fileId_ = fileId;
}

ImActorModelModulesFileDownloadManager_OnDownloadedError *new_ImActorModelModulesFileDownloadManager_OnDownloadedError_initWithLong_(jlong fileId) {
  ImActorModelModulesFileDownloadManager_OnDownloadedError *self = [ImActorModelModulesFileDownloadManager_OnDownloadedError alloc];
  ImActorModelModulesFileDownloadManager_OnDownloadedError_initWithLong_(self, fileId);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ImActorModelModulesFileDownloadManager_OnDownloadedError)

@implementation ImActorModelModulesFileDownloadManager_$1

- (void)run {
  [((id<AMFileCallback>) nil_chk(val$callback_)) onDownloaded:val$fileSystemReference_];
}

- (instancetype)initWithAMFileCallback:(id<AMFileCallback>)capture$0
             withAMFileSystemReference:(id<AMFileSystemReference>)capture$1 {
  ImActorModelModulesFileDownloadManager_$1_initWithAMFileCallback_withAMFileSystemReference_(self, capture$0, capture$1);
  return self;
}

@end

void ImActorModelModulesFileDownloadManager_$1_initWithAMFileCallback_withAMFileSystemReference_(ImActorModelModulesFileDownloadManager_$1 *self, id<AMFileCallback> capture$0, id<AMFileSystemReference> capture$1) {
  self->val$callback_ = capture$0;
  self->val$fileSystemReference_ = capture$1;
  (void) NSObject_init(self);
}

ImActorModelModulesFileDownloadManager_$1 *new_ImActorModelModulesFileDownloadManager_$1_initWithAMFileCallback_withAMFileSystemReference_(id<AMFileCallback> capture$0, id<AMFileSystemReference> capture$1) {
  ImActorModelModulesFileDownloadManager_$1 *self = [ImActorModelModulesFileDownloadManager_$1 alloc];
  ImActorModelModulesFileDownloadManager_$1_initWithAMFileCallback_withAMFileSystemReference_(self, capture$0, capture$1);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ImActorModelModulesFileDownloadManager_$1)

@implementation ImActorModelModulesFileDownloadManager_$2

- (void)run {
  [((id<AMFileCallback>) nil_chk(val$callback_)) onNotDownloaded];
}

- (instancetype)initWithAMFileCallback:(id<AMFileCallback>)capture$0 {
  ImActorModelModulesFileDownloadManager_$2_initWithAMFileCallback_(self, capture$0);
  return self;
}

@end

void ImActorModelModulesFileDownloadManager_$2_initWithAMFileCallback_(ImActorModelModulesFileDownloadManager_$2 *self, id<AMFileCallback> capture$0) {
  self->val$callback_ = capture$0;
  (void) NSObject_init(self);
}

ImActorModelModulesFileDownloadManager_$2 *new_ImActorModelModulesFileDownloadManager_$2_initWithAMFileCallback_(id<AMFileCallback> capture$0) {
  ImActorModelModulesFileDownloadManager_$2 *self = [ImActorModelModulesFileDownloadManager_$2 alloc];
  ImActorModelModulesFileDownloadManager_$2_initWithAMFileCallback_(self, capture$0);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ImActorModelModulesFileDownloadManager_$2)

@implementation ImActorModelModulesFileDownloadManager_$3

- (void)run {
  [((id<AMFileCallback>) nil_chk(val$callback_)) onDownloading:val$progress_];
}

- (instancetype)initWithAMFileCallback:(id<AMFileCallback>)capture$0
                             withFloat:(jfloat)capture$1 {
  ImActorModelModulesFileDownloadManager_$3_initWithAMFileCallback_withFloat_(self, capture$0, capture$1);
  return self;
}

@end

void ImActorModelModulesFileDownloadManager_$3_initWithAMFileCallback_withFloat_(ImActorModelModulesFileDownloadManager_$3 *self, id<AMFileCallback> capture$0, jfloat capture$1) {
  self->val$callback_ = capture$0;
  self->val$progress_ = capture$1;
  (void) NSObject_init(self);
}

ImActorModelModulesFileDownloadManager_$3 *new_ImActorModelModulesFileDownloadManager_$3_initWithAMFileCallback_withFloat_(id<AMFileCallback> capture$0, jfloat capture$1) {
  ImActorModelModulesFileDownloadManager_$3 *self = [ImActorModelModulesFileDownloadManager_$3 alloc];
  ImActorModelModulesFileDownloadManager_$3_initWithAMFileCallback_withFloat_(self, capture$0, capture$1);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ImActorModelModulesFileDownloadManager_$3)

@implementation ImActorModelModulesFileDownloadManager_$4

- (void)run {
  [((id<AMFileCallback>) nil_chk(val$callback_)) onNotDownloaded];
}

- (instancetype)initWithAMFileCallback:(id<AMFileCallback>)capture$0 {
  ImActorModelModulesFileDownloadManager_$4_initWithAMFileCallback_(self, capture$0);
  return self;
}

@end

void ImActorModelModulesFileDownloadManager_$4_initWithAMFileCallback_(ImActorModelModulesFileDownloadManager_$4 *self, id<AMFileCallback> capture$0) {
  self->val$callback_ = capture$0;
  (void) NSObject_init(self);
}

ImActorModelModulesFileDownloadManager_$4 *new_ImActorModelModulesFileDownloadManager_$4_initWithAMFileCallback_(id<AMFileCallback> capture$0) {
  ImActorModelModulesFileDownloadManager_$4 *self = [ImActorModelModulesFileDownloadManager_$4 alloc];
  ImActorModelModulesFileDownloadManager_$4_initWithAMFileCallback_(self, capture$0);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ImActorModelModulesFileDownloadManager_$4)

@implementation ImActorModelModulesFileDownloadManager_$5

- (void)run {
  [((id<AMFileCallback>) nil_chk(val$callback_)) onDownloading:0];
}

- (instancetype)initWithAMFileCallback:(id<AMFileCallback>)capture$0 {
  ImActorModelModulesFileDownloadManager_$5_initWithAMFileCallback_(self, capture$0);
  return self;
}

@end

void ImActorModelModulesFileDownloadManager_$5_initWithAMFileCallback_(ImActorModelModulesFileDownloadManager_$5 *self, id<AMFileCallback> capture$0) {
  self->val$callback_ = capture$0;
  (void) NSObject_init(self);
}

ImActorModelModulesFileDownloadManager_$5 *new_ImActorModelModulesFileDownloadManager_$5_initWithAMFileCallback_(id<AMFileCallback> capture$0) {
  ImActorModelModulesFileDownloadManager_$5 *self = [ImActorModelModulesFileDownloadManager_$5 alloc];
  ImActorModelModulesFileDownloadManager_$5_initWithAMFileCallback_(self, capture$0);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ImActorModelModulesFileDownloadManager_$5)

@implementation ImActorModelModulesFileDownloadManager_$6

- (void)run {
  [((id<AMFileCallback>) nil_chk(val$callback_)) onDownloaded:val$fileSystemReference_];
}

- (instancetype)initWithAMFileCallback:(id<AMFileCallback>)capture$0
             withAMFileSystemReference:(id<AMFileSystemReference>)capture$1 {
  ImActorModelModulesFileDownloadManager_$6_initWithAMFileCallback_withAMFileSystemReference_(self, capture$0, capture$1);
  return self;
}

@end

void ImActorModelModulesFileDownloadManager_$6_initWithAMFileCallback_withAMFileSystemReference_(ImActorModelModulesFileDownloadManager_$6 *self, id<AMFileCallback> capture$0, id<AMFileSystemReference> capture$1) {
  self->val$callback_ = capture$0;
  self->val$fileSystemReference_ = capture$1;
  (void) NSObject_init(self);
}

ImActorModelModulesFileDownloadManager_$6 *new_ImActorModelModulesFileDownloadManager_$6_initWithAMFileCallback_withAMFileSystemReference_(id<AMFileCallback> capture$0, id<AMFileSystemReference> capture$1) {
  ImActorModelModulesFileDownloadManager_$6 *self = [ImActorModelModulesFileDownloadManager_$6 alloc];
  ImActorModelModulesFileDownloadManager_$6_initWithAMFileCallback_withAMFileSystemReference_(self, capture$0, capture$1);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ImActorModelModulesFileDownloadManager_$6)

@implementation ImActorModelModulesFileDownloadManager_$7

- (void)run {
  [((id<AMFileCallback>) nil_chk(val$callback_)) onDownloading:0];
}

- (instancetype)initWithAMFileCallback:(id<AMFileCallback>)capture$0 {
  ImActorModelModulesFileDownloadManager_$7_initWithAMFileCallback_(self, capture$0);
  return self;
}

@end

void ImActorModelModulesFileDownloadManager_$7_initWithAMFileCallback_(ImActorModelModulesFileDownloadManager_$7 *self, id<AMFileCallback> capture$0) {
  self->val$callback_ = capture$0;
  (void) NSObject_init(self);
}

ImActorModelModulesFileDownloadManager_$7 *new_ImActorModelModulesFileDownloadManager_$7_initWithAMFileCallback_(id<AMFileCallback> capture$0) {
  ImActorModelModulesFileDownloadManager_$7 *self = [ImActorModelModulesFileDownloadManager_$7 alloc];
  ImActorModelModulesFileDownloadManager_$7_initWithAMFileCallback_(self, capture$0);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ImActorModelModulesFileDownloadManager_$7)

@implementation ImActorModelModulesFileDownloadManager_$8

- (void)run {
  [((id<AMFileCallback>) nil_chk(val$callback_)) onNotDownloaded];
}

- (instancetype)initWithAMFileCallback:(id<AMFileCallback>)capture$0 {
  ImActorModelModulesFileDownloadManager_$8_initWithAMFileCallback_(self, capture$0);
  return self;
}

@end

void ImActorModelModulesFileDownloadManager_$8_initWithAMFileCallback_(ImActorModelModulesFileDownloadManager_$8 *self, id<AMFileCallback> capture$0) {
  self->val$callback_ = capture$0;
  (void) NSObject_init(self);
}

ImActorModelModulesFileDownloadManager_$8 *new_ImActorModelModulesFileDownloadManager_$8_initWithAMFileCallback_(id<AMFileCallback> capture$0) {
  ImActorModelModulesFileDownloadManager_$8 *self = [ImActorModelModulesFileDownloadManager_$8 alloc];
  ImActorModelModulesFileDownloadManager_$8_initWithAMFileCallback_(self, capture$0);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ImActorModelModulesFileDownloadManager_$8)

@implementation ImActorModelModulesFileDownloadManager_$9

- (void)run {
  [((id<AMFileCallback>) nil_chk(val$callback_)) onNotDownloaded];
}

- (instancetype)initWithAMFileCallback:(id<AMFileCallback>)capture$0 {
  ImActorModelModulesFileDownloadManager_$9_initWithAMFileCallback_(self, capture$0);
  return self;
}

@end

void ImActorModelModulesFileDownloadManager_$9_initWithAMFileCallback_(ImActorModelModulesFileDownloadManager_$9 *self, id<AMFileCallback> capture$0) {
  self->val$callback_ = capture$0;
  (void) NSObject_init(self);
}

ImActorModelModulesFileDownloadManager_$9 *new_ImActorModelModulesFileDownloadManager_$9_initWithAMFileCallback_(id<AMFileCallback> capture$0) {
  ImActorModelModulesFileDownloadManager_$9 *self = [ImActorModelModulesFileDownloadManager_$9 alloc];
  ImActorModelModulesFileDownloadManager_$9_initWithAMFileCallback_(self, capture$0);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ImActorModelModulesFileDownloadManager_$9)

@implementation ImActorModelModulesFileDownloadManager_$10

- (void)run {
  [((id<AMFileCallback>) nil_chk(val$callback_)) onDownloading:val$progress_];
}

- (instancetype)initWithAMFileCallback:(id<AMFileCallback>)capture$0
                             withFloat:(jfloat)capture$1 {
  ImActorModelModulesFileDownloadManager_$10_initWithAMFileCallback_withFloat_(self, capture$0, capture$1);
  return self;
}

@end

void ImActorModelModulesFileDownloadManager_$10_initWithAMFileCallback_withFloat_(ImActorModelModulesFileDownloadManager_$10 *self, id<AMFileCallback> capture$0, jfloat capture$1) {
  self->val$callback_ = capture$0;
  self->val$progress_ = capture$1;
  (void) NSObject_init(self);
}

ImActorModelModulesFileDownloadManager_$10 *new_ImActorModelModulesFileDownloadManager_$10_initWithAMFileCallback_withFloat_(id<AMFileCallback> capture$0, jfloat capture$1) {
  ImActorModelModulesFileDownloadManager_$10 *self = [ImActorModelModulesFileDownloadManager_$10 alloc];
  ImActorModelModulesFileDownloadManager_$10_initWithAMFileCallback_withFloat_(self, capture$0, capture$1);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ImActorModelModulesFileDownloadManager_$10)

@implementation ImActorModelModulesFileDownloadManager_$11

- (void)run {
  [((id<AMFileCallback>) nil_chk(val$callback_)) onDownloading:0];
}

- (instancetype)initWithAMFileCallback:(id<AMFileCallback>)capture$0 {
  ImActorModelModulesFileDownloadManager_$11_initWithAMFileCallback_(self, capture$0);
  return self;
}

@end

void ImActorModelModulesFileDownloadManager_$11_initWithAMFileCallback_(ImActorModelModulesFileDownloadManager_$11 *self, id<AMFileCallback> capture$0) {
  self->val$callback_ = capture$0;
  (void) NSObject_init(self);
}

ImActorModelModulesFileDownloadManager_$11 *new_ImActorModelModulesFileDownloadManager_$11_initWithAMFileCallback_(id<AMFileCallback> capture$0) {
  ImActorModelModulesFileDownloadManager_$11 *self = [ImActorModelModulesFileDownloadManager_$11 alloc];
  ImActorModelModulesFileDownloadManager_$11_initWithAMFileCallback_(self, capture$0);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ImActorModelModulesFileDownloadManager_$11)

@implementation ImActorModelModulesFileDownloadManager_$12

- (void)run {
  [((id<AMFileCallback>) nil_chk(val$callback_)) onDownloading:0];
}

- (instancetype)initWithAMFileCallback:(id<AMFileCallback>)capture$0 {
  ImActorModelModulesFileDownloadManager_$12_initWithAMFileCallback_(self, capture$0);
  return self;
}

@end

void ImActorModelModulesFileDownloadManager_$12_initWithAMFileCallback_(ImActorModelModulesFileDownloadManager_$12 *self, id<AMFileCallback> capture$0) {
  self->val$callback_ = capture$0;
  (void) NSObject_init(self);
}

ImActorModelModulesFileDownloadManager_$12 *new_ImActorModelModulesFileDownloadManager_$12_initWithAMFileCallback_(id<AMFileCallback> capture$0) {
  ImActorModelModulesFileDownloadManager_$12 *self = [ImActorModelModulesFileDownloadManager_$12 alloc];
  ImActorModelModulesFileDownloadManager_$12_initWithAMFileCallback_(self, capture$0);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ImActorModelModulesFileDownloadManager_$12)

@implementation ImActorModelModulesFileDownloadManager_$13

- (void)run {
  [((id<AMFileCallback>) nil_chk(val$callback_)) onNotDownloaded];
}

- (instancetype)initWithAMFileCallback:(id<AMFileCallback>)capture$0 {
  ImActorModelModulesFileDownloadManager_$13_initWithAMFileCallback_(self, capture$0);
  return self;
}

@end

void ImActorModelModulesFileDownloadManager_$13_initWithAMFileCallback_(ImActorModelModulesFileDownloadManager_$13 *self, id<AMFileCallback> capture$0) {
  self->val$callback_ = capture$0;
  (void) NSObject_init(self);
}

ImActorModelModulesFileDownloadManager_$13 *new_ImActorModelModulesFileDownloadManager_$13_initWithAMFileCallback_(id<AMFileCallback> capture$0) {
  ImActorModelModulesFileDownloadManager_$13 *self = [ImActorModelModulesFileDownloadManager_$13 alloc];
  ImActorModelModulesFileDownloadManager_$13_initWithAMFileCallback_(self, capture$0);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ImActorModelModulesFileDownloadManager_$13)

@implementation ImActorModelModulesFileDownloadManager_$14

- (void)run {
  [((id<AMFileCallback>) nil_chk(val$c_)) onNotDownloaded];
}

- (instancetype)initWithAMFileCallback:(id<AMFileCallback>)capture$0 {
  ImActorModelModulesFileDownloadManager_$14_initWithAMFileCallback_(self, capture$0);
  return self;
}

@end

void ImActorModelModulesFileDownloadManager_$14_initWithAMFileCallback_(ImActorModelModulesFileDownloadManager_$14 *self, id<AMFileCallback> capture$0) {
  self->val$c_ = capture$0;
  (void) NSObject_init(self);
}

ImActorModelModulesFileDownloadManager_$14 *new_ImActorModelModulesFileDownloadManager_$14_initWithAMFileCallback_(id<AMFileCallback> capture$0) {
  ImActorModelModulesFileDownloadManager_$14 *self = [ImActorModelModulesFileDownloadManager_$14 alloc];
  ImActorModelModulesFileDownloadManager_$14_initWithAMFileCallback_(self, capture$0);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ImActorModelModulesFileDownloadManager_$14)

@implementation ImActorModelModulesFileDownloadManager_$15

- (ImActorModelModulesFileDownloadTask *)create {
  return new_ImActorModelModulesFileDownloadTask_initWithAMFileReference_withDKActorRef_withImActorModelModulesModules_(((ImActorModelModulesFileDownloadManager_QueueItem *) nil_chk(val$finalPendingQueue_))->fileReference_, [this$0_ self__], [this$0_ modules]);
}

- (instancetype)initWithImActorModelModulesFileDownloadManager:(ImActorModelModulesFileDownloadManager *)outer$
          withImActorModelModulesFileDownloadManager_QueueItem:(ImActorModelModulesFileDownloadManager_QueueItem *)capture$0 {
  ImActorModelModulesFileDownloadManager_$15_initWithImActorModelModulesFileDownloadManager_withImActorModelModulesFileDownloadManager_QueueItem_(self, outer$, capture$0);
  return self;
}

@end

void ImActorModelModulesFileDownloadManager_$15_initWithImActorModelModulesFileDownloadManager_withImActorModelModulesFileDownloadManager_QueueItem_(ImActorModelModulesFileDownloadManager_$15 *self, ImActorModelModulesFileDownloadManager *outer$, ImActorModelModulesFileDownloadManager_QueueItem *capture$0) {
  self->this$0_ = outer$;
  self->val$finalPendingQueue_ = capture$0;
  (void) NSObject_init(self);
}

ImActorModelModulesFileDownloadManager_$15 *new_ImActorModelModulesFileDownloadManager_$15_initWithImActorModelModulesFileDownloadManager_withImActorModelModulesFileDownloadManager_QueueItem_(ImActorModelModulesFileDownloadManager *outer$, ImActorModelModulesFileDownloadManager_QueueItem *capture$0) {
  ImActorModelModulesFileDownloadManager_$15 *self = [ImActorModelModulesFileDownloadManager_$15 alloc];
  ImActorModelModulesFileDownloadManager_$15_initWithImActorModelModulesFileDownloadManager_withImActorModelModulesFileDownloadManager_QueueItem_(self, outer$, capture$0);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ImActorModelModulesFileDownloadManager_$15)

@implementation ImActorModelModulesFileDownloadManager_$16

- (void)run {
  [((id<AMFileCallback>) nil_chk(val$fileCallback_)) onDownloading:val$progress_];
}

- (instancetype)initWithAMFileCallback:(id<AMFileCallback>)capture$0
                             withFloat:(jfloat)capture$1 {
  ImActorModelModulesFileDownloadManager_$16_initWithAMFileCallback_withFloat_(self, capture$0, capture$1);
  return self;
}

@end

void ImActorModelModulesFileDownloadManager_$16_initWithAMFileCallback_withFloat_(ImActorModelModulesFileDownloadManager_$16 *self, id<AMFileCallback> capture$0, jfloat capture$1) {
  self->val$fileCallback_ = capture$0;
  self->val$progress_ = capture$1;
  (void) NSObject_init(self);
}

ImActorModelModulesFileDownloadManager_$16 *new_ImActorModelModulesFileDownloadManager_$16_initWithAMFileCallback_withFloat_(id<AMFileCallback> capture$0, jfloat capture$1) {
  ImActorModelModulesFileDownloadManager_$16 *self = [ImActorModelModulesFileDownloadManager_$16 alloc];
  ImActorModelModulesFileDownloadManager_$16_initWithAMFileCallback_withFloat_(self, capture$0, capture$1);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ImActorModelModulesFileDownloadManager_$16)

@implementation ImActorModelModulesFileDownloadManager_$17

- (void)run {
  [((id<AMFileCallback>) nil_chk(val$fileCallback_)) onDownloaded:val$reference_];
}

- (instancetype)initWithAMFileCallback:(id<AMFileCallback>)capture$0
             withAMFileSystemReference:(id<AMFileSystemReference>)capture$1 {
  ImActorModelModulesFileDownloadManager_$17_initWithAMFileCallback_withAMFileSystemReference_(self, capture$0, capture$1);
  return self;
}

@end

void ImActorModelModulesFileDownloadManager_$17_initWithAMFileCallback_withAMFileSystemReference_(ImActorModelModulesFileDownloadManager_$17 *self, id<AMFileCallback> capture$0, id<AMFileSystemReference> capture$1) {
  self->val$fileCallback_ = capture$0;
  self->val$reference_ = capture$1;
  (void) NSObject_init(self);
}

ImActorModelModulesFileDownloadManager_$17 *new_ImActorModelModulesFileDownloadManager_$17_initWithAMFileCallback_withAMFileSystemReference_(id<AMFileCallback> capture$0, id<AMFileSystemReference> capture$1) {
  ImActorModelModulesFileDownloadManager_$17 *self = [ImActorModelModulesFileDownloadManager_$17 alloc];
  ImActorModelModulesFileDownloadManager_$17_initWithAMFileCallback_withAMFileSystemReference_(self, capture$0, capture$1);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ImActorModelModulesFileDownloadManager_$17)

@implementation ImActorModelModulesFileDownloadManager_$18

- (void)run {
  [((id<AMFileCallback>) nil_chk(val$fileCallback_)) onNotDownloaded];
}

- (instancetype)initWithAMFileCallback:(id<AMFileCallback>)capture$0 {
  ImActorModelModulesFileDownloadManager_$18_initWithAMFileCallback_(self, capture$0);
  return self;
}

@end

void ImActorModelModulesFileDownloadManager_$18_initWithAMFileCallback_(ImActorModelModulesFileDownloadManager_$18 *self, id<AMFileCallback> capture$0) {
  self->val$fileCallback_ = capture$0;
  (void) NSObject_init(self);
}

ImActorModelModulesFileDownloadManager_$18 *new_ImActorModelModulesFileDownloadManager_$18_initWithAMFileCallback_(id<AMFileCallback> capture$0) {
  ImActorModelModulesFileDownloadManager_$18 *self = [ImActorModelModulesFileDownloadManager_$18 alloc];
  ImActorModelModulesFileDownloadManager_$18_initWithAMFileCallback_(self, capture$0);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ImActorModelModulesFileDownloadManager_$18)
