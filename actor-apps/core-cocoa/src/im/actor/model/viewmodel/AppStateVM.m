//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/ex3ndr/Develop/actor-proprietary/actor-apps/core/src/main/java/im/actor/model/viewmodel/AppStateVM.java
//


#include "J2ObjC_source.h"
#include "im/actor/model/droidkit/engine/PreferencesStorage.h"
#include "im/actor/model/modules/Modules.h"
#include "im/actor/model/mvvm/ValueModel.h"
#include "im/actor/model/viewmodel/AppStateVM.h"
#include "java/lang/Boolean.h"
#include "java/lang/Integer.h"

@interface AMAppStateVM () {
 @public
  ImActorModelModulesModules *modules_;
  AMValueModel *isDialogsEmpty_;
  AMValueModel *isContactsEmpty_;
  AMValueModel *isAppEmpty_;
  AMValueModel *isAppLoaded_;
  AMValueModel *isConnecting_;
  AMValueModel *isSyncing_;
  AMValueModel *globalCounter_;
  jboolean isBookImported_;
  jboolean isDialogsLoaded_;
  jboolean isContactsLoaded_;
}

- (void)updateLoaded;

@end

J2OBJC_FIELD_SETTER(AMAppStateVM, modules_, ImActorModelModulesModules *)
J2OBJC_FIELD_SETTER(AMAppStateVM, isDialogsEmpty_, AMValueModel *)
J2OBJC_FIELD_SETTER(AMAppStateVM, isContactsEmpty_, AMValueModel *)
J2OBJC_FIELD_SETTER(AMAppStateVM, isAppEmpty_, AMValueModel *)
J2OBJC_FIELD_SETTER(AMAppStateVM, isAppLoaded_, AMValueModel *)
J2OBJC_FIELD_SETTER(AMAppStateVM, isConnecting_, AMValueModel *)
J2OBJC_FIELD_SETTER(AMAppStateVM, isSyncing_, AMValueModel *)
J2OBJC_FIELD_SETTER(AMAppStateVM, globalCounter_, AMValueModel *)

__attribute__((unused)) static void AMAppStateVM_updateLoaded(AMAppStateVM *self);

@implementation AMAppStateVM

- (instancetype)initWithImActorModelModulesModules:(ImActorModelModulesModules *)modules {
  AMAppStateVM_initWithImActorModelModulesModules_(self, modules);
  return self;
}

- (void)updateLoaded {
  AMAppStateVM_updateLoaded(self);
}

- (void)onGlobalCounterChangedWithInt:(jint)value {
  @synchronized(self) {
    [((AMValueModel *) nil_chk(globalCounter_)) changeWithValue:JavaLangInteger_valueOfWithInt_(value)];
    [((id<DKPreferencesStorage>) nil_chk([((ImActorModelModulesModules *) nil_chk(modules_)) getPreferences])) putIntWithKey:@"app.counter" withValue:value];
  }
}

- (void)onDialogsChangedWithBoolean:(jboolean)isEmpty {
  @synchronized(self) {
    if ([((JavaLangBoolean *) nil_chk([((AMValueModel *) nil_chk(isDialogsEmpty_)) get])) booleanValue] != isEmpty) {
      [((id<DKPreferencesStorage>) nil_chk([((ImActorModelModulesModules *) nil_chk(modules_)) getPreferences])) putBoolWithKey:@"app.dialogs.empty" withValue:isEmpty];
      [isDialogsEmpty_ changeWithValue:JavaLangBoolean_valueOfWithBoolean_(isEmpty)];
    }
    if (!isEmpty) {
      if ([((JavaLangBoolean *) nil_chk([((AMValueModel *) nil_chk(isAppEmpty_)) get])) booleanValue]) {
        [((id<DKPreferencesStorage>) nil_chk([((ImActorModelModulesModules *) nil_chk(modules_)) getPreferences])) putBoolWithKey:@"app.empty" withValue:NO];
        [isAppEmpty_ changeWithValue:JavaLangBoolean_valueOfWithBoolean_(NO)];
      }
    }
  }
}

- (void)onContactsChangedWithBoolean:(jboolean)isEmpty {
  @synchronized(self) {
    if ([((JavaLangBoolean *) nil_chk([((AMValueModel *) nil_chk(isContactsEmpty_)) get])) booleanValue] != isEmpty) {
      [((id<DKPreferencesStorage>) nil_chk([((ImActorModelModulesModules *) nil_chk(modules_)) getPreferences])) putBoolWithKey:@"app.contacts.empty" withValue:isEmpty];
      [isContactsEmpty_ changeWithValue:JavaLangBoolean_valueOfWithBoolean_(isEmpty)];
    }
    if (!isEmpty) {
      if ([((JavaLangBoolean *) nil_chk([((AMValueModel *) nil_chk(isAppEmpty_)) get])) booleanValue]) {
        [((id<DKPreferencesStorage>) nil_chk([((ImActorModelModulesModules *) nil_chk(modules_)) getPreferences])) putBoolWithKey:@"app.empty" withValue:NO];
        [isAppEmpty_ changeWithValue:JavaLangBoolean_valueOfWithBoolean_(NO)];
      }
    }
  }
}

- (void)onPhoneImported {
  @synchronized(self) {
    if (!isBookImported_) {
      isBookImported_ = YES;
      [((id<DKPreferencesStorage>) nil_chk([((ImActorModelModulesModules *) nil_chk(modules_)) getPreferences])) putBoolWithKey:@"app.contacts.imported" withValue:YES];
      AMAppStateVM_updateLoaded(self);
    }
  }
}

- (void)onDialogsLoaded {
  @synchronized(self) {
    if (!isDialogsLoaded_) {
      isDialogsLoaded_ = YES;
      [((id<DKPreferencesStorage>) nil_chk([((ImActorModelModulesModules *) nil_chk(modules_)) getPreferences])) putBoolWithKey:@"app.dialogs.loaded" withValue:YES];
      AMAppStateVM_updateLoaded(self);
    }
  }
}

- (void)onContactsLoaded {
  @synchronized(self) {
    if (!isContactsLoaded_) {
      isContactsLoaded_ = YES;
      [((id<DKPreferencesStorage>) nil_chk([((ImActorModelModulesModules *) nil_chk(modules_)) getPreferences])) putBoolWithKey:@"app.contacts.loaded" withValue:YES];
      AMAppStateVM_updateLoaded(self);
    }
  }
}

- (AMValueModel *)getIsDialogsEmpty {
  return isDialogsEmpty_;
}

- (AMValueModel *)getIsContactsEmpty {
  return isContactsEmpty_;
}

- (AMValueModel *)getIsAppLoaded {
  return isAppLoaded_;
}

- (AMValueModel *)getIsAppEmpty {
  return isAppEmpty_;
}

- (AMValueModel *)getIsSyncing {
  return isSyncing_;
}

- (AMValueModel *)getIsConnecting {
  return isConnecting_;
}

- (AMValueModel *)getGlobalCounter {
  return globalCounter_;
}

@end

void AMAppStateVM_initWithImActorModelModulesModules_(AMAppStateVM *self, ImActorModelModulesModules *modules) {
  (void) NSObject_init(self);
  self->modules_ = modules;
  self->isDialogsEmpty_ = new_AMValueModel_initWithName_withValue_(@"app.dialogs.empty", JavaLangBoolean_valueOfWithBoolean_([((id<DKPreferencesStorage>) nil_chk([((ImActorModelModulesModules *) nil_chk(modules)) getPreferences])) getBoolWithKey:@"app.dialogs.empty" withDefault:YES]));
  self->isContactsEmpty_ = new_AMValueModel_initWithName_withValue_(@"app.contacts.empty", JavaLangBoolean_valueOfWithBoolean_([((id<DKPreferencesStorage>) nil_chk([modules getPreferences])) getBoolWithKey:@"app.contacts.empty" withDefault:YES]));
  self->isAppEmpty_ = new_AMValueModel_initWithName_withValue_(@"app.empty", JavaLangBoolean_valueOfWithBoolean_([((id<DKPreferencesStorage>) nil_chk([modules getPreferences])) getBoolWithKey:@"app.empty" withDefault:YES]));
  self->globalCounter_ = new_AMValueModel_initWithName_withValue_(@"app.counter", JavaLangInteger_valueOfWithInt_([((id<DKPreferencesStorage>) nil_chk([modules getPreferences])) getIntWithKey:@"app.counter" withDefault:0]));
  self->isConnecting_ = new_AMValueModel_initWithName_withValue_(@"app.connecting", JavaLangBoolean_valueOfWithBoolean_(NO));
  self->isSyncing_ = new_AMValueModel_initWithName_withValue_(@"app.syncing", JavaLangBoolean_valueOfWithBoolean_(NO));
  self->isBookImported_ = [((id<DKPreferencesStorage>) nil_chk([modules getPreferences])) getBoolWithKey:@"app.contacts.imported" withDefault:NO];
  self->isDialogsLoaded_ = [((id<DKPreferencesStorage>) nil_chk([modules getPreferences])) getBoolWithKey:@"app.dialogs.loaded" withDefault:NO];
  self->isContactsLoaded_ = [((id<DKPreferencesStorage>) nil_chk([modules getPreferences])) getBoolWithKey:@"app.contacts.loaded" withDefault:NO];
  self->isAppLoaded_ = new_AMValueModel_initWithName_withValue_(@"app.loaded", JavaLangBoolean_valueOfWithBoolean_(self->isBookImported_ && self->isDialogsLoaded_ && self->isContactsLoaded_));
}

AMAppStateVM *new_AMAppStateVM_initWithImActorModelModulesModules_(ImActorModelModulesModules *modules) {
  AMAppStateVM *self = [AMAppStateVM alloc];
  AMAppStateVM_initWithImActorModelModulesModules_(self, modules);
  return self;
}

void AMAppStateVM_updateLoaded(AMAppStateVM *self) {
  jboolean val = self->isBookImported_ && self->isDialogsLoaded_ && self->isContactsLoaded_;
  if ([((JavaLangBoolean *) nil_chk([((AMValueModel *) nil_chk(self->isAppLoaded_)) get])) booleanValue] != val) {
    [self->isAppLoaded_ changeWithValue:JavaLangBoolean_valueOfWithBoolean_(val)];
  }
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(AMAppStateVM)
