//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/ex3ndr/Develop/actor-proprietary/actor-apps/core/src/main/java/im/actor/model/entity/User.java
//


#include "IOSClass.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "im/actor/model/api/Avatar.h"
#include "im/actor/model/api/ContactRecord.h"
#include "im/actor/model/api/ContactType.h"
#include "im/actor/model/api/Sex.h"
#include "im/actor/model/api/User.h"
#include "im/actor/model/droidkit/bser/BserValues.h"
#include "im/actor/model/droidkit/bser/BserWriter.h"
#include "im/actor/model/droidkit/bser/util/SparseArray.h"
#include "im/actor/model/entity/Avatar.h"
#include "im/actor/model/entity/ContactRecord.h"
#include "im/actor/model/entity/ContactRecordType.h"
#include "im/actor/model/entity/Peer.h"
#include "im/actor/model/entity/PeerType.h"
#include "im/actor/model/entity/Sex.h"
#include "im/actor/model/entity/User.h"
#include "im/actor/model/entity/WrapperEntity.h"
#include "im/actor/model/entity/compat/ObsoleteUser.h"
#include "java/io/IOException.h"
#include "java/lang/Boolean.h"
#include "java/lang/Long.h"
#include "java/util/ArrayList.h"
#include "java/util/List.h"

#define AMUser_RECORD_ID 10

@interface AMUser () {
 @public
  jint uid_;
  jlong accessHash_;
  NSString *name_;
  NSString *localName_;
  NSString *username_;
  NSString *about_;
  AMAvatar *avatar_;
  AMSexEnum *sex_;
  jboolean isBot__;
  id<JavaUtilList> records_;
}

@end

J2OBJC_FIELD_SETTER(AMUser, name_, NSString *)
J2OBJC_FIELD_SETTER(AMUser, localName_, NSString *)
J2OBJC_FIELD_SETTER(AMUser, username_, NSString *)
J2OBJC_FIELD_SETTER(AMUser, about_, NSString *)
J2OBJC_FIELD_SETTER(AMUser, avatar_, AMAvatar *)
J2OBJC_FIELD_SETTER(AMUser, sex_, AMSexEnum *)
J2OBJC_FIELD_SETTER(AMUser, records_, id<JavaUtilList>)

J2OBJC_STATIC_FIELD_GETTER(AMUser, RECORD_ID, jint)

@implementation AMUser

- (instancetype)initWithAPUser:(APUser *)wrappedUser {
  AMUser_initWithAPUser_(self, wrappedUser);
  return self;
}

- (instancetype)initWithByteArray:(IOSByteArray *)data {
  AMUser_initWithByteArray_(self, data);
  return self;
}

- (AMPeer *)peer {
  return new_AMPeer_initWithAMPeerTypeEnum_withInt_(AMPeerTypeEnum_get_PRIVATE(), uid_);
}

- (jint)getUid {
  return uid_;
}

- (jlong)getAccessHash {
  return accessHash_;
}

- (NSString *)getServerName {
  return name_;
}

- (NSString *)getLocalName {
  return localName_;
}

- (NSString *)getName {
  if (localName_ == nil) {
    return name_;
  }
  else {
    return localName_;
  }
}

- (NSString *)getNick {
  return username_;
}

- (NSString *)getAbout {
  return about_;
}

- (AMAvatar *)getAvatar {
  return avatar_;
}

- (AMSexEnum *)getSex {
  return sex_;
}

- (id<JavaUtilList>)getRecords {
  return records_;
}

- (jboolean)isBot {
  return isBot__;
}

- (AMUser *)editNameWithNSString:(NSString *)name {
  APUser *w = [self getWrapped];
  APUser *res = new_APUser_initWithInt_withLong_withNSString_withNSString_withAPSexEnum_withAPAvatar_withJavaUtilList_withJavaLangBoolean_withNSString_withNSString_([((APUser *) nil_chk(w)) getId], [w getAccessHash], name, [w getLocalName], [w getSex], [w getAvatar], [w getContactInfo], [w isBot], [w getNick], [w getAbout]);
  [res setUnmappedObjectsWithImActorModelDroidkitBserUtilSparseArray:[w getUnmappedObjects]];
  return new_AMUser_initWithAPUser_(res);
}

- (AMUser *)editLocalNameWithNSString:(NSString *)localName {
  APUser *w = [self getWrapped];
  APUser *res = new_APUser_initWithInt_withLong_withNSString_withNSString_withAPSexEnum_withAPAvatar_withJavaUtilList_withJavaLangBoolean_withNSString_withNSString_([((APUser *) nil_chk(w)) getId], [w getAccessHash], [w getName], localName, [w getSex], [w getAvatar], [w getContactInfo], [w isBot], [w getNick], [w getAbout]);
  [res setUnmappedObjectsWithImActorModelDroidkitBserUtilSparseArray:[w getUnmappedObjects]];
  return new_AMUser_initWithAPUser_(res);
}

- (AMUser *)editNickWithNSString:(NSString *)nick {
  APUser *w = [self getWrapped];
  APUser *res = new_APUser_initWithInt_withLong_withNSString_withNSString_withAPSexEnum_withAPAvatar_withJavaUtilList_withJavaLangBoolean_withNSString_withNSString_([((APUser *) nil_chk(w)) getId], [w getAccessHash], [w getName], [w getLocalName], [w getSex], [w getAvatar], [w getContactInfo], [w isBot], nick, [w getAbout]);
  [res setUnmappedObjectsWithImActorModelDroidkitBserUtilSparseArray:[w getUnmappedObjects]];
  return new_AMUser_initWithAPUser_(res);
}

- (AMUser *)editAboutWithNSString:(NSString *)about {
  APUser *w = [self getWrapped];
  APUser *res = new_APUser_initWithInt_withLong_withNSString_withNSString_withAPSexEnum_withAPAvatar_withJavaUtilList_withJavaLangBoolean_withNSString_withNSString_([((APUser *) nil_chk(w)) getId], [w getAccessHash], [w getName], [w getLocalName], [w getSex], [w getAvatar], [w getContactInfo], [w isBot], [w getNick], about);
  [res setUnmappedObjectsWithImActorModelDroidkitBserUtilSparseArray:[w getUnmappedObjects]];
  return new_AMUser_initWithAPUser_(res);
}

- (AMUser *)editAvatarWithAPAvatar:(APAvatar *)avatar {
  APUser *w = [self getWrapped];
  APUser *res = new_APUser_initWithInt_withLong_withNSString_withNSString_withAPSexEnum_withAPAvatar_withJavaUtilList_withJavaLangBoolean_withNSString_withNSString_([((APUser *) nil_chk(w)) getId], [w getAccessHash], [w getName], [w getLocalName], [w getSex], avatar, [w getContactInfo], [w isBot], [w getNick], [w getAbout]);
  [res setUnmappedObjectsWithImActorModelDroidkitBserUtilSparseArray:[w getUnmappedObjects]];
  return new_AMUser_initWithAPUser_(res);
}

- (void)applyWrappedWithBSBserObject:(APUser *)wrapped {
  self->uid_ = [((APUser *) nil_chk(wrapped)) getId];
  self->accessHash_ = [wrapped getAccessHash];
  self->name_ = [wrapped getName];
  self->localName_ = [wrapped getLocalName];
  self->username_ = [wrapped getNick];
  self->about_ = [wrapped getAbout];
  self->isBot__ = NO;
  if ([wrapped isBot] != nil) {
    self->isBot__ = [((JavaLangBoolean *) nil_chk([wrapped isBot])) booleanValue];
  }
  self->sex_ = AMSexEnum_get_UNKNOWN();
  if ([wrapped getSex] != nil) {
    switch ([[wrapped getSex] ordinal]) {
      case APSex_FEMALE:
      self->sex_ = AMSexEnum_get_FEMALE();
      break;
      case APSex_MALE:
      self->sex_ = AMSexEnum_get_MALE();
      break;
    }
  }
  self->records_ = new_JavaUtilArrayList_init();
  for (APContactRecord * __strong record in nil_chk([wrapped getContactInfo])) {
    if ([((APContactRecord *) nil_chk(record)) getType] == APContactTypeEnum_get_PHONE()) {
      [self->records_ addWithId:new_AMContactRecord_initWithAMContactRecordTypeEnum_withNSString_withNSString_(AMContactRecordTypeEnum_get_PHONE(), JreStrcat("@", [record getLongValue]), [record getTitle])];
    }
    else if ([record getType] == APContactTypeEnum_get_EMAIL()) {
      [self->records_ addWithId:new_AMContactRecord_initWithAMContactRecordTypeEnum_withNSString_withNSString_(AMContactRecordTypeEnum_get_EMAIL(), [record getStringValue], [record getTitle])];
    }
  }
  if ([wrapped getAvatar] != nil) {
    self->avatar_ = new_AMAvatar_initWithAPAvatar_([wrapped getAvatar]);
  }
}

- (void)parseWithBSBserValues:(BSBserValues *)values {
  if ([((BSBserValues *) nil_chk(values)) getBoolWithInt:8 withBoolean:NO]) {
    [super parseWithBSBserValues:values];
  }
  else {
    [self setWrappedWithBSBserObject:[new_ImActorModelEntityCompatObsoleteUser_initWithBSBserValues_(values) toApiUser]];
  }
}

- (void)serializeWithBSBserWriter:(BSBserWriter *)writer {
  [((BSBserWriter *) nil_chk(writer)) writeBoolWithInt:8 withBoolean:YES];
  [super serializeWithBSBserWriter:writer];
}

- (jlong)getEngineId {
  return [self getUid];
}

- (APUser *)createInstance {
  return new_APUser_init();
}

@end

void AMUser_initWithAPUser_(AMUser *self, APUser *wrappedUser) {
  (void) AMWrapperEntity_initWithInt_withBSBserObject_(self, AMUser_RECORD_ID, wrappedUser);
}

AMUser *new_AMUser_initWithAPUser_(APUser *wrappedUser) {
  AMUser *self = [AMUser alloc];
  AMUser_initWithAPUser_(self, wrappedUser);
  return self;
}

void AMUser_initWithByteArray_(AMUser *self, IOSByteArray *data) {
  (void) AMWrapperEntity_initWithInt_withByteArray_(self, AMUser_RECORD_ID, data);
}

AMUser *new_AMUser_initWithByteArray_(IOSByteArray *data) {
  AMUser *self = [AMUser alloc];
  AMUser_initWithByteArray_(self, data);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(AMUser)
