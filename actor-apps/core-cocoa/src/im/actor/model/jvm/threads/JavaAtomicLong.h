//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/ex3ndr/Develop/actor-proprietary/actor-apps/core-async/src/main/java/im/actor/model/jvm/threads/JavaAtomicLong.java
//

#ifndef _ImActorModelJvmThreadsJavaAtomicLong_H_
#define _ImActorModelJvmThreadsJavaAtomicLong_H_

#include "J2ObjC_header.h"
#include "im/actor/model/util/AtomicLongCompat.h"

@class JavaUtilConcurrentAtomicAtomicLong;

@interface ImActorModelJvmThreadsJavaAtomicLong : AMAtomicLongCompat {
 @public
  JavaUtilConcurrentAtomicAtomicLong *atomicLong_;
}

#pragma mark Public

- (instancetype)initWithLong:(jlong)value;

- (jlong)get;

- (jlong)getAndIncrement;

- (jlong)incrementAndGet;

- (void)setWithLong:(jlong)v;

@end

J2OBJC_EMPTY_STATIC_INIT(ImActorModelJvmThreadsJavaAtomicLong)

J2OBJC_FIELD_SETTER(ImActorModelJvmThreadsJavaAtomicLong, atomicLong_, JavaUtilConcurrentAtomicAtomicLong *)

FOUNDATION_EXPORT void ImActorModelJvmThreadsJavaAtomicLong_initWithLong_(ImActorModelJvmThreadsJavaAtomicLong *self, jlong value);

FOUNDATION_EXPORT ImActorModelJvmThreadsJavaAtomicLong *new_ImActorModelJvmThreadsJavaAtomicLong_initWithLong_(jlong value) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(ImActorModelJvmThreadsJavaAtomicLong)

#endif // _ImActorModelJvmThreadsJavaAtomicLong_H_
