############################
# Networking
############################
im.actor.model.NetworkProvider.createConnection(ILim/actor/model/network/ConnectionEndpoint;Lim/actor/model/network/ConnectionCallback;Lim/actor/model/network/CreateConnectionCallback;)V=AMNetworkProvider createConnection:(jint)connectionId withEndpoint:(AMConnectionEndpoint *)endpoint withCallback:(id<AMConnectionCallback>)callback withCreateCallback:(id<AMCreateConnectionCallback>)createCallback;

im.actor.model.network.ConnectionCallback.onMessage([BII)V = AMConnectionCallback onMessage:(IOSByteArray *)data withOffset:(jint)offset withLen:(jint)len;
im.actor.model.network.mtp.AuthIdRetriever$1.onMessage([BII)V=MTAuthIdRetriever_$1 onMessage:(IOSByteArray *)data withOffset:(jint)offset withLen:(jint)len;
im.actor.model.network.mtp.actors.ManagerActor$2.onMessage([BII)V=MTManagerActor_$1 onMessage:(IOSByteArray *)data withOffset:(jint)offset withLen:(jint)len;

im.actor.model.network.CreateConnectionCallback.onConnectionCreated(Lim/actor/model/network/Connection;)V = AMCreateConnectionCallback onConnectionCreated:(id<AMConnection>)connection;
im.actor.model.network.mtp.AuthIdRetriever$2.onConnectionCreated(Lim/actor/model/network/Connection;)V=MTAuthIdRetriever_$2 onConnectionCreated:(id<AMConnection>)connection;
im.actor.model.network.mtp.actors.ManagerActor$3.onConnectionCreated(Lim/actor/model/network/Connection;)V = MTManagerActor_$3 onConnectionCreated:(id<AMConnection>)connection;
im.actor.model.network.Connection.post([BII)V = AMConnection post:(IOSByteArray *)data withOffset:(jint)offset withLen:(jint)len;

# Not working
im.actor.model.network.ConnectionEndpoint.<init>(Ljava/lang/String;ILim/actor/model/network/ConnectionEndpoint$Type;)V = init:(NSString*)host withPort:(jint)port withType:(AMConnectionEndpoint_TypeEnum*)type;

############################
# Storage
############################
# Not working
# im.actor.model.Storage.createMessagesEngine(Lim/actor/entity/Peer;)Lim/actor/model/mvvm/ListEngine<Lim/actor/model/entity/Message;>; = AMStorage createMessagesEngine:(AMPeer *)peer;

im.actor.model.StorageProvider.createKeyValue(Ljava/lang/String;)Lim/actor/model/droidkit/engine/KeyValueStorage; = AMStorageProvider createKeyValue:(NSString *)name
im.actor.model.StorageProvider.createList(Ljava/lang/String;)Lim/actor/model/droidkit/engine/ListStorage; = AMStorageProvider createList:(NSString *)name

im.actor.model.droidkit.engine.PreferencesStorage.putLong(Ljava/lang/String;J)V = AMPreferencesStorage putLong:(NSString *)key withValue:(jlong)v;
im.actor.model.droidkit.engine.PreferencesStorage.getLong(Ljava/lang/String;J)J = AMPreferencesStorage getLong:(NSString *)key withDefault:(jlong)def;
im.actor.model.droidkit.engine.PreferencesStorage.putInt(Ljava/lang/String;I)V = AMPreferencesStorage putInt:(NSString *)key withValue:(jint)v;
im.actor.model.droidkit.engine.PreferencesStorage.getInt(Ljava/lang/String;I)I = AMPreferencesStorage getInt:(NSString *)key withDefault:(jint)def;
im.actor.model.droidkit.engine.PreferencesStorage.putBool(Ljava/lang/String;Z)V = AMPreferencesStorage putBool:(NSString *)key withValue:(jboolean)v;
im.actor.model.droidkit.engine.PreferencesStorage.getBool(Ljava/lang/String;Z)Z = AMPreferencesStorage getBool:(NSString *)key withDefault:(jboolean)def;
im.actor.model.droidkit.engine.PreferencesStorage.putBytes(Ljava/lang/String;[B)V = AMPreferencesStorage putBytes:(NSString *)key withValue:(IOSByteArray* )v;
im.actor.model.droidkit.engine.PreferencesStorage.getBytes(Ljava/lang/String;)[B = AMPreferencesStorage getBytes:(NSString *)key;
im.actor.model.droidkit.engine.PreferencesStorage.putString(Ljava/lang/String;Ljava/lang/String;)V = AMPreferencesStorage putString:(NSString *)key withValue:(NSString* )v;
im.actor.model.droidkit.engine.PreferencesStorage.getString(Ljava/lang/String;)Ljava/lang/String; = AMPreferencesStorage getString:(NSString *)key;

############################
# File system
############################
im.actor.model.FileSystemProvider.commitTempFile(Lim/actor/model/files/FileSystemReference;Lim/actor/model/entity/FileReference;)Lim/actor/model/files/FileSystemReference; = AMFileSystemProvider commitTempFile:(id<AMFileSystemReference>)sourceFile withReference:(AMFileReference *)fileReference;
im.actor.model.FileSystemProvider.fileFromDescriptor(Ljava/lang/String;)Lim/actor/model/files/FileSystemReference; = AMFileSystemProvider fileFromDescriptor:(NSString *)descriptor;
im.actor.model.files.FileSystemReference.openWrite(I)Lim/actor/model/files/OutputFile; = AMFileSystemReference openWriteWithSize:(jint)size;
im.actor.model.files.OutputFile.write(I[BII)Z = AMOutputFile writeWithOffset:(jint)fileOffset withData:(IOSByteArray *)data withDataOffset:(jint)dataOffset withDataLen:(jint)dataLen;
im.actor.model.files.InputFile.read(I[BII)Z = AMInputFile readAtOffset:(jint)fileOffset toArray:(IOSByteArray *)data withArrayOffset:(jint)dataOffset withArrayLen:(jint)dataLen;

############################
# Threading
############################
im.actor.model.Threading.createAtomicInt(I)Lim/actor/model/util/AtomicIntegerCompat; = AMThreading createAtomicInt:(jint)defValue;
im.actor.model.Threading.createAtomicLong(J)Lim/actor/model/util/AtomicLongCompat; = AMThreading createAtomicLong:(jlong)defValue;
im.actor.model.jvm.JavaThreading.createAtomicInt(I)Lim/actor/model/util/AtomicIntegerCompat; = AMJavaThreading createAtomicInt:(jint)defValue;
im.actor.model.jvm.JavaThreading.createAtomicLong(J)Lim/actor/model/util/AtomicLongCompat; = AMJavaThreading createAtomicLong:(jlong)defValue;
# Not working
im.actor.model.jvm.JavaThreading.createDispatcher(Ljava/lang/String;ILim/actor/model/droidkit/actors/ThreadPriority;Lim/actor/model/droidkit/actors/ActorSystem)Lim/actor/model/droidkit/actors/mailbox/ActorDispatcher; = AMThreading createDispatcher:(NSString *)name withThreads:(jint)threadsCount withPriority:(DKThreadPriorityEnum *)priority withActorSystem:(DKActorSystem *)actorSystem;

############################
# MainThread
############################
im.actor.model.MainThreadProvider.runOnUiThread(Ljava/lang/Runnable;)V=AMMainThreadProvider runOnUiThread:(id<JavaLangRunnable>)runnable;

############################
# Log Callback
############################
im.actor.model.LogProvider.w(Ljava/lang/String;Ljava/lang/String;)V=AMLogProvider w:(NSString *)tag withMessage:(NSString *)message;
im.actor.model.LogProvider.d(Ljava/lang/String;Ljava/lang/String;)V=AMLogProvider d:(NSString *)tag withMessage:(NSString *)message;
im.actor.model.LogProvider.v(Ljava/lang/String;Ljava/lang/String;)V=AMLogProvider v:(NSString *)tag withMessage:(NSString *)message;
im.actor.model.LogProvider.e(Ljava/lang/String;Ljava/lang/Throwable;)V=AMLogProvider v:(NSString *)tag withError:(JavaLangThrowable *)throwable;

############################
# Configuration builder
############################
im.actor.model.ConfigurationBuilder.setApiConfiguration(Lim/actor/model/ApiConfiguration;)Lim/actor/model/ConfigurationBuilder; = AMConfigurationBuilder setApiConfiguration:(AMApiConfiguration *)config;
im.actor.model.ConfigurationBuilder.setFileSystemProvider(Lim/actor/model/FileSystemProvider;)Lim/actor/model/ConfigurationBuilder; = AMConfigurationBuilder setFileSystemProvider:(id<AMFileSystemProvider>)provider;
im.actor.model.ConfigurationBuilder.setNotificationProvider(Lim/actor/model/NotificationProvider;)Lim/actor/model/ConfigurationBuilder; = AMConfigurationBuilder setNotificationProvider:(id<AMNotificationProvider>)provider;
im.actor.model.ConfigurationBuilder.setCryptoProvider(Lim/actor/model/CryptoProvider;)Lim/actor/model/ConfigurationBuilder; = AMConfigurationBuilder setCryptoProvider:(id<AMCryptoProvider>)provider;
im.actor.model.ConfigurationBuilder.setPhoneBookProvider(Lim/actor/model/PhoneBookProvider;)Lim/actor/model/ConfigurationBuilder; = AMConfigurationBuilder setPhoneBookProvider:(id<AMPhoneBookProvider>)provider;
setLogProvider(Lim/actor/model/LogProvider;)Lim/actor/model/ConfigurationBuilder; = AMConfigurationBuilder setLogProvider:(id<AMLogProvider>)provider;
im.actor.model.ConfigurationBuilder.setNetworkProvider(Lim/actor/model/NetworkProvider;)Lim/actor/model/ConfigurationBuilder; = AMConfigurationBuilder setNetworkProvider:(id<AMNetworkProvider>)provider;
im.actor.model.ConfigurationBuilder.setThreadingProvider(Lim/actor/model/ThreadingProvider;)Lim/actor/model/ConfigurationBuilder; = AMConfigurationBuilder setThreadingProvider:(id<AMThreadingProvider>)provider;
setStorageProvider(Lim/actor/model/StorageProvider;)Lim/actor/model/ConfigurationBuilder; = AMConfigurationBuilder setStorageProvider:(id<AMStorageProvider>)provider;
im.actor.model.ConfigurationBuilder.setCallback(Lim/actor/model/MessengerCallback;)Lim/actor/model/ConfigurationBuilder; = AMConfigurationBuilder setCallback:(id<AMMessengerProvider>)provider;
im.actor.model.ConfigurationBuilder.setMainThreadProvider(Lim/actor/model/MainThreadProvider;)Lim/actor/model/ConfigurationBuilder; = AMConfigurationBuilder setMainThreadProvider:(id<AMMainThreadProvider>)provider;
im.actor.model.ConfigurationBuilder.addEndpoint(Ljava/lang/String;)Lim/actor/model/ConfigurationBuilder; = AMConfigurationBuilder addEndpoint:(NSString *)url;
setLocaleProvider(Lim/actor/model/LocaleProvider;)Lim/actor/model/ConfigurationBuilder; = AMConfigurationBuilder setLocaleProvider:(id<AMLocaleProvider>)provider;
im.actor.model.ConfigurationBuilder.setDispatcherProvider(Lim/actor/model/DispatcherProvider;)Lim/actor/model/ConfigurationBuilder; = AMConfigurationBuilder setDispatcherProvider:(id<AMDispatcherProvider>)dispatcherProvider;

im.actor.model.ConfigurationBuilder.setEnableContactsLogging(Z)Lim/actor/model/ConfigurationBuilder; = AMConfigurationBuilder setEnableContactsLogging:(jboolean)enableContactsLogging;
im.actor.model.ConfigurationBuilder.setEnableNetworkLogging(Z)Lim/actor/model/ConfigurationBuilder; = AMConfigurationBuilder setEnableNetworkLogging:(jboolean)enableNetworkLogging;

############################
# Messenger
############################
# im.actor.model.Messenger.Messenger(Lim/actor/model/Configuration;)V = AMMessenger initWithConfig:(AMConfiguration *)configuration;
im.actor.model.Messenger.getTyping(I)Lim/actor/model/viewmodel/UserTypingVM; = AMMessenger getTyping:(jint)uid;
im.actor.model.Messenger.getGroupTyping(I)Lim/actor/model/viewmodel/GroupTypingVM; = AMMessenger getGroupTyping:(jint)uid;
im.actor.model.Messenger.onConversationOpen(Lim/actor/model/entity/Peer;)V = AMMessenger onConversationOpen:(AMPeer *)peer;
im.actor.model.Messenger.onConversationClosed(Lim/actor/model/entity/Peer;)V = AMMessenger onConversationClosed:(AMPeer *)peer;
im.actor.model.Messenger.onProfileOpen(I)V = AMMessenger onProfileOpen:(jint)uid;
im.actor.model.Messenger.onProfileClosed(I)V = AMMessenger onProfileClosed:(jint)uid;
im.actor.model.Messenger.onInMessageShown(Lim/actor/model/entity/Peer;JJZ)V = AMMessenger onInMessageShown:(AMPeer *)peer withRid:(jlong)rid withDate:(jlong)sortDate withEncrypted:(jboolean)isEncrypted;
im.actor.model.Messenger.onTyping(Lim/actor/model/entity/Peer;)V = AMMessenger onTyping:(AMPeer *)peer;
im.actor.model.Messenger.loadLastReadSortDate(Lim/actor/model/entity/Peer;)J = AMMessenger loadLastReadDate:(AMPeer *)peer;
im.actor.model.Messenger.saveDraft(Lim/actor/model/entity/Peer;Ljava/lang/String;)V = AMMessenger saveDraft:(AMPeer *)peer withText:(NSString *)draft;
im.actor.model.Messenger.loadDraft(Lim/actor/model/entity/Peer;)Ljava/lang/String; = AMMessenger loadDraft:(AMPeer *)peer;
im.actor.model.Messenger.sendMessage(Lim/actor/model/entity/Peer;Ljava/lang/String;)V = AMMessenger sendMessage:(AMPeer *)peer withText:(NSString *)text;
im.actor.model.Messenger.bindRawFile(Lim/actor/model/entity/FileReference;ZLim/actor/model/viewmodel/DownloadCallback;)V = AMMessenger bindRawFileWith:(AMFileReference *)fileReference withAutoStart:(jboolean)isAutoStart withCallback:(id<AMDownloadCallback>)callback
im.actor.model.Messenger.unbindRawFile(JZLim/actor/model/viewmodel/DownloadCallback;)V = AMMessenger unbindRawFile:(jlong)fileId withAutoCancel:(jboolean)isAutoCancel withCallback:(id<AMDownloadCallback>)callback;
im.actor.model.Messenger.bindRawUploadFile(JLim/actor/model/viewmodel/UploadCallback;)V =  AMMessenger bindRawUploadFile:(jlong)rid withCallback:(id<AMUploadCallback>)callback;
im.actor.model.Messenger.unbindRawUploadFile(JLim/actor/model/viewmodel/UploadCallback;)V =  AMMessenger unbindRawUploadFile:(jlong)rid withCallback:(id<AMUploadCallback>)callback;

# Not working
im.actor.model.Messenger.requestSms(J)Lim/actor/model/concurrency/Command<Lim/actor/model/AuthState;>; = AMMessenger requestSms:(jlong)phone;

############################
# DisplayList
############################
# im.actor.model.mvvm.DisplayList.getItem(Z)