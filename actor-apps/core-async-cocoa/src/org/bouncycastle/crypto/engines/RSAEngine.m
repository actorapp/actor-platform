//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/ex3ndr/Develop/actor-platform/actor-apps/core-crypto/src/main/java/org/bouncycastle/crypto/engines/RSAEngine.java
//


#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "java/lang/IllegalStateException.h"
#include "java/math/BigInteger.h"
#include "org/bouncycastle/crypto/engines/RSACoreEngine.h"
#include "org/bouncycastle/crypto/engines/RSAEngine.h"
#include "org/bouncycastle/crypto/params/ParametersWithRandom.h"

@interface OrgBouncycastleCryptoEnginesRSAEngine () {
 @public
  OrgBouncycastleCryptoEnginesRSACoreEngine *core_;
}

@end

J2OBJC_FIELD_SETTER(OrgBouncycastleCryptoEnginesRSAEngine, core_, OrgBouncycastleCryptoEnginesRSACoreEngine *)

@implementation OrgBouncycastleCryptoEnginesRSAEngine

- (void)init__WithBoolean:(jboolean)forEncryption
withOrgBouncycastleCryptoParamsParametersWithRandom:(OrgBouncycastleCryptoParamsParametersWithRandom *)param {
  if (core_ == nil) {
    core_ = new_OrgBouncycastleCryptoEnginesRSACoreEngine_init();
  }
  [((OrgBouncycastleCryptoEnginesRSACoreEngine *) nil_chk(core_)) init__WithBoolean:forEncryption withOrgBouncycastleCryptoParamsParametersWithRandom:param];
}

- (jint)getInputBlockSize {
  return [((OrgBouncycastleCryptoEnginesRSACoreEngine *) nil_chk(core_)) getInputBlockSize];
}

- (jint)getOutputBlockSize {
  return [((OrgBouncycastleCryptoEnginesRSACoreEngine *) nil_chk(core_)) getOutputBlockSize];
}

- (IOSByteArray *)processBlockWithByteArray:(IOSByteArray *)inArg
                                    withInt:(jint)inOff
                                    withInt:(jint)inLen {
  if (core_ == nil) {
    @throw new_JavaLangIllegalStateException_initWithNSString_(@"RSA engine not initialised");
  }
  return [core_ convertOutputWithJavaMathBigInteger:[core_ processBlockWithJavaMathBigInteger:[((OrgBouncycastleCryptoEnginesRSACoreEngine *) nil_chk(core_)) convertInputWithByteArray:inArg withInt:inOff withInt:inLen]]];
}

- (instancetype)init {
  OrgBouncycastleCryptoEnginesRSAEngine_init(self);
  return self;
}

@end

void OrgBouncycastleCryptoEnginesRSAEngine_init(OrgBouncycastleCryptoEnginesRSAEngine *self) {
  (void) NSObject_init(self);
}

OrgBouncycastleCryptoEnginesRSAEngine *new_OrgBouncycastleCryptoEnginesRSAEngine_init() {
  OrgBouncycastleCryptoEnginesRSAEngine *self = [OrgBouncycastleCryptoEnginesRSAEngine alloc];
  OrgBouncycastleCryptoEnginesRSAEngine_init(self);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgBouncycastleCryptoEnginesRSAEngine)
