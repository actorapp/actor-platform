//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/ex3ndr/Develop/actor-platform/actor-apps/core-crypto/src/main/java/org/bouncycastle/crypto/modes/CBCBlockCipher.java
//

#ifndef _OrgBouncycastleCryptoModesCBCBlockCipher_H_
#define _OrgBouncycastleCryptoModesCBCBlockCipher_H_

#include "J2ObjC_header.h"
#include "org/bouncycastle/crypto/BlockCipher.h"

@class IOSByteArray;
@protocol OrgBouncycastleCryptoCipherParameters;

@interface OrgBouncycastleCryptoModesCBCBlockCipher : NSObject < OrgBouncycastleCryptoBlockCipher >

#pragma mark Public

- (instancetype)initWithOrgBouncycastleCryptoBlockCipher:(id<OrgBouncycastleCryptoBlockCipher>)cipher;

- (NSString *)getAlgorithmName;

- (jint)getBlockSize;

- (id<OrgBouncycastleCryptoBlockCipher>)getUnderlyingCipher;

- (void)init__WithBoolean:(jboolean)encrypting
withOrgBouncycastleCryptoCipherParameters:(id<OrgBouncycastleCryptoCipherParameters>)params OBJC_METHOD_FAMILY_NONE;

- (jint)processBlockWithByteArray:(IOSByteArray *)inArg
                          withInt:(jint)inOff
                    withByteArray:(IOSByteArray *)outArg
                          withInt:(jint)outOff;

- (void)reset;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgBouncycastleCryptoModesCBCBlockCipher)

FOUNDATION_EXPORT void OrgBouncycastleCryptoModesCBCBlockCipher_initWithOrgBouncycastleCryptoBlockCipher_(OrgBouncycastleCryptoModesCBCBlockCipher *self, id<OrgBouncycastleCryptoBlockCipher> cipher);

FOUNDATION_EXPORT OrgBouncycastleCryptoModesCBCBlockCipher *new_OrgBouncycastleCryptoModesCBCBlockCipher_initWithOrgBouncycastleCryptoBlockCipher_(id<OrgBouncycastleCryptoBlockCipher> cipher) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(OrgBouncycastleCryptoModesCBCBlockCipher)

#endif // _OrgBouncycastleCryptoModesCBCBlockCipher_H_
