//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/ex3ndr/Develop/actor-platform/actor-apps/core-crypto/src/main/java/org/bouncycastle/crypto/params/ParametersWithRandom.java
//

#ifndef _OrgBouncycastleCryptoParamsParametersWithRandom_H_
#define _OrgBouncycastleCryptoParamsParametersWithRandom_H_

#include "J2ObjC_header.h"
#include "org/bouncycastle/crypto/CipherParameters.h"

@protocol BCRandomProvider;

@interface OrgBouncycastleCryptoParamsParametersWithRandom : NSObject < OrgBouncycastleCryptoCipherParameters >

#pragma mark Public

- (instancetype)initWithOrgBouncycastleCryptoCipherParameters:(id<OrgBouncycastleCryptoCipherParameters>)parameters
                                         withBCRandomProvider:(id<BCRandomProvider>)random;

- (id<OrgBouncycastleCryptoCipherParameters>)getParameters;

- (id<BCRandomProvider>)getRandom;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgBouncycastleCryptoParamsParametersWithRandom)

FOUNDATION_EXPORT void OrgBouncycastleCryptoParamsParametersWithRandom_initWithOrgBouncycastleCryptoCipherParameters_withBCRandomProvider_(OrgBouncycastleCryptoParamsParametersWithRandom *self, id<OrgBouncycastleCryptoCipherParameters> parameters, id<BCRandomProvider> random);

FOUNDATION_EXPORT OrgBouncycastleCryptoParamsParametersWithRandom *new_OrgBouncycastleCryptoParamsParametersWithRandom_initWithOrgBouncycastleCryptoCipherParameters_withBCRandomProvider_(id<OrgBouncycastleCryptoCipherParameters> parameters, id<BCRandomProvider> random) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(OrgBouncycastleCryptoParamsParametersWithRandom)

#endif // _OrgBouncycastleCryptoParamsParametersWithRandom_H_
