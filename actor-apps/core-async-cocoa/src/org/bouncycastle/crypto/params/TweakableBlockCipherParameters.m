//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/ex3ndr/Develop/actor-proprietary/actor-apps/core-crypto/src/main/java/org/bouncycastle/crypto/params/TweakableBlockCipherParameters.java
//


#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "org/bouncycastle/crypto/params/KeyParameter.h"
#include "org/bouncycastle/crypto/params/TweakableBlockCipherParameters.h"
#include "org/bouncycastle/util/Arrays.h"

@interface OrgBouncycastleCryptoParamsTweakableBlockCipherParameters () {
 @public
  IOSByteArray *tweak_;
  OrgBouncycastleCryptoParamsKeyParameter *key_;
}

@end

J2OBJC_FIELD_SETTER(OrgBouncycastleCryptoParamsTweakableBlockCipherParameters, tweak_, IOSByteArray *)
J2OBJC_FIELD_SETTER(OrgBouncycastleCryptoParamsTweakableBlockCipherParameters, key_, OrgBouncycastleCryptoParamsKeyParameter *)

@implementation OrgBouncycastleCryptoParamsTweakableBlockCipherParameters

- (instancetype)initWithOrgBouncycastleCryptoParamsKeyParameter:(OrgBouncycastleCryptoParamsKeyParameter *)key
                                                  withByteArray:(IOSByteArray *)tweak {
  OrgBouncycastleCryptoParamsTweakableBlockCipherParameters_initWithOrgBouncycastleCryptoParamsKeyParameter_withByteArray_(self, key, tweak);
  return self;
}

- (OrgBouncycastleCryptoParamsKeyParameter *)getKey {
  return key_;
}

- (IOSByteArray *)getTweak {
  return tweak_;
}

@end

void OrgBouncycastleCryptoParamsTweakableBlockCipherParameters_initWithOrgBouncycastleCryptoParamsKeyParameter_withByteArray_(OrgBouncycastleCryptoParamsTweakableBlockCipherParameters *self, OrgBouncycastleCryptoParamsKeyParameter *key, IOSByteArray *tweak) {
  (void) NSObject_init(self);
  self->key_ = key;
  self->tweak_ = OrgBouncycastleUtilArrays_cloneWithByteArray_(tweak);
}

OrgBouncycastleCryptoParamsTweakableBlockCipherParameters *new_OrgBouncycastleCryptoParamsTweakableBlockCipherParameters_initWithOrgBouncycastleCryptoParamsKeyParameter_withByteArray_(OrgBouncycastleCryptoParamsKeyParameter *key, IOSByteArray *tweak) {
  OrgBouncycastleCryptoParamsTweakableBlockCipherParameters *self = [OrgBouncycastleCryptoParamsTweakableBlockCipherParameters alloc];
  OrgBouncycastleCryptoParamsTweakableBlockCipherParameters_initWithOrgBouncycastleCryptoParamsKeyParameter_withByteArray_(self, key, tweak);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgBouncycastleCryptoParamsTweakableBlockCipherParameters)
