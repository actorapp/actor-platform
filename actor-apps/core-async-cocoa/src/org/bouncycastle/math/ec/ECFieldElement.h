//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/ex3ndr/Develop/actor-platform/actor-apps/core-crypto/src/main/java/org/bouncycastle/math/ec/ECFieldElement.java
//

#ifndef _OrgBouncycastleMathEcECFieldElement_H_
#define _OrgBouncycastleMathEcECFieldElement_H_

#include "J2ObjC_header.h"
#include "org/bouncycastle/math/ec/ECConstants.h"

@class IOSByteArray;
@class JavaMathBigInteger;

@interface OrgBouncycastleMathEcECFieldElement : NSObject < OrgBouncycastleMathEcECConstants >

#pragma mark Public

- (instancetype)init;

- (OrgBouncycastleMathEcECFieldElement *)addWithOrgBouncycastleMathEcECFieldElement:(OrgBouncycastleMathEcECFieldElement *)b;

- (OrgBouncycastleMathEcECFieldElement *)addOne;

- (jint)bitLength;

- (OrgBouncycastleMathEcECFieldElement *)divideWithOrgBouncycastleMathEcECFieldElement:(OrgBouncycastleMathEcECFieldElement *)b;

- (IOSByteArray *)getEncoded;

- (NSString *)getFieldName;

- (jint)getFieldSize;

- (OrgBouncycastleMathEcECFieldElement *)invert;

- (jboolean)isOne;

- (jboolean)isZero;

- (OrgBouncycastleMathEcECFieldElement *)multiplyWithOrgBouncycastleMathEcECFieldElement:(OrgBouncycastleMathEcECFieldElement *)b;

- (OrgBouncycastleMathEcECFieldElement *)multiplyMinusProductWithOrgBouncycastleMathEcECFieldElement:(OrgBouncycastleMathEcECFieldElement *)b
                                                             withOrgBouncycastleMathEcECFieldElement:(OrgBouncycastleMathEcECFieldElement *)x
                                                             withOrgBouncycastleMathEcECFieldElement:(OrgBouncycastleMathEcECFieldElement *)y;

- (OrgBouncycastleMathEcECFieldElement *)multiplyPlusProductWithOrgBouncycastleMathEcECFieldElement:(OrgBouncycastleMathEcECFieldElement *)b
                                                            withOrgBouncycastleMathEcECFieldElement:(OrgBouncycastleMathEcECFieldElement *)x
                                                            withOrgBouncycastleMathEcECFieldElement:(OrgBouncycastleMathEcECFieldElement *)y;

- (OrgBouncycastleMathEcECFieldElement *)negate;

- (OrgBouncycastleMathEcECFieldElement *)sqrt;

- (OrgBouncycastleMathEcECFieldElement *)square;

- (OrgBouncycastleMathEcECFieldElement *)squareMinusProductWithOrgBouncycastleMathEcECFieldElement:(OrgBouncycastleMathEcECFieldElement *)x
                                                           withOrgBouncycastleMathEcECFieldElement:(OrgBouncycastleMathEcECFieldElement *)y;

- (OrgBouncycastleMathEcECFieldElement *)squarePlusProductWithOrgBouncycastleMathEcECFieldElement:(OrgBouncycastleMathEcECFieldElement *)x
                                                          withOrgBouncycastleMathEcECFieldElement:(OrgBouncycastleMathEcECFieldElement *)y;

- (OrgBouncycastleMathEcECFieldElement *)subtractWithOrgBouncycastleMathEcECFieldElement:(OrgBouncycastleMathEcECFieldElement *)b;

- (jboolean)testBitZero;

- (JavaMathBigInteger *)toBigInteger;

- (NSString *)description;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgBouncycastleMathEcECFieldElement)

FOUNDATION_EXPORT void OrgBouncycastleMathEcECFieldElement_init(OrgBouncycastleMathEcECFieldElement *self);

J2OBJC_TYPE_LITERAL_HEADER(OrgBouncycastleMathEcECFieldElement)

@interface OrgBouncycastleMathEcECFieldElement_Fp : OrgBouncycastleMathEcECFieldElement {
 @public
  JavaMathBigInteger *q_, *r_, *x_;
}

#pragma mark Public

- (instancetype)initWithJavaMathBigInteger:(JavaMathBigInteger *)q
                    withJavaMathBigInteger:(JavaMathBigInteger *)x;

- (OrgBouncycastleMathEcECFieldElement *)addWithOrgBouncycastleMathEcECFieldElement:(OrgBouncycastleMathEcECFieldElement *)b;

- (OrgBouncycastleMathEcECFieldElement *)addOne;

- (OrgBouncycastleMathEcECFieldElement *)divideWithOrgBouncycastleMathEcECFieldElement:(OrgBouncycastleMathEcECFieldElement *)b;

- (jboolean)isEqual:(id)other;

- (NSString *)getFieldName;

- (jint)getFieldSize;

- (JavaMathBigInteger *)getQ;

- (NSUInteger)hash;

- (OrgBouncycastleMathEcECFieldElement *)invert;

- (OrgBouncycastleMathEcECFieldElement *)multiplyWithOrgBouncycastleMathEcECFieldElement:(OrgBouncycastleMathEcECFieldElement *)b;

- (OrgBouncycastleMathEcECFieldElement *)multiplyMinusProductWithOrgBouncycastleMathEcECFieldElement:(OrgBouncycastleMathEcECFieldElement *)b
                                                             withOrgBouncycastleMathEcECFieldElement:(OrgBouncycastleMathEcECFieldElement *)x
                                                             withOrgBouncycastleMathEcECFieldElement:(OrgBouncycastleMathEcECFieldElement *)y;

- (OrgBouncycastleMathEcECFieldElement *)multiplyPlusProductWithOrgBouncycastleMathEcECFieldElement:(OrgBouncycastleMathEcECFieldElement *)b
                                                            withOrgBouncycastleMathEcECFieldElement:(OrgBouncycastleMathEcECFieldElement *)x
                                                            withOrgBouncycastleMathEcECFieldElement:(OrgBouncycastleMathEcECFieldElement *)y;

- (OrgBouncycastleMathEcECFieldElement *)negate;

- (OrgBouncycastleMathEcECFieldElement *)sqrt;

- (OrgBouncycastleMathEcECFieldElement *)square;

- (OrgBouncycastleMathEcECFieldElement *)squareMinusProductWithOrgBouncycastleMathEcECFieldElement:(OrgBouncycastleMathEcECFieldElement *)x
                                                           withOrgBouncycastleMathEcECFieldElement:(OrgBouncycastleMathEcECFieldElement *)y;

- (OrgBouncycastleMathEcECFieldElement *)squarePlusProductWithOrgBouncycastleMathEcECFieldElement:(OrgBouncycastleMathEcECFieldElement *)x
                                                          withOrgBouncycastleMathEcECFieldElement:(OrgBouncycastleMathEcECFieldElement *)y;

- (OrgBouncycastleMathEcECFieldElement *)subtractWithOrgBouncycastleMathEcECFieldElement:(OrgBouncycastleMathEcECFieldElement *)b;

- (JavaMathBigInteger *)toBigInteger;

#pragma mark Protected

- (JavaMathBigInteger *)modAddWithJavaMathBigInteger:(JavaMathBigInteger *)x1
                              withJavaMathBigInteger:(JavaMathBigInteger *)x2;

- (JavaMathBigInteger *)modDoubleWithJavaMathBigInteger:(JavaMathBigInteger *)x;

- (JavaMathBigInteger *)modHalfWithJavaMathBigInteger:(JavaMathBigInteger *)x;

- (JavaMathBigInteger *)modHalfAbsWithJavaMathBigInteger:(JavaMathBigInteger *)x;

- (JavaMathBigInteger *)modInverseWithJavaMathBigInteger:(JavaMathBigInteger *)x;

- (JavaMathBigInteger *)modMultWithJavaMathBigInteger:(JavaMathBigInteger *)x1
                               withJavaMathBigInteger:(JavaMathBigInteger *)x2;

- (JavaMathBigInteger *)modReduceWithJavaMathBigInteger:(JavaMathBigInteger *)x;

- (JavaMathBigInteger *)modSubtractWithJavaMathBigInteger:(JavaMathBigInteger *)x1
                                   withJavaMathBigInteger:(JavaMathBigInteger *)x2;

#pragma mark Package-Private

- (instancetype)initWithJavaMathBigInteger:(JavaMathBigInteger *)q
                    withJavaMathBigInteger:(JavaMathBigInteger *)r
                    withJavaMathBigInteger:(JavaMathBigInteger *)x;

+ (JavaMathBigInteger *)calculateResidueWithJavaMathBigInteger:(JavaMathBigInteger *)p;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgBouncycastleMathEcECFieldElement_Fp)

J2OBJC_FIELD_SETTER(OrgBouncycastleMathEcECFieldElement_Fp, q_, JavaMathBigInteger *)
J2OBJC_FIELD_SETTER(OrgBouncycastleMathEcECFieldElement_Fp, r_, JavaMathBigInteger *)
J2OBJC_FIELD_SETTER(OrgBouncycastleMathEcECFieldElement_Fp, x_, JavaMathBigInteger *)

FOUNDATION_EXPORT JavaMathBigInteger *OrgBouncycastleMathEcECFieldElement_Fp_calculateResidueWithJavaMathBigInteger_(JavaMathBigInteger *p);

FOUNDATION_EXPORT void OrgBouncycastleMathEcECFieldElement_Fp_initWithJavaMathBigInteger_withJavaMathBigInteger_(OrgBouncycastleMathEcECFieldElement_Fp *self, JavaMathBigInteger *q, JavaMathBigInteger *x);

FOUNDATION_EXPORT OrgBouncycastleMathEcECFieldElement_Fp *new_OrgBouncycastleMathEcECFieldElement_Fp_initWithJavaMathBigInteger_withJavaMathBigInteger_(JavaMathBigInteger *q, JavaMathBigInteger *x) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT void OrgBouncycastleMathEcECFieldElement_Fp_initWithJavaMathBigInteger_withJavaMathBigInteger_withJavaMathBigInteger_(OrgBouncycastleMathEcECFieldElement_Fp *self, JavaMathBigInteger *q, JavaMathBigInteger *r, JavaMathBigInteger *x);

FOUNDATION_EXPORT OrgBouncycastleMathEcECFieldElement_Fp *new_OrgBouncycastleMathEcECFieldElement_Fp_initWithJavaMathBigInteger_withJavaMathBigInteger_withJavaMathBigInteger_(JavaMathBigInteger *q, JavaMathBigInteger *r, JavaMathBigInteger *x) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(OrgBouncycastleMathEcECFieldElement_Fp)

#define OrgBouncycastleMathEcECFieldElement_F2m_GNB 1
#define OrgBouncycastleMathEcECFieldElement_F2m_TPB 2
#define OrgBouncycastleMathEcECFieldElement_F2m_PPB 3

@interface OrgBouncycastleMathEcECFieldElement_F2m : OrgBouncycastleMathEcECFieldElement

#pragma mark Public

- (instancetype)initWithInt:(jint)m
                    withInt:(jint)k
     withJavaMathBigInteger:(JavaMathBigInteger *)x;

- (instancetype)initWithInt:(jint)m
                    withInt:(jint)k1
                    withInt:(jint)k2
                    withInt:(jint)k3
     withJavaMathBigInteger:(JavaMathBigInteger *)x;

- (OrgBouncycastleMathEcECFieldElement *)addWithOrgBouncycastleMathEcECFieldElement:(OrgBouncycastleMathEcECFieldElement *)b;

- (OrgBouncycastleMathEcECFieldElement *)addOne;

- (jint)bitLength;

+ (void)checkFieldElementsWithOrgBouncycastleMathEcECFieldElement:(OrgBouncycastleMathEcECFieldElement *)a
                          withOrgBouncycastleMathEcECFieldElement:(OrgBouncycastleMathEcECFieldElement *)b;

- (OrgBouncycastleMathEcECFieldElement *)divideWithOrgBouncycastleMathEcECFieldElement:(OrgBouncycastleMathEcECFieldElement *)b;

- (jboolean)isEqual:(id)anObject;

- (NSString *)getFieldName;

- (jint)getFieldSize;

- (jint)getK1;

- (jint)getK2;

- (jint)getK3;

- (jint)getM;

- (jint)getRepresentation;

- (NSUInteger)hash;

- (OrgBouncycastleMathEcECFieldElement *)invert;

- (jboolean)isOne;

- (jboolean)isZero;

- (OrgBouncycastleMathEcECFieldElement *)multiplyWithOrgBouncycastleMathEcECFieldElement:(OrgBouncycastleMathEcECFieldElement *)b;

- (OrgBouncycastleMathEcECFieldElement *)multiplyMinusProductWithOrgBouncycastleMathEcECFieldElement:(OrgBouncycastleMathEcECFieldElement *)b
                                                             withOrgBouncycastleMathEcECFieldElement:(OrgBouncycastleMathEcECFieldElement *)x
                                                             withOrgBouncycastleMathEcECFieldElement:(OrgBouncycastleMathEcECFieldElement *)y;

- (OrgBouncycastleMathEcECFieldElement *)multiplyPlusProductWithOrgBouncycastleMathEcECFieldElement:(OrgBouncycastleMathEcECFieldElement *)b
                                                            withOrgBouncycastleMathEcECFieldElement:(OrgBouncycastleMathEcECFieldElement *)x
                                                            withOrgBouncycastleMathEcECFieldElement:(OrgBouncycastleMathEcECFieldElement *)y;

- (OrgBouncycastleMathEcECFieldElement *)negate;

- (OrgBouncycastleMathEcECFieldElement *)sqrt;

- (OrgBouncycastleMathEcECFieldElement *)square;

- (OrgBouncycastleMathEcECFieldElement *)squareMinusProductWithOrgBouncycastleMathEcECFieldElement:(OrgBouncycastleMathEcECFieldElement *)x
                                                           withOrgBouncycastleMathEcECFieldElement:(OrgBouncycastleMathEcECFieldElement *)y;

- (OrgBouncycastleMathEcECFieldElement *)squarePlusProductWithOrgBouncycastleMathEcECFieldElement:(OrgBouncycastleMathEcECFieldElement *)x
                                                          withOrgBouncycastleMathEcECFieldElement:(OrgBouncycastleMathEcECFieldElement *)y;

- (OrgBouncycastleMathEcECFieldElement *)subtractWithOrgBouncycastleMathEcECFieldElement:(OrgBouncycastleMathEcECFieldElement *)b;

- (jboolean)testBitZero;

- (JavaMathBigInteger *)toBigInteger;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgBouncycastleMathEcECFieldElement_F2m)

J2OBJC_STATIC_FIELD_GETTER(OrgBouncycastleMathEcECFieldElement_F2m, GNB, jint)

J2OBJC_STATIC_FIELD_GETTER(OrgBouncycastleMathEcECFieldElement_F2m, TPB, jint)

J2OBJC_STATIC_FIELD_GETTER(OrgBouncycastleMathEcECFieldElement_F2m, PPB, jint)

FOUNDATION_EXPORT void OrgBouncycastleMathEcECFieldElement_F2m_initWithInt_withInt_withInt_withInt_withJavaMathBigInteger_(OrgBouncycastleMathEcECFieldElement_F2m *self, jint m, jint k1, jint k2, jint k3, JavaMathBigInteger *x);

FOUNDATION_EXPORT OrgBouncycastleMathEcECFieldElement_F2m *new_OrgBouncycastleMathEcECFieldElement_F2m_initWithInt_withInt_withInt_withInt_withJavaMathBigInteger_(jint m, jint k1, jint k2, jint k3, JavaMathBigInteger *x) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT void OrgBouncycastleMathEcECFieldElement_F2m_initWithInt_withInt_withJavaMathBigInteger_(OrgBouncycastleMathEcECFieldElement_F2m *self, jint m, jint k, JavaMathBigInteger *x);

FOUNDATION_EXPORT OrgBouncycastleMathEcECFieldElement_F2m *new_OrgBouncycastleMathEcECFieldElement_F2m_initWithInt_withInt_withJavaMathBigInteger_(jint m, jint k, JavaMathBigInteger *x) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT void OrgBouncycastleMathEcECFieldElement_F2m_checkFieldElementsWithOrgBouncycastleMathEcECFieldElement_withOrgBouncycastleMathEcECFieldElement_(OrgBouncycastleMathEcECFieldElement *a, OrgBouncycastleMathEcECFieldElement *b);

J2OBJC_TYPE_LITERAL_HEADER(OrgBouncycastleMathEcECFieldElement_F2m)

#endif // _OrgBouncycastleMathEcECFieldElement_H_
