//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/ex3ndr/Develop/actor-platform/actor-apps/library/core/src/main/java/im/actor/model/network/mtp/entity/rpc/RpcError.java
//


#include "IOSClass.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "im/actor/model/droidkit/bser/DataInput.h"
#include "im/actor/model/droidkit/bser/DataOutput.h"
#include "im/actor/model/network/mtp/entity/ProtoStruct.h"
#include "im/actor/model/network/mtp/entity/rpc/RpcError.h"
#include "java/io/IOException.h"

@implementation MTRpcError

- (instancetype)initWithBSDataInput:(BSDataInput *)stream {
  MTRpcError_initWithBSDataInput_(self, stream);
  return self;
}

- (instancetype)initWithInt:(jint)errorCode
               withNSString:(NSString *)errorTag
               withNSString:(NSString *)userMessage
                withBoolean:(jboolean)canTryAgain
              withByteArray:(IOSByteArray *)relatedData {
  MTRpcError_initWithInt_withNSString_withNSString_withBoolean_withByteArray_(self, errorCode, errorTag, userMessage, canTryAgain, relatedData);
  return self;
}

- (jbyte)getHeader {
  return MTRpcError_HEADER;
}

- (void)writeBodyWithBSDataOutput:(BSDataOutput *)bs {
  [((BSDataOutput *) nil_chk(bs)) writeIntWithInt:errorCode_];
  [bs writeProtoStringWithNSString:errorTag_];
  [bs writeProtoStringWithNSString:userMessage_];
  [bs writeProtoBoolWithBoolean:canTryAgain_];
  [bs writeProtoBytesWithByteArray:relatedData_ withInt:0 withInt:((IOSByteArray *) nil_chk(relatedData_))->size_];
}

- (void)readBodyWithBSDataInput:(BSDataInput *)bs {
  errorCode_ = [((BSDataInput *) nil_chk(bs)) readInt];
  errorTag_ = [bs readProtoString];
  userMessage_ = [bs readProtoString];
  canTryAgain_ = [bs readProtoBool];
  relatedData_ = [bs readProtoBytes];
}

- (NSString *)description {
  return JreStrcat("$IC$C", @"RpcError [#", errorCode_, ' ', errorTag_, ']');
}

@end

void MTRpcError_initWithBSDataInput_(MTRpcError *self, BSDataInput *stream) {
  (void) MTProtoStruct_initWithBSDataInput_(self, stream);
}

MTRpcError *new_MTRpcError_initWithBSDataInput_(BSDataInput *stream) {
  MTRpcError *self = [MTRpcError alloc];
  MTRpcError_initWithBSDataInput_(self, stream);
  return self;
}

void MTRpcError_initWithInt_withNSString_withNSString_withBoolean_withByteArray_(MTRpcError *self, jint errorCode, NSString *errorTag, NSString *userMessage, jboolean canTryAgain, IOSByteArray *relatedData) {
  (void) MTProtoStruct_init(self);
  self->errorCode_ = errorCode;
  self->errorTag_ = errorTag;
  self->userMessage_ = userMessage;
  self->canTryAgain_ = canTryAgain;
  self->relatedData_ = relatedData;
}

MTRpcError *new_MTRpcError_initWithInt_withNSString_withNSString_withBoolean_withByteArray_(jint errorCode, NSString *errorTag, NSString *userMessage, jboolean canTryAgain, IOSByteArray *relatedData) {
  MTRpcError *self = [MTRpcError alloc];
  MTRpcError_initWithInt_withNSString_withNSString_withBoolean_withByteArray_(self, errorCode, errorTag, userMessage, canTryAgain, relatedData);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(MTRpcError)
