//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/ex3ndr/Develop/actor-platform/actor-apps/core-async/src/main/java/im/actor/model/modules/DisplayLists.java
//


#include "IOSClass.h"
#include "J2ObjC_source.h"
#include "im/actor/model/MessengerEnvironment.h"
#include "im/actor/model/droidkit/engine/ListEngine.h"
#include "im/actor/model/droidkit/engine/ListEngineDisplayExt.h"
#include "im/actor/model/entity/Dialog.h"
#include "im/actor/model/entity/Message.h"
#include "im/actor/model/entity/Peer.h"
#include "im/actor/model/modules/BaseModule.h"
#include "im/actor/model/modules/Contacts.h"
#include "im/actor/model/modules/DisplayLists.h"
#include "im/actor/model/modules/Messages.h"
#include "im/actor/model/modules/Modules.h"
#include "im/actor/model/modules/SearchModule.h"
#include "im/actor/model/mvvm/BindedDisplayList.h"
#include "im/actor/model/mvvm/DisplayList.h"
#include "im/actor/model/mvvm/MVVMEngine.h"
#include "java/lang/RuntimeException.h"
#include "java/util/HashMap.h"

#define ImActorModelModulesDisplayLists_LOAD_GAP 5
#define ImActorModelModulesDisplayLists_LOAD_PAGE 20

@interface ImActorModelModulesDisplayLists () {
 @public
  AMMessengerEnvironmentEnum *environment_;
  AMDisplayList_OperationModeEnum *operationMode_;
  AMBindedDisplayList *dialogGlobalList_;
  AMBindedDisplayList *contactsGlobalList_;
  JavaUtilHashMap *chatMediaGlobalLists_;
  JavaUtilHashMap *chatsGlobalLists_;
}

@end

J2OBJC_FIELD_SETTER(ImActorModelModulesDisplayLists, environment_, AMMessengerEnvironmentEnum *)
J2OBJC_FIELD_SETTER(ImActorModelModulesDisplayLists, operationMode_, AMDisplayList_OperationModeEnum *)
J2OBJC_FIELD_SETTER(ImActorModelModulesDisplayLists, dialogGlobalList_, AMBindedDisplayList *)
J2OBJC_FIELD_SETTER(ImActorModelModulesDisplayLists, contactsGlobalList_, AMBindedDisplayList *)
J2OBJC_FIELD_SETTER(ImActorModelModulesDisplayLists, chatMediaGlobalLists_, JavaUtilHashMap *)
J2OBJC_FIELD_SETTER(ImActorModelModulesDisplayLists, chatsGlobalLists_, JavaUtilHashMap *)

J2OBJC_STATIC_FIELD_GETTER(ImActorModelModulesDisplayLists, LOAD_GAP, jint)

J2OBJC_STATIC_FIELD_GETTER(ImActorModelModulesDisplayLists, LOAD_PAGE, jint)

@interface ImActorModelModulesDisplayLists_$1 : NSObject < AMBindedDisplayList_BindHook > {
 @public
  ImActorModelModulesDisplayLists *this$0_;
}

- (void)onScrolledToEnd;

- (void)onItemTouchedWithId:(AMDialog *)item;

- (instancetype)initWithImActorModelModulesDisplayLists:(ImActorModelModulesDisplayLists *)outer$;

@end

J2OBJC_EMPTY_STATIC_INIT(ImActorModelModulesDisplayLists_$1)

J2OBJC_FIELD_SETTER(ImActorModelModulesDisplayLists_$1, this$0_, ImActorModelModulesDisplayLists *)

__attribute__((unused)) static void ImActorModelModulesDisplayLists_$1_initWithImActorModelModulesDisplayLists_(ImActorModelModulesDisplayLists_$1 *self, ImActorModelModulesDisplayLists *outer$);

__attribute__((unused)) static ImActorModelModulesDisplayLists_$1 *new_ImActorModelModulesDisplayLists_$1_initWithImActorModelModulesDisplayLists_(ImActorModelModulesDisplayLists *outer$) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(ImActorModelModulesDisplayLists_$1)

@interface ImActorModelModulesDisplayLists_$2 : NSObject < AMBindedDisplayList_BindHook > {
 @public
  ImActorModelModulesDisplayLists *this$0_;
  AMPeer *val$peer_;
}

- (void)onScrolledToEnd;

- (void)onItemTouchedWithId:(AMMessage *)item;

- (instancetype)initWithImActorModelModulesDisplayLists:(ImActorModelModulesDisplayLists *)outer$
                                             withAMPeer:(AMPeer *)capture$0;

@end

J2OBJC_EMPTY_STATIC_INIT(ImActorModelModulesDisplayLists_$2)

J2OBJC_FIELD_SETTER(ImActorModelModulesDisplayLists_$2, this$0_, ImActorModelModulesDisplayLists *)
J2OBJC_FIELD_SETTER(ImActorModelModulesDisplayLists_$2, val$peer_, AMPeer *)

__attribute__((unused)) static void ImActorModelModulesDisplayLists_$2_initWithImActorModelModulesDisplayLists_withAMPeer_(ImActorModelModulesDisplayLists_$2 *self, ImActorModelModulesDisplayLists *outer$, AMPeer *capture$0);

__attribute__((unused)) static ImActorModelModulesDisplayLists_$2 *new_ImActorModelModulesDisplayLists_$2_initWithImActorModelModulesDisplayLists_withAMPeer_(ImActorModelModulesDisplayLists *outer$, AMPeer *capture$0) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(ImActorModelModulesDisplayLists_$2)

@implementation ImActorModelModulesDisplayLists

- (instancetype)initWithAMMessengerEnvironmentEnum:(AMMessengerEnvironmentEnum *)environment
                    withImActorModelModulesModules:(ImActorModelModulesModules *)modules {
  ImActorModelModulesDisplayLists_initWithAMMessengerEnvironmentEnum_withImActorModelModulesModules_(self, environment, modules);
  return self;
}

- (AMBindedDisplayList *)getContactsGlobalList {
  AMMVVMEngine_checkMainThread();
  if (contactsGlobalList_ == nil) {
    contactsGlobalList_ = [self buildNewContactListWithBoolean:YES];
  }
  return contactsGlobalList_;
}

- (AMBindedDisplayList *)getDialogsGlobalList {
  AMMVVMEngine_checkMainThread();
  if (dialogGlobalList_ == nil) {
    dialogGlobalList_ = [self buildNewDialogsListWithBoolean:YES];
  }
  return dialogGlobalList_;
}

- (AMBindedDisplayList *)getMessagesGlobalListWithAMPeer:(AMPeer *)peer {
  AMMVVMEngine_checkMainThread();
  if (![((JavaUtilHashMap *) nil_chk(chatsGlobalLists_)) containsKeyWithId:peer]) {
    (void) [chatsGlobalLists_ putWithId:peer withId:[self buildNewChatListWithAMPeer:peer withBoolean:YES]];
  }
  return [chatsGlobalLists_ getWithId:peer];
}

- (AMBindedDisplayList *)getMessagesMediaListWithAMPeer:(AMPeer *)peer {
  AMMVVMEngine_checkMainThread();
  if (![((JavaUtilHashMap *) nil_chk(chatMediaGlobalLists_)) containsKeyWithId:peer]) {
    (void) [chatMediaGlobalLists_ putWithId:peer withId:[self buildMediaListWithAMPeer:peer withBoolean:YES]];
  }
  return [chatMediaGlobalLists_ getWithId:peer];
}

- (jint)getMediaCountWithAMPeer:(AMPeer *)peer {
  id<DKListEngine> mediaEngine = [((ImActorModelModulesMessages *) nil_chk([((ImActorModelModulesModules *) nil_chk([self modules])) getMessagesModule])) getMediaEngineWithAMPeer:peer];
  return [((id<DKListEngine>) nil_chk(mediaEngine)) getCount];
}

- (AMBindedDisplayList *)buildNewDialogsListWithBoolean:(jboolean)isGlobalList {
  AMMVVMEngine_checkMainThread();
  id<DKListEngine> dialogsEngine = [((ImActorModelModulesMessages *) nil_chk([((ImActorModelModulesModules *) nil_chk([self modules])) getMessagesModule])) getDialogsEngine];
  if (!([DKListEngineDisplayExt_class_() isInstance:dialogsEngine])) {
    @throw new_JavaLangRuntimeException_initWithNSString_(@"Dialogs ListEngine must implement ListEngineDisplayExt for using global list");
  }
  id<AMBindedDisplayList_BindHook> hook = nil;
  if (isGlobalList) {
    hook = new_ImActorModelModulesDisplayLists_$1_initWithImActorModelModulesDisplayLists_(self);
  }
  AMBindedDisplayList *displayList = new_AMBindedDisplayList_initWithDKListEngineDisplayExt_withBoolean_withInt_withInt_withAMBindedDisplayList_BindHook_((id<DKListEngineDisplayExt>) check_protocol_cast(dialogsEngine, @protocol(DKListEngineDisplayExt)), isGlobalList, ImActorModelModulesDisplayLists_LOAD_PAGE, ImActorModelModulesDisplayLists_LOAD_GAP, hook);
  [displayList initTopWithRefresh:NO];
  return displayList;
}

- (AMBindedDisplayList *)buildNewContactListWithBoolean:(jboolean)isGlobalList {
  AMMVVMEngine_checkMainThread();
  id<DKListEngine> contactsEngine = [((ImActorModelModulesContacts *) nil_chk([((ImActorModelModulesModules *) nil_chk([self modules])) getContactsModule])) getContacts];
  if (!([DKListEngineDisplayExt_class_() isInstance:contactsEngine])) {
    @throw new_JavaLangRuntimeException_initWithNSString_(@"Contacts ListEngine must implement ListEngineDisplayExt for using global list");
  }
  AMBindedDisplayList *contactList = new_AMBindedDisplayList_initWithDKListEngineDisplayExt_withBoolean_withInt_withInt_withAMBindedDisplayList_BindHook_((id<DKListEngineDisplayExt>) check_protocol_cast(contactsEngine, @protocol(DKListEngineDisplayExt)), isGlobalList, ImActorModelModulesDisplayLists_LOAD_PAGE, ImActorModelModulesDisplayLists_LOAD_GAP, nil);
  [contactList initTopWithRefresh:NO];
  return contactList;
}

- (AMBindedDisplayList *)buildNewChatListWithAMPeer:(AMPeer *)peer
                                        withBoolean:(jboolean)isGlobalList {
  AMMVVMEngine_checkMainThread();
  id<DKListEngine> messagesEngine = [((ImActorModelModulesMessages *) nil_chk([((ImActorModelModulesModules *) nil_chk([self modules])) getMessagesModule])) getConversationEngineWithAMPeer:peer];
  if (!([DKListEngineDisplayExt_class_() isInstance:messagesEngine])) {
    @throw new_JavaLangRuntimeException_initWithNSString_(@"Conversation ListEngine must implement ListEngineDisplayExt for using global list");
  }
  id<AMBindedDisplayList_BindHook> hook = nil;
  if (isGlobalList) {
    hook = new_ImActorModelModulesDisplayLists_$2_initWithImActorModelModulesDisplayLists_withAMPeer_(self, peer);
  }
  AMBindedDisplayList *chatList = new_AMBindedDisplayList_initWithDKListEngineDisplayExt_withBoolean_withInt_withInt_withAMBindedDisplayList_BindHook_((id<DKListEngineDisplayExt>) check_protocol_cast(messagesEngine, @protocol(DKListEngineDisplayExt)), isGlobalList, ImActorModelModulesDisplayLists_LOAD_PAGE, ImActorModelModulesDisplayLists_LOAD_GAP, hook);
  jlong lastRead = [((ImActorModelModulesMessages *) nil_chk([((ImActorModelModulesModules *) nil_chk([self modules])) getMessagesModule])) loadReadStateWithAMPeer:peer];
  if (lastRead != 0) [chatList initCenterWithKey:lastRead withRefresh:NO];
  else [chatList initTopWithRefresh:NO];
  return chatList;
}

- (AMBindedDisplayList *)buildMediaListWithAMPeer:(AMPeer *)peer
                                      withBoolean:(jboolean)isGlobalList {
  AMMVVMEngine_checkMainThread();
  id<DKListEngine> mediaEngine = [((ImActorModelModulesMessages *) nil_chk([((ImActorModelModulesModules *) nil_chk([self modules])) getMessagesModule])) getMediaEngineWithAMPeer:peer];
  if (!([DKListEngineDisplayExt_class_() isInstance:mediaEngine])) {
    @throw new_JavaLangRuntimeException_initWithNSString_(@"Media ListEngine must implement ListEngineDisplayExt for using global list");
  }
  AMBindedDisplayList *mediaList = new_AMBindedDisplayList_initWithDKListEngineDisplayExt_withBoolean_withInt_withInt_withAMBindedDisplayList_BindHook_((id<DKListEngineDisplayExt>) check_protocol_cast(mediaEngine, @protocol(DKListEngineDisplayExt)), isGlobalList, ImActorModelModulesDisplayLists_LOAD_PAGE, ImActorModelModulesDisplayLists_LOAD_GAP, nil);
  [mediaList initTopWithRefresh:NO];
  return mediaList;
}

- (AMBindedDisplayList *)buildNewSearchListWithBoolean:(jboolean)isGlobalList {
  AMMVVMEngine_checkMainThread();
  id<DKListEngine> contactsEngine = [((ImActorModelModulesSearchModule *) nil_chk([((ImActorModelModulesModules *) nil_chk([self modules])) getSearch])) getSearchList];
  if (!([DKListEngineDisplayExt_class_() isInstance:contactsEngine])) {
    @throw new_JavaLangRuntimeException_initWithNSString_(@"Search ListEngine must implement ListEngineDisplayExt for using global list");
  }
  AMBindedDisplayList *contactList = new_AMBindedDisplayList_initWithDKListEngineDisplayExt_withBoolean_withInt_withInt_withAMBindedDisplayList_BindHook_((id<DKListEngineDisplayExt>) check_protocol_cast(contactsEngine, @protocol(DKListEngineDisplayExt)), isGlobalList, ImActorModelModulesDisplayLists_LOAD_PAGE, ImActorModelModulesDisplayLists_LOAD_GAP, nil);
  [contactList initEmpty];
  return contactList;
}

@end

void ImActorModelModulesDisplayLists_initWithAMMessengerEnvironmentEnum_withImActorModelModulesModules_(ImActorModelModulesDisplayLists *self, AMMessengerEnvironmentEnum *environment, ImActorModelModulesModules *modules) {
  (void) ImActorModelModulesBaseModule_initWithImActorModelModulesModules_(self, modules);
  self->chatMediaGlobalLists_ = new_JavaUtilHashMap_init();
  self->chatsGlobalLists_ = new_JavaUtilHashMap_init();
  self->environment_ = environment;
  switch ([environment ordinal]) {
    case AMMessengerEnvironment_ANDROID:
    self->operationMode_ = AMDisplayList_OperationModeEnum_get_ANDROID();
    break;
    default:
    self->operationMode_ = AMDisplayList_OperationModeEnum_get_GENERAL();
  }
}

ImActorModelModulesDisplayLists *new_ImActorModelModulesDisplayLists_initWithAMMessengerEnvironmentEnum_withImActorModelModulesModules_(AMMessengerEnvironmentEnum *environment, ImActorModelModulesModules *modules) {
  ImActorModelModulesDisplayLists *self = [ImActorModelModulesDisplayLists alloc];
  ImActorModelModulesDisplayLists_initWithAMMessengerEnvironmentEnum_withImActorModelModulesModules_(self, environment, modules);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ImActorModelModulesDisplayLists)

@implementation ImActorModelModulesDisplayLists_$1

- (void)onScrolledToEnd {
  [((ImActorModelModulesMessages *) nil_chk([((ImActorModelModulesModules *) nil_chk([this$0_ modules])) getMessagesModule])) loadMoreDialogs];
}

- (void)onItemTouchedWithId:(AMDialog *)item {
}

- (instancetype)initWithImActorModelModulesDisplayLists:(ImActorModelModulesDisplayLists *)outer$ {
  ImActorModelModulesDisplayLists_$1_initWithImActorModelModulesDisplayLists_(self, outer$);
  return self;
}

@end

void ImActorModelModulesDisplayLists_$1_initWithImActorModelModulesDisplayLists_(ImActorModelModulesDisplayLists_$1 *self, ImActorModelModulesDisplayLists *outer$) {
  self->this$0_ = outer$;
  (void) NSObject_init(self);
}

ImActorModelModulesDisplayLists_$1 *new_ImActorModelModulesDisplayLists_$1_initWithImActorModelModulesDisplayLists_(ImActorModelModulesDisplayLists *outer$) {
  ImActorModelModulesDisplayLists_$1 *self = [ImActorModelModulesDisplayLists_$1 alloc];
  ImActorModelModulesDisplayLists_$1_initWithImActorModelModulesDisplayLists_(self, outer$);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ImActorModelModulesDisplayLists_$1)

@implementation ImActorModelModulesDisplayLists_$2

- (void)onScrolledToEnd {
  [((ImActorModelModulesMessages *) nil_chk([((ImActorModelModulesModules *) nil_chk([this$0_ modules])) getMessagesModule])) loadMoreHistoryWithAMPeer:val$peer_];
}

- (void)onItemTouchedWithId:(AMMessage *)item {
  if ([((AMMessage *) nil_chk(item)) getSenderId] != [this$0_ myUid]) {
    [((ImActorModelModulesMessages *) nil_chk([((ImActorModelModulesModules *) nil_chk([this$0_ modules])) getMessagesModule])) onInMessageShownWithAMPeer:val$peer_ withLong:[item getSortDate]];
  }
}

- (instancetype)initWithImActorModelModulesDisplayLists:(ImActorModelModulesDisplayLists *)outer$
                                             withAMPeer:(AMPeer *)capture$0 {
  ImActorModelModulesDisplayLists_$2_initWithImActorModelModulesDisplayLists_withAMPeer_(self, outer$, capture$0);
  return self;
}

@end

void ImActorModelModulesDisplayLists_$2_initWithImActorModelModulesDisplayLists_withAMPeer_(ImActorModelModulesDisplayLists_$2 *self, ImActorModelModulesDisplayLists *outer$, AMPeer *capture$0) {
  self->this$0_ = outer$;
  self->val$peer_ = capture$0;
  (void) NSObject_init(self);
}

ImActorModelModulesDisplayLists_$2 *new_ImActorModelModulesDisplayLists_$2_initWithImActorModelModulesDisplayLists_withAMPeer_(ImActorModelModulesDisplayLists *outer$, AMPeer *capture$0) {
  ImActorModelModulesDisplayLists_$2 *self = [ImActorModelModulesDisplayLists_$2 alloc];
  ImActorModelModulesDisplayLists_$2_initWithImActorModelModulesDisplayLists_withAMPeer_(self, outer$, capture$0);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ImActorModelModulesDisplayLists_$2)
