//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/ex3ndr/Develop/actor-proprietary/actor-apps/core/src/main/java/im/actor/model/modules/messages/DialogsActor.java
//


#include "J2ObjC_source.h"
#include "im/actor/model/droidkit/actors/Actor.h"
#include "im/actor/model/droidkit/engine/ListEngine.h"
#include "im/actor/model/entity/Avatar.h"
#include "im/actor/model/entity/ContentDescription.h"
#include "im/actor/model/entity/ContentType.h"
#include "im/actor/model/entity/Dialog.h"
#include "im/actor/model/entity/DialogBuilder.h"
#include "im/actor/model/entity/Group.h"
#include "im/actor/model/entity/Message.h"
#include "im/actor/model/entity/MessageState.h"
#include "im/actor/model/entity/Peer.h"
#include "im/actor/model/entity/PeerType.h"
#include "im/actor/model/entity/User.h"
#include "im/actor/model/entity/content/AbsContent.h"
#include "im/actor/model/log/Log.h"
#include "im/actor/model/modules/AppStateModule.h"
#include "im/actor/model/modules/Messages.h"
#include "im/actor/model/modules/Modules.h"
#include "im/actor/model/modules/SearchModule.h"
#include "im/actor/model/modules/messages/DialogsActor.h"
#include "im/actor/model/modules/messages/entity/DialogHistory.h"
#include "im/actor/model/modules/utils/ModuleActor.h"
#include "im/actor/model/util/JavaUtil.h"
#include "java/util/ArrayList.h"
#include "java/util/List.h"

@class ImActorModelModulesMessagesDialogsActor_PeerDesc;

@interface ImActorModelModulesMessagesDialogsActor () {
 @public
  id<DKListEngine> dialogs_;
}

- (void)onMessageWithAMPeer:(AMPeer *)peer
              withAMMessage:(AMMessage *)message
                withBoolean:(jboolean)forceWrite
                    withInt:(jint)counter;

- (void)onUserChangedWithAMUser:(AMUser *)user;

- (void)onGroupChangedWithAMGroup:(AMGroup *)group;

- (void)onChatDeletedWithAMPeer:(AMPeer *)peer;

- (void)onChatClearWithAMPeer:(AMPeer *)peer;

- (void)onMessageStatusChangedWithAMPeer:(AMPeer *)peer
                                withLong:(jlong)rid
                  withAMMessageStateEnum:(AMMessageStateEnum *)state;

- (void)onMessageContentChangedWithAMPeer:(AMPeer *)peer
                                 withLong:(jlong)rid
                         withAMAbsContent:(AMAbsContent *)content;

- (void)onCounterChangedWithAMPeer:(AMPeer *)peer
                           withInt:(jint)count;

- (void)onHistoryLoadedWithJavaUtilList:(id<JavaUtilList>)history;

- (void)addOrUpdateItemsWithJavaUtilList:(id<JavaUtilList>)updated;

- (void)addOrUpdateItemWithAMDialog:(AMDialog *)dialog;

- (void)notifyState;

- (ImActorModelModulesMessagesDialogsActor_PeerDesc *)buildPeerDescWithAMPeer:(AMPeer *)peer;

@end

J2OBJC_FIELD_SETTER(ImActorModelModulesMessagesDialogsActor, dialogs_, id<DKListEngine>)

__attribute__((unused)) static void ImActorModelModulesMessagesDialogsActor_onMessageWithAMPeer_withAMMessage_withBoolean_withInt_(ImActorModelModulesMessagesDialogsActor *self, AMPeer *peer, AMMessage *message, jboolean forceWrite, jint counter);

__attribute__((unused)) static void ImActorModelModulesMessagesDialogsActor_onUserChangedWithAMUser_(ImActorModelModulesMessagesDialogsActor *self, AMUser *user);

__attribute__((unused)) static void ImActorModelModulesMessagesDialogsActor_onGroupChangedWithAMGroup_(ImActorModelModulesMessagesDialogsActor *self, AMGroup *group);

__attribute__((unused)) static void ImActorModelModulesMessagesDialogsActor_onChatDeletedWithAMPeer_(ImActorModelModulesMessagesDialogsActor *self, AMPeer *peer);

__attribute__((unused)) static void ImActorModelModulesMessagesDialogsActor_onChatClearWithAMPeer_(ImActorModelModulesMessagesDialogsActor *self, AMPeer *peer);

__attribute__((unused)) static void ImActorModelModulesMessagesDialogsActor_onMessageStatusChangedWithAMPeer_withLong_withAMMessageStateEnum_(ImActorModelModulesMessagesDialogsActor *self, AMPeer *peer, jlong rid, AMMessageStateEnum *state);

__attribute__((unused)) static void ImActorModelModulesMessagesDialogsActor_onMessageContentChangedWithAMPeer_withLong_withAMAbsContent_(ImActorModelModulesMessagesDialogsActor *self, AMPeer *peer, jlong rid, AMAbsContent *content);

__attribute__((unused)) static void ImActorModelModulesMessagesDialogsActor_onCounterChangedWithAMPeer_withInt_(ImActorModelModulesMessagesDialogsActor *self, AMPeer *peer, jint count);

__attribute__((unused)) static void ImActorModelModulesMessagesDialogsActor_onHistoryLoadedWithJavaUtilList_(ImActorModelModulesMessagesDialogsActor *self, id<JavaUtilList> history);

__attribute__((unused)) static void ImActorModelModulesMessagesDialogsActor_addOrUpdateItemsWithJavaUtilList_(ImActorModelModulesMessagesDialogsActor *self, id<JavaUtilList> updated);

__attribute__((unused)) static void ImActorModelModulesMessagesDialogsActor_addOrUpdateItemWithAMDialog_(ImActorModelModulesMessagesDialogsActor *self, AMDialog *dialog);

__attribute__((unused)) static void ImActorModelModulesMessagesDialogsActor_notifyState(ImActorModelModulesMessagesDialogsActor *self);

__attribute__((unused)) static ImActorModelModulesMessagesDialogsActor_PeerDesc *ImActorModelModulesMessagesDialogsActor_buildPeerDescWithAMPeer_(ImActorModelModulesMessagesDialogsActor *self, AMPeer *peer);

@interface ImActorModelModulesMessagesDialogsActor_PeerDesc : NSObject {
 @public
  NSString *title_;
  AMAvatar *avatar_;
}

- (instancetype)initWithImActorModelModulesMessagesDialogsActor:(ImActorModelModulesMessagesDialogsActor *)outer$
                                                   withNSString:(NSString *)title
                                                   withAMAvatar:(AMAvatar *)avatar;

- (NSString *)getTitle;

- (AMAvatar *)getAvatar;

@end

J2OBJC_EMPTY_STATIC_INIT(ImActorModelModulesMessagesDialogsActor_PeerDesc)

J2OBJC_FIELD_SETTER(ImActorModelModulesMessagesDialogsActor_PeerDesc, title_, NSString *)
J2OBJC_FIELD_SETTER(ImActorModelModulesMessagesDialogsActor_PeerDesc, avatar_, AMAvatar *)

__attribute__((unused)) static void ImActorModelModulesMessagesDialogsActor_PeerDesc_initWithImActorModelModulesMessagesDialogsActor_withNSString_withAMAvatar_(ImActorModelModulesMessagesDialogsActor_PeerDesc *self, ImActorModelModulesMessagesDialogsActor *outer$, NSString *title, AMAvatar *avatar);

__attribute__((unused)) static ImActorModelModulesMessagesDialogsActor_PeerDesc *new_ImActorModelModulesMessagesDialogsActor_PeerDesc_initWithImActorModelModulesMessagesDialogsActor_withNSString_withAMAvatar_(ImActorModelModulesMessagesDialogsActor *outer$, NSString *title, AMAvatar *avatar) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(ImActorModelModulesMessagesDialogsActor_PeerDesc)

@interface ImActorModelModulesMessagesDialogsActor_InMessage () {
 @public
  AMPeer *peer_;
  AMMessage *message_;
  jint counter_;
}

@end

J2OBJC_FIELD_SETTER(ImActorModelModulesMessagesDialogsActor_InMessage, peer_, AMPeer *)
J2OBJC_FIELD_SETTER(ImActorModelModulesMessagesDialogsActor_InMessage, message_, AMMessage *)

@interface ImActorModelModulesMessagesDialogsActor_CounterChanged () {
 @public
  AMPeer *peer_;
  jint counter_;
}

@end

J2OBJC_FIELD_SETTER(ImActorModelModulesMessagesDialogsActor_CounterChanged, peer_, AMPeer *)

@interface ImActorModelModulesMessagesDialogsActor_UserChanged () {
 @public
  AMUser *user_;
}

@end

J2OBJC_FIELD_SETTER(ImActorModelModulesMessagesDialogsActor_UserChanged, user_, AMUser *)

@interface ImActorModelModulesMessagesDialogsActor_GroupChanged () {
 @public
  AMGroup *group_;
}

@end

J2OBJC_FIELD_SETTER(ImActorModelModulesMessagesDialogsActor_GroupChanged, group_, AMGroup *)

@interface ImActorModelModulesMessagesDialogsActor_ChatClear () {
 @public
  AMPeer *peer_;
}

@end

J2OBJC_FIELD_SETTER(ImActorModelModulesMessagesDialogsActor_ChatClear, peer_, AMPeer *)

@interface ImActorModelModulesMessagesDialogsActor_ChatDelete () {
 @public
  AMPeer *peer_;
}

@end

J2OBJC_FIELD_SETTER(ImActorModelModulesMessagesDialogsActor_ChatDelete, peer_, AMPeer *)

@interface ImActorModelModulesMessagesDialogsActor_MessageStateChanged () {
 @public
  AMPeer *peer_;
  jlong rid_;
  AMMessageStateEnum *state_;
}

@end

J2OBJC_FIELD_SETTER(ImActorModelModulesMessagesDialogsActor_MessageStateChanged, peer_, AMPeer *)
J2OBJC_FIELD_SETTER(ImActorModelModulesMessagesDialogsActor_MessageStateChanged, state_, AMMessageStateEnum *)

@interface ImActorModelModulesMessagesDialogsActor_MessageContentChanged () {
 @public
  AMPeer *peer_;
  jlong rid_;
  AMAbsContent *content_;
}

@end

J2OBJC_FIELD_SETTER(ImActorModelModulesMessagesDialogsActor_MessageContentChanged, peer_, AMPeer *)
J2OBJC_FIELD_SETTER(ImActorModelModulesMessagesDialogsActor_MessageContentChanged, content_, AMAbsContent *)

@interface ImActorModelModulesMessagesDialogsActor_MessageDeleted () {
 @public
  AMPeer *peer_;
  AMMessage *topMessage_;
}

@end

J2OBJC_FIELD_SETTER(ImActorModelModulesMessagesDialogsActor_MessageDeleted, peer_, AMPeer *)
J2OBJC_FIELD_SETTER(ImActorModelModulesMessagesDialogsActor_MessageDeleted, topMessage_, AMMessage *)

@interface ImActorModelModulesMessagesDialogsActor_HistoryLoaded () {
 @public
  id<JavaUtilList> history_;
}

@end

J2OBJC_FIELD_SETTER(ImActorModelModulesMessagesDialogsActor_HistoryLoaded, history_, id<JavaUtilList>)

@implementation ImActorModelModulesMessagesDialogsActor

- (instancetype)initWithImActorModelModulesModules:(ImActorModelModulesModules *)messenger {
  ImActorModelModulesMessagesDialogsActor_initWithImActorModelModulesModules_(self, messenger);
  return self;
}

- (void)preStart {
  [super preStart];
  self->dialogs_ = [((ImActorModelModulesMessages *) nil_chk([((ImActorModelModulesModules *) nil_chk([self modules])) getMessagesModule])) getDialogsEngine];
  ImActorModelModulesMessagesDialogsActor_notifyState(self);
}

- (void)onMessageWithAMPeer:(AMPeer *)peer
              withAMMessage:(AMMessage *)message
                withBoolean:(jboolean)forceWrite
                    withInt:(jint)counter {
  ImActorModelModulesMessagesDialogsActor_onMessageWithAMPeer_withAMMessage_withBoolean_withInt_(self, peer, message, forceWrite, counter);
}

- (void)onUserChangedWithAMUser:(AMUser *)user {
  ImActorModelModulesMessagesDialogsActor_onUserChangedWithAMUser_(self, user);
}

- (void)onGroupChangedWithAMGroup:(AMGroup *)group {
  ImActorModelModulesMessagesDialogsActor_onGroupChangedWithAMGroup_(self, group);
}

- (void)onChatDeletedWithAMPeer:(AMPeer *)peer {
  ImActorModelModulesMessagesDialogsActor_onChatDeletedWithAMPeer_(self, peer);
}

- (void)onChatClearWithAMPeer:(AMPeer *)peer {
  ImActorModelModulesMessagesDialogsActor_onChatClearWithAMPeer_(self, peer);
}

- (void)onMessageStatusChangedWithAMPeer:(AMPeer *)peer
                                withLong:(jlong)rid
                  withAMMessageStateEnum:(AMMessageStateEnum *)state {
  ImActorModelModulesMessagesDialogsActor_onMessageStatusChangedWithAMPeer_withLong_withAMMessageStateEnum_(self, peer, rid, state);
}

- (void)onMessageContentChangedWithAMPeer:(AMPeer *)peer
                                 withLong:(jlong)rid
                         withAMAbsContent:(AMAbsContent *)content {
  ImActorModelModulesMessagesDialogsActor_onMessageContentChangedWithAMPeer_withLong_withAMAbsContent_(self, peer, rid, content);
}

- (void)onCounterChangedWithAMPeer:(AMPeer *)peer
                           withInt:(jint)count {
  ImActorModelModulesMessagesDialogsActor_onCounterChangedWithAMPeer_withInt_(self, peer, count);
}

- (void)onHistoryLoadedWithJavaUtilList:(id<JavaUtilList>)history {
  ImActorModelModulesMessagesDialogsActor_onHistoryLoadedWithJavaUtilList_(self, history);
}

- (void)addOrUpdateItemsWithJavaUtilList:(id<JavaUtilList>)updated {
  ImActorModelModulesMessagesDialogsActor_addOrUpdateItemsWithJavaUtilList_(self, updated);
}

- (void)addOrUpdateItemWithAMDialog:(AMDialog *)dialog {
  ImActorModelModulesMessagesDialogsActor_addOrUpdateItemWithAMDialog_(self, dialog);
}

- (void)notifyState {
  ImActorModelModulesMessagesDialogsActor_notifyState(self);
}

- (ImActorModelModulesMessagesDialogsActor_PeerDesc *)buildPeerDescWithAMPeer:(AMPeer *)peer {
  return ImActorModelModulesMessagesDialogsActor_buildPeerDescWithAMPeer_(self, peer);
}

- (void)onReceiveWithId:(id)message {
  if ([message isKindOfClass:[ImActorModelModulesMessagesDialogsActor_InMessage class]]) {
    ImActorModelModulesMessagesDialogsActor_InMessage *inMessage = (ImActorModelModulesMessagesDialogsActor_InMessage *) check_class_cast(message, [ImActorModelModulesMessagesDialogsActor_InMessage class]);
    ImActorModelModulesMessagesDialogsActor_onMessageWithAMPeer_withAMMessage_withBoolean_withInt_(self, [((ImActorModelModulesMessagesDialogsActor_InMessage *) nil_chk(inMessage)) getPeer], [inMessage getMessage], NO, [inMessage getCounter]);
  }
  else if ([message isKindOfClass:[ImActorModelModulesMessagesDialogsActor_UserChanged class]]) {
    ImActorModelModulesMessagesDialogsActor_UserChanged *userChanged = (ImActorModelModulesMessagesDialogsActor_UserChanged *) check_class_cast(message, [ImActorModelModulesMessagesDialogsActor_UserChanged class]);
    ImActorModelModulesMessagesDialogsActor_onUserChangedWithAMUser_(self, [((ImActorModelModulesMessagesDialogsActor_UserChanged *) nil_chk(userChanged)) getUser]);
  }
  else if ([message isKindOfClass:[ImActorModelModulesMessagesDialogsActor_ChatClear class]]) {
    ImActorModelModulesMessagesDialogsActor_onChatClearWithAMPeer_(self, [((ImActorModelModulesMessagesDialogsActor_ChatClear *) nil_chk(((ImActorModelModulesMessagesDialogsActor_ChatClear *) check_class_cast(message, [ImActorModelModulesMessagesDialogsActor_ChatClear class])))) getPeer]);
  }
  else if ([message isKindOfClass:[ImActorModelModulesMessagesDialogsActor_ChatDelete class]]) {
    ImActorModelModulesMessagesDialogsActor_onChatDeletedWithAMPeer_(self, [((ImActorModelModulesMessagesDialogsActor_ChatDelete *) nil_chk(((ImActorModelModulesMessagesDialogsActor_ChatDelete *) check_class_cast(message, [ImActorModelModulesMessagesDialogsActor_ChatDelete class])))) getPeer]);
  }
  else if ([message isKindOfClass:[ImActorModelModulesMessagesDialogsActor_MessageStateChanged class]]) {
    ImActorModelModulesMessagesDialogsActor_MessageStateChanged *messageStateChanged = (ImActorModelModulesMessagesDialogsActor_MessageStateChanged *) check_class_cast(message, [ImActorModelModulesMessagesDialogsActor_MessageStateChanged class]);
    ImActorModelModulesMessagesDialogsActor_onMessageStatusChangedWithAMPeer_withLong_withAMMessageStateEnum_(self, [((ImActorModelModulesMessagesDialogsActor_MessageStateChanged *) nil_chk(messageStateChanged)) getPeer], [messageStateChanged getRid], [messageStateChanged getState]);
  }
  else if ([message isKindOfClass:[ImActorModelModulesMessagesDialogsActor_MessageDeleted class]]) {
    ImActorModelModulesMessagesDialogsActor_MessageDeleted *deleted = (ImActorModelModulesMessagesDialogsActor_MessageDeleted *) check_class_cast(message, [ImActorModelModulesMessagesDialogsActor_MessageDeleted class]);
    ImActorModelModulesMessagesDialogsActor_onMessageWithAMPeer_withAMMessage_withBoolean_withInt_(self, [((ImActorModelModulesMessagesDialogsActor_MessageDeleted *) nil_chk(deleted)) getPeer], [deleted getTopMessage], YES, -1);
  }
  else if ([message isKindOfClass:[ImActorModelModulesMessagesDialogsActor_HistoryLoaded class]]) {
    ImActorModelModulesMessagesDialogsActor_HistoryLoaded *historyLoaded = (ImActorModelModulesMessagesDialogsActor_HistoryLoaded *) check_class_cast(message, [ImActorModelModulesMessagesDialogsActor_HistoryLoaded class]);
    ImActorModelModulesMessagesDialogsActor_onHistoryLoadedWithJavaUtilList_(self, [((ImActorModelModulesMessagesDialogsActor_HistoryLoaded *) nil_chk(historyLoaded)) getHistory]);
  }
  else if ([message isKindOfClass:[ImActorModelModulesMessagesDialogsActor_GroupChanged class]]) {
    ImActorModelModulesMessagesDialogsActor_GroupChanged *groupChanged = (ImActorModelModulesMessagesDialogsActor_GroupChanged *) check_class_cast(message, [ImActorModelModulesMessagesDialogsActor_GroupChanged class]);
    ImActorModelModulesMessagesDialogsActor_onGroupChangedWithAMGroup_(self, [((ImActorModelModulesMessagesDialogsActor_GroupChanged *) nil_chk(groupChanged)) getGroup]);
  }
  else if ([message isKindOfClass:[ImActorModelModulesMessagesDialogsActor_MessageContentChanged class]]) {
    ImActorModelModulesMessagesDialogsActor_MessageContentChanged *contentChanged = (ImActorModelModulesMessagesDialogsActor_MessageContentChanged *) check_class_cast(message, [ImActorModelModulesMessagesDialogsActor_MessageContentChanged class]);
    ImActorModelModulesMessagesDialogsActor_onMessageContentChangedWithAMPeer_withLong_withAMAbsContent_(self, [((ImActorModelModulesMessagesDialogsActor_MessageContentChanged *) nil_chk(contentChanged)) getPeer], [contentChanged getRid], [contentChanged getContent]);
  }
  else if ([message isKindOfClass:[ImActorModelModulesMessagesDialogsActor_CounterChanged class]]) {
    ImActorModelModulesMessagesDialogsActor_CounterChanged *counterChanged = (ImActorModelModulesMessagesDialogsActor_CounterChanged *) check_class_cast(message, [ImActorModelModulesMessagesDialogsActor_CounterChanged class]);
    ImActorModelModulesMessagesDialogsActor_onCounterChangedWithAMPeer_withInt_(self, [((ImActorModelModulesMessagesDialogsActor_CounterChanged *) nil_chk(counterChanged)) getPeer], [counterChanged getCounter]);
  }
  else {
    [self dropWithId:message];
  }
}

@end

void ImActorModelModulesMessagesDialogsActor_initWithImActorModelModulesModules_(ImActorModelModulesMessagesDialogsActor *self, ImActorModelModulesModules *messenger) {
  (void) ImActorModelModulesUtilsModuleActor_initWithImActorModelModulesModules_(self, messenger);
}

ImActorModelModulesMessagesDialogsActor *new_ImActorModelModulesMessagesDialogsActor_initWithImActorModelModulesModules_(ImActorModelModulesModules *messenger) {
  ImActorModelModulesMessagesDialogsActor *self = [ImActorModelModulesMessagesDialogsActor alloc];
  ImActorModelModulesMessagesDialogsActor_initWithImActorModelModulesModules_(self, messenger);
  return self;
}

void ImActorModelModulesMessagesDialogsActor_onMessageWithAMPeer_withAMMessage_withBoolean_withInt_(ImActorModelModulesMessagesDialogsActor *self, AMPeer *peer, AMMessage *message, jboolean forceWrite, jint counter) {
  ImActorModelModulesMessagesDialogsActor_PeerDesc *peerDesc = ImActorModelModulesMessagesDialogsActor_buildPeerDescWithAMPeer_(self, peer);
  if (peerDesc == nil) {
    return;
  }
  if (message == nil) {
    if (!forceWrite) {
      return;
    }
    ImActorModelModulesMessagesDialogsActor_onChatClearWithAMPeer_(self, peer);
  }
  else {
    AMDialog *dialog = [((id<DKListEngine>) nil_chk(self->dialogs_)) getValueWithKey:[((AMPeer *) nil_chk(peer)) getUnuqueId]];
    AMContentDescription *contentDescription = AMContentDescription_fromContentWithAMAbsContent_([message getContent]);
    AMDialogBuilder *builder = [((AMDialogBuilder *) nil_chk([((AMDialogBuilder *) nil_chk([((AMDialogBuilder *) nil_chk([((AMDialogBuilder *) nil_chk([((AMDialogBuilder *) nil_chk([((AMDialogBuilder *) nil_chk([((AMDialogBuilder *) nil_chk([new_AMDialogBuilder_init() setRidWithLong:[message getRid]])) setTimeWithLong:[message getDate]])) setMessageTypeWithAMContentTypeEnum:[((AMContentDescription *) nil_chk(contentDescription)) getContentType]])) setTextWithNSString:[contentDescription getText]])) setRelatedUidWithInt:[contentDescription getRelatedUser]])) setStatusWithAMMessageStateEnum:[message getMessageState]])) setSenderIdWithInt:[message getSenderId]])) setUnreadCountWithInt:counter];
    if (dialog != nil) {
      if (!forceWrite && [dialog getSortDate] > [message getSortDate]) {
        return;
      }
      (void) [((AMDialogBuilder *) nil_chk([((AMDialogBuilder *) nil_chk([((AMDialogBuilder *) nil_chk([((AMDialogBuilder *) nil_chk(builder)) setPeerWithAMPeer:[dialog getPeer]])) setDialogTitleWithNSString:[dialog getDialogTitle]])) setDialogAvatarWithAMAvatar:[dialog getDialogAvatar]])) setSortKeyWithLong:[dialog getSortDate]];
      if (![contentDescription isSilent]) {
        (void) [builder setSortKeyWithLong:[message getSortDate]];
      }
    }
    else {
      if ([contentDescription isSilent]) {
        return;
      }
      (void) [((AMDialogBuilder *) nil_chk([((AMDialogBuilder *) nil_chk([((AMDialogBuilder *) nil_chk([((AMDialogBuilder *) nil_chk(builder)) setPeerWithAMPeer:peer])) setDialogTitleWithNSString:[((ImActorModelModulesMessagesDialogsActor_PeerDesc *) nil_chk(peerDesc)) getTitle]])) setDialogAvatarWithAMAvatar:[peerDesc getAvatar]])) setSortKeyWithLong:[message getSortDate]];
    }
    ImActorModelModulesMessagesDialogsActor_addOrUpdateItemWithAMDialog_(self, [((AMDialogBuilder *) nil_chk(builder)) createDialog]);
    ImActorModelModulesMessagesDialogsActor_notifyState(self);
  }
}

void ImActorModelModulesMessagesDialogsActor_onUserChangedWithAMUser_(ImActorModelModulesMessagesDialogsActor *self, AMUser *user) {
  AMDialog *dialog = [((id<DKListEngine>) nil_chk(self->dialogs_)) getValueWithKey:[((AMPeer *) nil_chk([((AMUser *) nil_chk(user)) peer])) getUnuqueId]];
  if (dialog != nil) {
    if ([((NSString *) nil_chk([dialog getDialogTitle])) isEqual:[user getName]] && AMJavaUtil_equalsEWithId_withId_([dialog getDialogAvatar], [user getAvatar])) {
      return;
    }
    ImActorModelModulesMessagesDialogsActor_addOrUpdateItemWithAMDialog_(self, [dialog editPeerInfoWithNSString:[user getName] withAMAvatar:[user getAvatar]]);
  }
}

void ImActorModelModulesMessagesDialogsActor_onGroupChangedWithAMGroup_(ImActorModelModulesMessagesDialogsActor *self, AMGroup *group) {
  AMDialog *dialog = [((id<DKListEngine>) nil_chk(self->dialogs_)) getValueWithKey:[((AMPeer *) nil_chk([((AMGroup *) nil_chk(group)) peer])) getUnuqueId]];
  if (dialog != nil) {
    if ([((NSString *) nil_chk([dialog getDialogTitle])) isEqual:[group getTitle]] && AMJavaUtil_equalsEWithId_withId_([dialog getDialogAvatar], [group getAvatar])) {
      return;
    }
    ImActorModelModulesMessagesDialogsActor_addOrUpdateItemWithAMDialog_(self, [dialog editPeerInfoWithNSString:[group getTitle] withAMAvatar:[group getAvatar]]);
  }
}

void ImActorModelModulesMessagesDialogsActor_onChatDeletedWithAMPeer_(ImActorModelModulesMessagesDialogsActor *self, AMPeer *peer) {
  [((id<DKListEngine>) nil_chk(self->dialogs_)) removeItemWithKey:[((AMPeer *) nil_chk(peer)) getUnuqueId]];
  ImActorModelModulesMessagesDialogsActor_notifyState(self);
}

void ImActorModelModulesMessagesDialogsActor_onChatClearWithAMPeer_(ImActorModelModulesMessagesDialogsActor *self, AMPeer *peer) {
  AMDialog *dialog = [((id<DKListEngine>) nil_chk(self->dialogs_)) getValueWithKey:[((AMPeer *) nil_chk(peer)) getUnuqueId]];
  if (dialog != nil) {
    ImActorModelModulesMessagesDialogsActor_addOrUpdateItemWithAMDialog_(self, [((AMDialogBuilder *) nil_chk([((AMDialogBuilder *) nil_chk([((AMDialogBuilder *) nil_chk([((AMDialogBuilder *) nil_chk([((AMDialogBuilder *) nil_chk([((AMDialogBuilder *) nil_chk([((AMDialogBuilder *) nil_chk([new_AMDialogBuilder_initWithAMDialog_(dialog) setMessageTypeWithAMContentTypeEnum:AMContentTypeEnum_get_EMPTY()])) setTextWithNSString:@""])) setTimeWithLong:0])) setUnreadCountWithInt:0])) setRidWithLong:0])) setSenderIdWithInt:0])) setStatusWithAMMessageStateEnum:AMMessageStateEnum_get_UNKNOWN()])) createDialog]);
  }
}

void ImActorModelModulesMessagesDialogsActor_onMessageStatusChangedWithAMPeer_withLong_withAMMessageStateEnum_(ImActorModelModulesMessagesDialogsActor *self, AMPeer *peer, jlong rid, AMMessageStateEnum *state) {
  AMDialog *dialog = [((id<DKListEngine>) nil_chk(self->dialogs_)) getValueWithKey:[((AMPeer *) nil_chk(peer)) getUnuqueId]];
  if (dialog != nil && [dialog getRid] == rid) {
    ImActorModelModulesMessagesDialogsActor_addOrUpdateItemWithAMDialog_(self, [((AMDialogBuilder *) nil_chk([new_AMDialogBuilder_initWithAMDialog_(dialog) setStatusWithAMMessageStateEnum:state])) createDialog]);
  }
}

void ImActorModelModulesMessagesDialogsActor_onMessageContentChangedWithAMPeer_withLong_withAMAbsContent_(ImActorModelModulesMessagesDialogsActor *self, AMPeer *peer, jlong rid, AMAbsContent *content) {
  AMDialog *dialog = [((id<DKListEngine>) nil_chk(self->dialogs_)) getValueWithKey:[((AMPeer *) nil_chk(peer)) getUnuqueId]];
  if (dialog != nil && [dialog getRid] == rid) {
    AMContentDescription *description_ = AMContentDescription_fromContentWithAMAbsContent_(content);
    ImActorModelModulesMessagesDialogsActor_addOrUpdateItemWithAMDialog_(self, [((AMDialogBuilder *) nil_chk([((AMDialogBuilder *) nil_chk([((AMDialogBuilder *) nil_chk([new_AMDialogBuilder_initWithAMDialog_(dialog) setTextWithNSString:[((AMContentDescription *) nil_chk(description_)) getText]])) setRelatedUidWithInt:[description_ getRelatedUser]])) setMessageTypeWithAMContentTypeEnum:[description_ getContentType]])) createDialog]);
  }
}

void ImActorModelModulesMessagesDialogsActor_onCounterChangedWithAMPeer_withInt_(ImActorModelModulesMessagesDialogsActor *self, AMPeer *peer, jint count) {
  AMDialog *dialog = [((id<DKListEngine>) nil_chk(self->dialogs_)) getValueWithKey:[((AMPeer *) nil_chk(peer)) getUnuqueId]];
  if (dialog != nil) {
    ImActorModelModulesMessagesDialogsActor_addOrUpdateItemWithAMDialog_(self, [((AMDialogBuilder *) nil_chk([new_AMDialogBuilder_initWithAMDialog_(dialog) setUnreadCountWithInt:count])) createDialog]);
  }
}

void ImActorModelModulesMessagesDialogsActor_onHistoryLoadedWithJavaUtilList_(ImActorModelModulesMessagesDialogsActor *self, id<JavaUtilList> history) {
  AMLog_dWithNSString_withNSString_(@"AppStateVM", @"onHistoryLoaded");
  JavaUtilArrayList *updated = new_JavaUtilArrayList_init();
  for (ImActorModelModulesMessagesEntityDialogHistory * __strong dialogHistory in nil_chk(history)) {
    if ([((id<DKListEngine>) nil_chk(self->dialogs_)) getValueWithKey:[((AMPeer *) nil_chk([((ImActorModelModulesMessagesEntityDialogHistory *) nil_chk(dialogHistory)) getPeer])) getUnuqueId]] != nil) {
      continue;
    }
    ImActorModelModulesMessagesDialogsActor_PeerDesc *peerDesc = ImActorModelModulesMessagesDialogsActor_buildPeerDescWithAMPeer_(self, [dialogHistory getPeer]);
    if (peerDesc == nil) {
      continue;
    }
    AMContentDescription *description_ = AMContentDescription_fromContentWithAMAbsContent_([dialogHistory getContent]);
    [updated addWithId:new_AMDialog_initWithAMPeer_withLong_withNSString_withAMAvatar_withInt_withLong_withAMContentTypeEnum_withNSString_withAMMessageStateEnum_withInt_withLong_withInt_([dialogHistory getPeer], [dialogHistory getSortDate], [((ImActorModelModulesMessagesDialogsActor_PeerDesc *) nil_chk(peerDesc)) getTitle], [peerDesc getAvatar], [dialogHistory getUnreadCount], [dialogHistory getRid], [((AMContentDescription *) nil_chk(description_)) getContentType], [description_ getText], [dialogHistory getStatus], [dialogHistory getSenderId], [dialogHistory getDate], [description_ getRelatedUser])];
  }
  ImActorModelModulesMessagesDialogsActor_addOrUpdateItemsWithJavaUtilList_(self, updated);
  [((ImActorModelModulesAppStateModule *) nil_chk([((ImActorModelModulesModules *) nil_chk([self modules])) getAppStateModule])) onDialogsLoaded];
  ImActorModelModulesMessagesDialogsActor_notifyState(self);
}

void ImActorModelModulesMessagesDialogsActor_addOrUpdateItemsWithJavaUtilList_(ImActorModelModulesMessagesDialogsActor *self, id<JavaUtilList> updated) {
  [((id<DKListEngine>) nil_chk(self->dialogs_)) addOrUpdateItems:updated];
  [((ImActorModelModulesSearchModule *) nil_chk([((ImActorModelModulesModules *) nil_chk([self modules])) getSearch])) onDialogsChangedWithJavaUtilList:updated];
}

void ImActorModelModulesMessagesDialogsActor_addOrUpdateItemWithAMDialog_(ImActorModelModulesMessagesDialogsActor *self, AMDialog *dialog) {
  [((id<DKListEngine>) nil_chk(self->dialogs_)) addOrUpdateItem:dialog];
  JavaUtilArrayList *d = new_JavaUtilArrayList_init();
  [d addWithId:dialog];
  [((ImActorModelModulesSearchModule *) nil_chk([((ImActorModelModulesModules *) nil_chk([self modules])) getSearch])) onDialogsChangedWithJavaUtilList:d];
}

void ImActorModelModulesMessagesDialogsActor_notifyState(ImActorModelModulesMessagesDialogsActor *self) {
  jboolean isEmpty = [((id<DKListEngine>) nil_chk(self->dialogs_)) isEmpty];
  AMLog_dWithNSString_withNSString_(@"NOTIFY_DIALOGS", JreStrcat("$Z", @"isEmpty: ", isEmpty));
  [((ImActorModelModulesAppStateModule *) nil_chk([((ImActorModelModulesModules *) nil_chk([self modules])) getAppStateModule])) onDialogsUpdateWithBoolean:isEmpty];
}

ImActorModelModulesMessagesDialogsActor_PeerDesc *ImActorModelModulesMessagesDialogsActor_buildPeerDescWithAMPeer_(ImActorModelModulesMessagesDialogsActor *self, AMPeer *peer) {
  {
    AMUser *u;
    AMGroup *g;
    switch ([[((AMPeer *) nil_chk(peer)) getPeerType] ordinal]) {
      case AMPeerType_PRIVATE:
      u = [self getUserWithInt:[peer getPeerId]];
      return new_ImActorModelModulesMessagesDialogsActor_PeerDesc_initWithImActorModelModulesMessagesDialogsActor_withNSString_withAMAvatar_(self, [((AMUser *) nil_chk(u)) getName], [u getAvatar]);
      case AMPeerType_GROUP:
      g = [self getGroupWithInt:[peer getPeerId]];
      return new_ImActorModelModulesMessagesDialogsActor_PeerDesc_initWithImActorModelModulesMessagesDialogsActor_withNSString_withAMAvatar_(self, [((AMGroup *) nil_chk(g)) getTitle], [g getAvatar]);
      default:
      return nil;
    }
  }
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ImActorModelModulesMessagesDialogsActor)

@implementation ImActorModelModulesMessagesDialogsActor_PeerDesc

- (instancetype)initWithImActorModelModulesMessagesDialogsActor:(ImActorModelModulesMessagesDialogsActor *)outer$
                                                   withNSString:(NSString *)title
                                                   withAMAvatar:(AMAvatar *)avatar {
  ImActorModelModulesMessagesDialogsActor_PeerDesc_initWithImActorModelModulesMessagesDialogsActor_withNSString_withAMAvatar_(self, outer$, title, avatar);
  return self;
}

- (NSString *)getTitle {
  return title_;
}

- (AMAvatar *)getAvatar {
  return avatar_;
}

@end

void ImActorModelModulesMessagesDialogsActor_PeerDesc_initWithImActorModelModulesMessagesDialogsActor_withNSString_withAMAvatar_(ImActorModelModulesMessagesDialogsActor_PeerDesc *self, ImActorModelModulesMessagesDialogsActor *outer$, NSString *title, AMAvatar *avatar) {
  (void) NSObject_init(self);
  self->title_ = title;
  self->avatar_ = avatar;
}

ImActorModelModulesMessagesDialogsActor_PeerDesc *new_ImActorModelModulesMessagesDialogsActor_PeerDesc_initWithImActorModelModulesMessagesDialogsActor_withNSString_withAMAvatar_(ImActorModelModulesMessagesDialogsActor *outer$, NSString *title, AMAvatar *avatar) {
  ImActorModelModulesMessagesDialogsActor_PeerDesc *self = [ImActorModelModulesMessagesDialogsActor_PeerDesc alloc];
  ImActorModelModulesMessagesDialogsActor_PeerDesc_initWithImActorModelModulesMessagesDialogsActor_withNSString_withAMAvatar_(self, outer$, title, avatar);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ImActorModelModulesMessagesDialogsActor_PeerDesc)

@implementation ImActorModelModulesMessagesDialogsActor_InMessage

- (instancetype)initWithAMPeer:(AMPeer *)peer
                 withAMMessage:(AMMessage *)message
                       withInt:(jint)counter {
  ImActorModelModulesMessagesDialogsActor_InMessage_initWithAMPeer_withAMMessage_withInt_(self, peer, message, counter);
  return self;
}

- (AMPeer *)getPeer {
  return peer_;
}

- (AMMessage *)getMessage {
  return message_;
}

- (jint)getCounter {
  return counter_;
}

@end

void ImActorModelModulesMessagesDialogsActor_InMessage_initWithAMPeer_withAMMessage_withInt_(ImActorModelModulesMessagesDialogsActor_InMessage *self, AMPeer *peer, AMMessage *message, jint counter) {
  (void) NSObject_init(self);
  self->peer_ = peer;
  self->message_ = message;
  self->counter_ = counter;
}

ImActorModelModulesMessagesDialogsActor_InMessage *new_ImActorModelModulesMessagesDialogsActor_InMessage_initWithAMPeer_withAMMessage_withInt_(AMPeer *peer, AMMessage *message, jint counter) {
  ImActorModelModulesMessagesDialogsActor_InMessage *self = [ImActorModelModulesMessagesDialogsActor_InMessage alloc];
  ImActorModelModulesMessagesDialogsActor_InMessage_initWithAMPeer_withAMMessage_withInt_(self, peer, message, counter);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ImActorModelModulesMessagesDialogsActor_InMessage)

@implementation ImActorModelModulesMessagesDialogsActor_CounterChanged

- (instancetype)initWithAMPeer:(AMPeer *)peer
                       withInt:(jint)counter {
  ImActorModelModulesMessagesDialogsActor_CounterChanged_initWithAMPeer_withInt_(self, peer, counter);
  return self;
}

- (AMPeer *)getPeer {
  return peer_;
}

- (jint)getCounter {
  return counter_;
}

@end

void ImActorModelModulesMessagesDialogsActor_CounterChanged_initWithAMPeer_withInt_(ImActorModelModulesMessagesDialogsActor_CounterChanged *self, AMPeer *peer, jint counter) {
  (void) NSObject_init(self);
  self->peer_ = peer;
  self->counter_ = counter;
}

ImActorModelModulesMessagesDialogsActor_CounterChanged *new_ImActorModelModulesMessagesDialogsActor_CounterChanged_initWithAMPeer_withInt_(AMPeer *peer, jint counter) {
  ImActorModelModulesMessagesDialogsActor_CounterChanged *self = [ImActorModelModulesMessagesDialogsActor_CounterChanged alloc];
  ImActorModelModulesMessagesDialogsActor_CounterChanged_initWithAMPeer_withInt_(self, peer, counter);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ImActorModelModulesMessagesDialogsActor_CounterChanged)

@implementation ImActorModelModulesMessagesDialogsActor_UserChanged

- (instancetype)initWithAMUser:(AMUser *)user {
  ImActorModelModulesMessagesDialogsActor_UserChanged_initWithAMUser_(self, user);
  return self;
}

- (AMUser *)getUser {
  return user_;
}

@end

void ImActorModelModulesMessagesDialogsActor_UserChanged_initWithAMUser_(ImActorModelModulesMessagesDialogsActor_UserChanged *self, AMUser *user) {
  (void) NSObject_init(self);
  self->user_ = user;
}

ImActorModelModulesMessagesDialogsActor_UserChanged *new_ImActorModelModulesMessagesDialogsActor_UserChanged_initWithAMUser_(AMUser *user) {
  ImActorModelModulesMessagesDialogsActor_UserChanged *self = [ImActorModelModulesMessagesDialogsActor_UserChanged alloc];
  ImActorModelModulesMessagesDialogsActor_UserChanged_initWithAMUser_(self, user);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ImActorModelModulesMessagesDialogsActor_UserChanged)

@implementation ImActorModelModulesMessagesDialogsActor_GroupChanged

- (instancetype)initWithAMGroup:(AMGroup *)group {
  ImActorModelModulesMessagesDialogsActor_GroupChanged_initWithAMGroup_(self, group);
  return self;
}

- (AMGroup *)getGroup {
  return group_;
}

@end

void ImActorModelModulesMessagesDialogsActor_GroupChanged_initWithAMGroup_(ImActorModelModulesMessagesDialogsActor_GroupChanged *self, AMGroup *group) {
  (void) NSObject_init(self);
  self->group_ = group;
}

ImActorModelModulesMessagesDialogsActor_GroupChanged *new_ImActorModelModulesMessagesDialogsActor_GroupChanged_initWithAMGroup_(AMGroup *group) {
  ImActorModelModulesMessagesDialogsActor_GroupChanged *self = [ImActorModelModulesMessagesDialogsActor_GroupChanged alloc];
  ImActorModelModulesMessagesDialogsActor_GroupChanged_initWithAMGroup_(self, group);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ImActorModelModulesMessagesDialogsActor_GroupChanged)

@implementation ImActorModelModulesMessagesDialogsActor_ChatClear

- (instancetype)initWithAMPeer:(AMPeer *)peer {
  ImActorModelModulesMessagesDialogsActor_ChatClear_initWithAMPeer_(self, peer);
  return self;
}

- (AMPeer *)getPeer {
  return peer_;
}

@end

void ImActorModelModulesMessagesDialogsActor_ChatClear_initWithAMPeer_(ImActorModelModulesMessagesDialogsActor_ChatClear *self, AMPeer *peer) {
  (void) NSObject_init(self);
  self->peer_ = peer;
}

ImActorModelModulesMessagesDialogsActor_ChatClear *new_ImActorModelModulesMessagesDialogsActor_ChatClear_initWithAMPeer_(AMPeer *peer) {
  ImActorModelModulesMessagesDialogsActor_ChatClear *self = [ImActorModelModulesMessagesDialogsActor_ChatClear alloc];
  ImActorModelModulesMessagesDialogsActor_ChatClear_initWithAMPeer_(self, peer);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ImActorModelModulesMessagesDialogsActor_ChatClear)

@implementation ImActorModelModulesMessagesDialogsActor_ChatDelete

- (instancetype)initWithAMPeer:(AMPeer *)peer {
  ImActorModelModulesMessagesDialogsActor_ChatDelete_initWithAMPeer_(self, peer);
  return self;
}

- (AMPeer *)getPeer {
  return peer_;
}

@end

void ImActorModelModulesMessagesDialogsActor_ChatDelete_initWithAMPeer_(ImActorModelModulesMessagesDialogsActor_ChatDelete *self, AMPeer *peer) {
  (void) NSObject_init(self);
  self->peer_ = peer;
}

ImActorModelModulesMessagesDialogsActor_ChatDelete *new_ImActorModelModulesMessagesDialogsActor_ChatDelete_initWithAMPeer_(AMPeer *peer) {
  ImActorModelModulesMessagesDialogsActor_ChatDelete *self = [ImActorModelModulesMessagesDialogsActor_ChatDelete alloc];
  ImActorModelModulesMessagesDialogsActor_ChatDelete_initWithAMPeer_(self, peer);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ImActorModelModulesMessagesDialogsActor_ChatDelete)

@implementation ImActorModelModulesMessagesDialogsActor_MessageStateChanged

- (instancetype)initWithAMPeer:(AMPeer *)peer
                      withLong:(jlong)rid
        withAMMessageStateEnum:(AMMessageStateEnum *)state {
  ImActorModelModulesMessagesDialogsActor_MessageStateChanged_initWithAMPeer_withLong_withAMMessageStateEnum_(self, peer, rid, state);
  return self;
}

- (AMPeer *)getPeer {
  return peer_;
}

- (jlong)getRid {
  return rid_;
}

- (AMMessageStateEnum *)getState {
  return state_;
}

@end

void ImActorModelModulesMessagesDialogsActor_MessageStateChanged_initWithAMPeer_withLong_withAMMessageStateEnum_(ImActorModelModulesMessagesDialogsActor_MessageStateChanged *self, AMPeer *peer, jlong rid, AMMessageStateEnum *state) {
  (void) NSObject_init(self);
  self->peer_ = peer;
  self->rid_ = rid;
  self->state_ = state;
}

ImActorModelModulesMessagesDialogsActor_MessageStateChanged *new_ImActorModelModulesMessagesDialogsActor_MessageStateChanged_initWithAMPeer_withLong_withAMMessageStateEnum_(AMPeer *peer, jlong rid, AMMessageStateEnum *state) {
  ImActorModelModulesMessagesDialogsActor_MessageStateChanged *self = [ImActorModelModulesMessagesDialogsActor_MessageStateChanged alloc];
  ImActorModelModulesMessagesDialogsActor_MessageStateChanged_initWithAMPeer_withLong_withAMMessageStateEnum_(self, peer, rid, state);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ImActorModelModulesMessagesDialogsActor_MessageStateChanged)

@implementation ImActorModelModulesMessagesDialogsActor_MessageContentChanged

- (instancetype)initWithAMPeer:(AMPeer *)peer
                      withLong:(jlong)rid
              withAMAbsContent:(AMAbsContent *)content {
  ImActorModelModulesMessagesDialogsActor_MessageContentChanged_initWithAMPeer_withLong_withAMAbsContent_(self, peer, rid, content);
  return self;
}

- (AMPeer *)getPeer {
  return peer_;
}

- (jlong)getRid {
  return rid_;
}

- (AMAbsContent *)getContent {
  return content_;
}

@end

void ImActorModelModulesMessagesDialogsActor_MessageContentChanged_initWithAMPeer_withLong_withAMAbsContent_(ImActorModelModulesMessagesDialogsActor_MessageContentChanged *self, AMPeer *peer, jlong rid, AMAbsContent *content) {
  (void) NSObject_init(self);
  self->peer_ = peer;
  self->rid_ = rid;
  self->content_ = content;
}

ImActorModelModulesMessagesDialogsActor_MessageContentChanged *new_ImActorModelModulesMessagesDialogsActor_MessageContentChanged_initWithAMPeer_withLong_withAMAbsContent_(AMPeer *peer, jlong rid, AMAbsContent *content) {
  ImActorModelModulesMessagesDialogsActor_MessageContentChanged *self = [ImActorModelModulesMessagesDialogsActor_MessageContentChanged alloc];
  ImActorModelModulesMessagesDialogsActor_MessageContentChanged_initWithAMPeer_withLong_withAMAbsContent_(self, peer, rid, content);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ImActorModelModulesMessagesDialogsActor_MessageContentChanged)

@implementation ImActorModelModulesMessagesDialogsActor_MessageDeleted

- (instancetype)initWithAMPeer:(AMPeer *)peer
                 withAMMessage:(AMMessage *)topMessage {
  ImActorModelModulesMessagesDialogsActor_MessageDeleted_initWithAMPeer_withAMMessage_(self, peer, topMessage);
  return self;
}

- (AMPeer *)getPeer {
  return peer_;
}

- (AMMessage *)getTopMessage {
  return topMessage_;
}

@end

void ImActorModelModulesMessagesDialogsActor_MessageDeleted_initWithAMPeer_withAMMessage_(ImActorModelModulesMessagesDialogsActor_MessageDeleted *self, AMPeer *peer, AMMessage *topMessage) {
  (void) NSObject_init(self);
  self->peer_ = peer;
  self->topMessage_ = topMessage;
}

ImActorModelModulesMessagesDialogsActor_MessageDeleted *new_ImActorModelModulesMessagesDialogsActor_MessageDeleted_initWithAMPeer_withAMMessage_(AMPeer *peer, AMMessage *topMessage) {
  ImActorModelModulesMessagesDialogsActor_MessageDeleted *self = [ImActorModelModulesMessagesDialogsActor_MessageDeleted alloc];
  ImActorModelModulesMessagesDialogsActor_MessageDeleted_initWithAMPeer_withAMMessage_(self, peer, topMessage);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ImActorModelModulesMessagesDialogsActor_MessageDeleted)

@implementation ImActorModelModulesMessagesDialogsActor_HistoryLoaded

- (instancetype)initWithJavaUtilList:(id<JavaUtilList>)history {
  ImActorModelModulesMessagesDialogsActor_HistoryLoaded_initWithJavaUtilList_(self, history);
  return self;
}

- (id<JavaUtilList>)getHistory {
  return history_;
}

@end

void ImActorModelModulesMessagesDialogsActor_HistoryLoaded_initWithJavaUtilList_(ImActorModelModulesMessagesDialogsActor_HistoryLoaded *self, id<JavaUtilList> history) {
  (void) NSObject_init(self);
  self->history_ = history;
}

ImActorModelModulesMessagesDialogsActor_HistoryLoaded *new_ImActorModelModulesMessagesDialogsActor_HistoryLoaded_initWithJavaUtilList_(id<JavaUtilList> history) {
  ImActorModelModulesMessagesDialogsActor_HistoryLoaded *self = [ImActorModelModulesMessagesDialogsActor_HistoryLoaded alloc];
  ImActorModelModulesMessagesDialogsActor_HistoryLoaded_initWithJavaUtilList_(self, history);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ImActorModelModulesMessagesDialogsActor_HistoryLoaded)
