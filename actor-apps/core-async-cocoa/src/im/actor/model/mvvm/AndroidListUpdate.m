//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/ex3ndr/Develop/actor-proprietary/actor-apps/core-async/src/main/java/im/actor/model/mvvm/AndroidListUpdate.java
//


#include "J2ObjC_source.h"
#include "im/actor/model/mvvm/AndroidListUpdate.h"
#include "im/actor/model/mvvm/ChangeDescription.h"
#include "java/util/ArrayList.h"

@interface AMAndroidListUpdate () {
 @public
  JavaUtilArrayList *list_;
  JavaUtilArrayList *changes_;
}

@end

J2OBJC_FIELD_SETTER(AMAndroidListUpdate, list_, JavaUtilArrayList *)
J2OBJC_FIELD_SETTER(AMAndroidListUpdate, changes_, JavaUtilArrayList *)

@implementation AMAndroidListUpdate

- (instancetype)initWithJavaUtilArrayList:(JavaUtilArrayList *)list
                    withJavaUtilArrayList:(JavaUtilArrayList *)changes {
  AMAndroidListUpdate_initWithJavaUtilArrayList_withJavaUtilArrayList_(self, list, changes);
  return self;
}

- (jint)getSize {
  return [((JavaUtilArrayList *) nil_chk(list_)) size];
}

- (id)getItemWithInt:(jint)index {
  return [((JavaUtilArrayList *) nil_chk(list_)) getWithInt:index];
}

- (AMChangeDescription *)next {
  if ([((JavaUtilArrayList *) nil_chk(changes_)) size] == 0) {
    return nil;
  }
  AMChangeDescription *res = [changes_ removeWithInt:0];
  {
    jint addIndex;
    jint updateIndex;
    id itm;
    jint removeIndex;
    switch ([[((AMChangeDescription *) nil_chk(res)) getOperationType] ordinal]) {
      case AMChangeDescription_OperationType_ADD:
      addIndex = [res getIndex];
      for (id __strong itm in nil_chk([res getItems])) {
        [((JavaUtilArrayList *) nil_chk(list_)) addWithInt:addIndex++ withId:itm];
      }
      break;
      case AMChangeDescription_OperationType_UPDATE:
      updateIndex = [res getIndex];
      for (id __strong itm in nil_chk([res getItems])) {
        jint index = updateIndex++;
        (void) [((JavaUtilArrayList *) nil_chk(list_)) removeWithInt:index];
        [list_ addWithInt:index withId:itm];
      }
      break;
      case AMChangeDescription_OperationType_MOVE:
      itm = [((JavaUtilArrayList *) nil_chk(list_)) removeWithInt:[res getIndex]];
      [list_ addWithInt:[res getDestIndex] withId:itm];
      break;
      case AMChangeDescription_OperationType_REMOVE:
      removeIndex = [res getIndex];
      for (jint i = 0; i < [res getLength]; i++) {
        (void) [((JavaUtilArrayList *) nil_chk(list_)) removeWithInt:removeIndex];
      }
      break;
    }
  }
  return res;
}

@end

void AMAndroidListUpdate_initWithJavaUtilArrayList_withJavaUtilArrayList_(AMAndroidListUpdate *self, JavaUtilArrayList *list, JavaUtilArrayList *changes) {
  (void) NSObject_init(self);
  self->list_ = new_JavaUtilArrayList_initWithJavaUtilCollection_(list);
  self->changes_ = changes;
}

AMAndroidListUpdate *new_AMAndroidListUpdate_initWithJavaUtilArrayList_withJavaUtilArrayList_(JavaUtilArrayList *list, JavaUtilArrayList *changes) {
  AMAndroidListUpdate *self = [AMAndroidListUpdate alloc];
  AMAndroidListUpdate_initWithJavaUtilArrayList_withJavaUtilArrayList_(self, list, changes);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(AMAndroidListUpdate)
