//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/ex3ndr/Develop/actor-platform/actor-apps/core/src/main/java/im/actor/model/api/rpc/RequestStartPhoneAuth.java
//


#include "IOSClass.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "im/actor/model/api/rpc/RequestStartPhoneAuth.h"
#include "im/actor/model/droidkit/bser/Bser.h"
#include "im/actor/model/droidkit/bser/BserObject.h"
#include "im/actor/model/droidkit/bser/BserValues.h"
#include "im/actor/model/droidkit/bser/BserWriter.h"
#include "im/actor/model/droidkit/bser/Utils.h"
#include "im/actor/model/network/parser/Request.h"
#include "java/io/IOException.h"

@interface APRequestStartPhoneAuth () {
 @public
  jlong phoneNumber_;
  jint appId_;
  NSString *apiKey_;
  IOSByteArray *deviceHash_;
  NSString *deviceTitle_;
}

@end

J2OBJC_FIELD_SETTER(APRequestStartPhoneAuth, apiKey_, NSString *)
J2OBJC_FIELD_SETTER(APRequestStartPhoneAuth, deviceHash_, IOSByteArray *)
J2OBJC_FIELD_SETTER(APRequestStartPhoneAuth, deviceTitle_, NSString *)

@implementation APRequestStartPhoneAuth

+ (APRequestStartPhoneAuth *)fromBytesWithByteArray:(IOSByteArray *)data {
  return APRequestStartPhoneAuth_fromBytesWithByteArray_(data);
}

- (instancetype)initWithLong:(jlong)phoneNumber
                     withInt:(jint)appId
                withNSString:(NSString *)apiKey
               withByteArray:(IOSByteArray *)deviceHash
                withNSString:(NSString *)deviceTitle {
  APRequestStartPhoneAuth_initWithLong_withInt_withNSString_withByteArray_withNSString_(self, phoneNumber, appId, apiKey, deviceHash, deviceTitle);
  return self;
}

- (instancetype)init {
  APRequestStartPhoneAuth_init(self);
  return self;
}

- (jlong)getPhoneNumber {
  return self->phoneNumber_;
}

- (jint)getAppId {
  return self->appId_;
}

- (NSString *)getApiKey {
  return self->apiKey_;
}

- (IOSByteArray *)getDeviceHash {
  return self->deviceHash_;
}

- (NSString *)getDeviceTitle {
  return self->deviceTitle_;
}

- (void)parseWithBSBserValues:(BSBserValues *)values {
  self->phoneNumber_ = [((BSBserValues *) nil_chk(values)) getLongWithInt:1];
  self->appId_ = [values getIntWithInt:2];
  self->apiKey_ = [values getStringWithInt:3];
  self->deviceHash_ = [values getBytesWithInt:4];
  self->deviceTitle_ = [values getStringWithInt:5];
}

- (void)serializeWithBSBserWriter:(BSBserWriter *)writer {
  [((BSBserWriter *) nil_chk(writer)) writeLongWithInt:1 withLong:self->phoneNumber_];
  [writer writeIntWithInt:2 withInt:self->appId_];
  if (self->apiKey_ == nil) {
    @throw new_JavaIoIOException_init();
  }
  [writer writeStringWithInt:3 withNSString:self->apiKey_];
  if (self->deviceHash_ == nil) {
    @throw new_JavaIoIOException_init();
  }
  [writer writeBytesWithInt:4 withByteArray:self->deviceHash_];
  if (self->deviceTitle_ == nil) {
    @throw new_JavaIoIOException_init();
  }
  [writer writeStringWithInt:5 withNSString:self->deviceTitle_];
}

- (NSString *)description {
  NSString *res = @"rpc StartPhoneAuth{";
  res = JreStrcat("$$", res, JreStrcat("$J", @"phoneNumber=", self->phoneNumber_));
  res = JreStrcat("$$", res, JreStrcat("$$", @", deviceHash=", BSUtils_byteArrayToStringWithByteArray_(self->deviceHash_)));
  res = JreStrcat("$$", res, JreStrcat("$$", @", deviceTitle=", self->deviceTitle_));
  res = JreStrcat("$C", res, '}');
  return res;
}

- (jint)getHeaderKey {
  return APRequestStartPhoneAuth_HEADER;
}

@end

APRequestStartPhoneAuth *APRequestStartPhoneAuth_fromBytesWithByteArray_(IOSByteArray *data) {
  APRequestStartPhoneAuth_initialize();
  return ((APRequestStartPhoneAuth *) BSBser_parseWithBSBserObject_withByteArray_(new_APRequestStartPhoneAuth_init(), data));
}

void APRequestStartPhoneAuth_initWithLong_withInt_withNSString_withByteArray_withNSString_(APRequestStartPhoneAuth *self, jlong phoneNumber, jint appId, NSString *apiKey, IOSByteArray *deviceHash, NSString *deviceTitle) {
  (void) APRequest_init(self);
  self->phoneNumber_ = phoneNumber;
  self->appId_ = appId;
  self->apiKey_ = apiKey;
  self->deviceHash_ = deviceHash;
  self->deviceTitle_ = deviceTitle;
}

APRequestStartPhoneAuth *new_APRequestStartPhoneAuth_initWithLong_withInt_withNSString_withByteArray_withNSString_(jlong phoneNumber, jint appId, NSString *apiKey, IOSByteArray *deviceHash, NSString *deviceTitle) {
  APRequestStartPhoneAuth *self = [APRequestStartPhoneAuth alloc];
  APRequestStartPhoneAuth_initWithLong_withInt_withNSString_withByteArray_withNSString_(self, phoneNumber, appId, apiKey, deviceHash, deviceTitle);
  return self;
}

void APRequestStartPhoneAuth_init(APRequestStartPhoneAuth *self) {
  (void) APRequest_init(self);
}

APRequestStartPhoneAuth *new_APRequestStartPhoneAuth_init() {
  APRequestStartPhoneAuth *self = [APRequestStartPhoneAuth alloc];
  APRequestStartPhoneAuth_init(self);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(APRequestStartPhoneAuth)
