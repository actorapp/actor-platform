//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/ex3ndr/Develop/actor-platform/actor-apps/library/core/src/main/java/im/actor/model/api/rpc/RequestGetDifference.java
//


#include "IOSClass.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "im/actor/model/api/rpc/RequestGetDifference.h"
#include "im/actor/model/droidkit/bser/Bser.h"
#include "im/actor/model/droidkit/bser/BserObject.h"
#include "im/actor/model/droidkit/bser/BserValues.h"
#include "im/actor/model/droidkit/bser/BserWriter.h"
#include "im/actor/model/droidkit/bser/Utils.h"
#include "im/actor/model/network/parser/Request.h"
#include "java/io/IOException.h"

@interface APRequestGetDifference () {
 @public
  jint seq_;
  IOSByteArray *state_;
}

@end

J2OBJC_FIELD_SETTER(APRequestGetDifference, state_, IOSByteArray *)

@implementation APRequestGetDifference

+ (APRequestGetDifference *)fromBytesWithByteArray:(IOSByteArray *)data {
  return APRequestGetDifference_fromBytesWithByteArray_(data);
}

- (instancetype)initWithInt:(jint)seq
              withByteArray:(IOSByteArray *)state {
  APRequestGetDifference_initWithInt_withByteArray_(self, seq, state);
  return self;
}

- (instancetype)init {
  APRequestGetDifference_init(self);
  return self;
}

- (jint)getSeq {
  return self->seq_;
}

- (IOSByteArray *)getState {
  return self->state_;
}

- (void)parseWithBSBserValues:(BSBserValues *)values {
  self->seq_ = [((BSBserValues *) nil_chk(values)) getIntWithInt:1];
  self->state_ = [values getBytesWithInt:2];
}

- (void)serializeWithBSBserWriter:(BSBserWriter *)writer {
  [((BSBserWriter *) nil_chk(writer)) writeIntWithInt:1 withInt:self->seq_];
  if (self->state_ == nil) {
    @throw new_JavaIoIOException_init();
  }
  [writer writeBytesWithInt:2 withByteArray:self->state_];
}

- (NSString *)description {
  NSString *res = @"rpc GetDifference{";
  res = JreStrcat("$$", res, JreStrcat("$I", @"seq=", self->seq_));
  res = JreStrcat("$$", res, JreStrcat("$$", @", state=", BSUtils_byteArrayToStringCompactWithByteArray_(self->state_)));
  res = JreStrcat("$C", res, '}');
  return res;
}

- (jint)getHeaderKey {
  return APRequestGetDifference_HEADER;
}

@end

APRequestGetDifference *APRequestGetDifference_fromBytesWithByteArray_(IOSByteArray *data) {
  APRequestGetDifference_initialize();
  return ((APRequestGetDifference *) BSBser_parseWithBSBserObject_withByteArray_(new_APRequestGetDifference_init(), data));
}

void APRequestGetDifference_initWithInt_withByteArray_(APRequestGetDifference *self, jint seq, IOSByteArray *state) {
  (void) APRequest_init(self);
  self->seq_ = seq;
  self->state_ = state;
}

APRequestGetDifference *new_APRequestGetDifference_initWithInt_withByteArray_(jint seq, IOSByteArray *state) {
  APRequestGetDifference *self = [APRequestGetDifference alloc];
  APRequestGetDifference_initWithInt_withByteArray_(self, seq, state);
  return self;
}

void APRequestGetDifference_init(APRequestGetDifference *self) {
  (void) APRequest_init(self);
}

APRequestGetDifference *new_APRequestGetDifference_init() {
  APRequestGetDifference *self = [APRequestGetDifference alloc];
  APRequestGetDifference_init(self);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(APRequestGetDifference)
