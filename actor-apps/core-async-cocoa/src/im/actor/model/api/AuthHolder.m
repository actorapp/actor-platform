//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/ex3ndr/Develop/actor-platform/actor-apps/library/core/src/main/java/im/actor/model/api/AuthHolder.java
//


#include "IOSClass.h"
#include "J2ObjC_source.h"
#include "im/actor/model/api/AuthHolder.h"
#include "java/io/IOException.h"
#include "java/lang/Enum.h"
#include "java/lang/IllegalArgumentException.h"

@interface APAuthHolderEnum () {
 @public
  jint value_;
}

@end

__attribute__((unused)) static void APAuthHolderEnum_initWithInt_withNSString_withInt_(APAuthHolderEnum *self, jint value, NSString *__name, jint __ordinal);

__attribute__((unused)) static APAuthHolderEnum *new_APAuthHolderEnum_initWithInt_withNSString_withInt_(jint value, NSString *__name, jint __ordinal) NS_RETURNS_RETAINED;

J2OBJC_INITIALIZED_DEFN(APAuthHolderEnum)

APAuthHolderEnum *APAuthHolderEnum_values_[3];

@implementation APAuthHolderEnum

- (instancetype)initWithInt:(jint)value
               withNSString:(NSString *)__name
                    withInt:(jint)__ordinal {
  APAuthHolderEnum_initWithInt_withNSString_withInt_(self, value, __name, __ordinal);
  return self;
}

- (jint)getValue {
  return value_;
}

+ (APAuthHolderEnum *)parseWithInt:(jint)value {
  return APAuthHolderEnum_parseWithInt_(value);
}

IOSObjectArray *APAuthHolderEnum_values() {
  APAuthHolderEnum_initialize();
  return [IOSObjectArray arrayWithObjects:APAuthHolderEnum_values_ count:3 type:APAuthHolderEnum_class_()];
}

+ (IOSObjectArray *)values {
  return APAuthHolderEnum_values();
}

+ (APAuthHolderEnum *)valueOfWithNSString:(NSString *)name {
  return APAuthHolderEnum_valueOfWithNSString_(name);
}

APAuthHolderEnum *APAuthHolderEnum_valueOfWithNSString_(NSString *name) {
  APAuthHolderEnum_initialize();
  for (int i = 0; i < 3; i++) {
    APAuthHolderEnum *e = APAuthHolderEnum_values_[i];
    if ([name isEqual:[e name]]) {
      return e;
    }
  }
  @throw [[JavaLangIllegalArgumentException alloc] initWithNSString:name];
  return nil;
}

- (id)copyWithZone:(NSZone *)zone {
  return self;
}

+ (void)initialize {
  if (self == [APAuthHolderEnum class]) {
    APAuthHolderEnum_THISDEVICE = new_APAuthHolderEnum_initWithInt_withNSString_withInt_(1, @"THISDEVICE", 0);
    APAuthHolderEnum_OTHERDEVICE = new_APAuthHolderEnum_initWithInt_withNSString_withInt_(2, @"OTHERDEVICE", 1);
    APAuthHolderEnum_UNSUPPORTED_VALUE = new_APAuthHolderEnum_initWithInt_withNSString_withInt_(-1, @"UNSUPPORTED_VALUE", 2);
    J2OBJC_SET_INITIALIZED(APAuthHolderEnum)
  }
}

@end

void APAuthHolderEnum_initWithInt_withNSString_withInt_(APAuthHolderEnum *self, jint value, NSString *__name, jint __ordinal) {
  (void) JavaLangEnum_initWithNSString_withInt_(self, __name, __ordinal);
  self->value_ = value;
}

APAuthHolderEnum *new_APAuthHolderEnum_initWithInt_withNSString_withInt_(jint value, NSString *__name, jint __ordinal) {
  APAuthHolderEnum *self = [APAuthHolderEnum alloc];
  APAuthHolderEnum_initWithInt_withNSString_withInt_(self, value, __name, __ordinal);
  return self;
}

APAuthHolderEnum *APAuthHolderEnum_parseWithInt_(jint value) {
  APAuthHolderEnum_initialize();
  switch (value) {
    case 1:
    return APAuthHolderEnum_THISDEVICE;
    case 2:
    return APAuthHolderEnum_OTHERDEVICE;
    default:
    return APAuthHolderEnum_UNSUPPORTED_VALUE;
  }
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(APAuthHolderEnum)
