//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/ex3ndr/Develop/actor-platform/actor-apps/core/src/main/java/im/actor/model/api/Avatar.java
//


#include "IOSClass.h"
#include "J2ObjC_source.h"
#include "im/actor/model/api/Avatar.h"
#include "im/actor/model/api/AvatarImage.h"
#include "im/actor/model/droidkit/bser/BserObject.h"
#include "im/actor/model/droidkit/bser/BserValues.h"
#include "im/actor/model/droidkit/bser/BserWriter.h"
#include "im/actor/model/droidkit/bser/util/SparseArray.h"
#include "java/io/IOException.h"

@interface APAvatar () {
 @public
  APAvatarImage *smallImage_;
  APAvatarImage *largeImage_;
  APAvatarImage *fullImage_;
}

@end

J2OBJC_FIELD_SETTER(APAvatar, smallImage_, APAvatarImage *)
J2OBJC_FIELD_SETTER(APAvatar, largeImage_, APAvatarImage *)
J2OBJC_FIELD_SETTER(APAvatar, fullImage_, APAvatarImage *)

@implementation APAvatar

- (instancetype)initWithAPAvatarImage:(APAvatarImage *)smallImage
                    withAPAvatarImage:(APAvatarImage *)largeImage
                    withAPAvatarImage:(APAvatarImage *)fullImage {
  APAvatar_initWithAPAvatarImage_withAPAvatarImage_withAPAvatarImage_(self, smallImage, largeImage, fullImage);
  return self;
}

- (instancetype)init {
  APAvatar_init(self);
  return self;
}

- (APAvatarImage *)getSmallImage {
  return self->smallImage_;
}

- (APAvatarImage *)getLargeImage {
  return self->largeImage_;
}

- (APAvatarImage *)getFullImage {
  return self->fullImage_;
}

- (void)parseWithBSBserValues:(BSBserValues *)values {
  self->smallImage_ = [((BSBserValues *) nil_chk(values)) optObjWithInt:1 withBSBserObject:new_APAvatarImage_init()];
  self->largeImage_ = [values optObjWithInt:2 withBSBserObject:new_APAvatarImage_init()];
  self->fullImage_ = [values optObjWithInt:3 withBSBserObject:new_APAvatarImage_init()];
  if ([values hasRemaining]) {
    [self setUnmappedObjectsWithImActorModelDroidkitBserUtilSparseArray:[values buildRemaining]];
  }
}

- (void)serializeWithBSBserWriter:(BSBserWriter *)writer {
  if (self->smallImage_ != nil) {
    [((BSBserWriter *) nil_chk(writer)) writeObjectWithInt:1 withBSBserObject:self->smallImage_];
  }
  if (self->largeImage_ != nil) {
    [((BSBserWriter *) nil_chk(writer)) writeObjectWithInt:2 withBSBserObject:self->largeImage_];
  }
  if (self->fullImage_ != nil) {
    [((BSBserWriter *) nil_chk(writer)) writeObjectWithInt:3 withBSBserObject:self->fullImage_];
  }
  if ([self getUnmappedObjects] != nil) {
    ImActorModelDroidkitBserUtilSparseArray *unmapped = [self getUnmappedObjects];
    for (jint i = 0; i < [((ImActorModelDroidkitBserUtilSparseArray *) nil_chk(unmapped)) size]; i++) {
      jint key = [unmapped keyAtWithInt:i];
      [((BSBserWriter *) nil_chk(writer)) writeUnmappedWithInt:key withId:[unmapped getWithInt:key]];
    }
  }
}

- (NSString *)description {
  NSString *res = @"struct Avatar{";
  res = JreStrcat("$$", res, JreStrcat("$$", @"smallImage=", (self->smallImage_ != nil ? @"set" : @"empty")));
  res = JreStrcat("$$", res, JreStrcat("$$", @", largeImage=", (self->largeImage_ != nil ? @"set" : @"empty")));
  res = JreStrcat("$$", res, JreStrcat("$$", @", fullImage=", (self->fullImage_ != nil ? @"set" : @"empty")));
  res = JreStrcat("$C", res, '}');
  return res;
}

@end

void APAvatar_initWithAPAvatarImage_withAPAvatarImage_withAPAvatarImage_(APAvatar *self, APAvatarImage *smallImage, APAvatarImage *largeImage, APAvatarImage *fullImage) {
  (void) BSBserObject_init(self);
  self->smallImage_ = smallImage;
  self->largeImage_ = largeImage;
  self->fullImage_ = fullImage;
}

APAvatar *new_APAvatar_initWithAPAvatarImage_withAPAvatarImage_withAPAvatarImage_(APAvatarImage *smallImage, APAvatarImage *largeImage, APAvatarImage *fullImage) {
  APAvatar *self = [APAvatar alloc];
  APAvatar_initWithAPAvatarImage_withAPAvatarImage_withAPAvatarImage_(self, smallImage, largeImage, fullImage);
  return self;
}

void APAvatar_init(APAvatar *self) {
  (void) BSBserObject_init(self);
}

APAvatar *new_APAvatar_init() {
  APAvatar *self = [APAvatar alloc];
  APAvatar_init(self);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(APAvatar)
