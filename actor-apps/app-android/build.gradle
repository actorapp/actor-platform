repositories {
    mavenCentral()
    jcenter()
    maven { url 'https://mint.splunk.com/gradle/' }
}

buildscript {
    dependencies {
        classpath 'com.android.tools.build:gradle:1.2.3'
    }
}

apply plugin: 'com.android.application'

def basicVersion = '1.0'
def customVersionCode = '10240';
if (project.hasProperty('buildIndex')) {
    project.version = basicVersion + '.' + project.buildIndex
    customVersionCode = '' + project.buildIndex
} else {
    project.version = 'debug'
}

android {

    compileSdkVersion 22
    buildToolsVersion '22.0.1'

    defaultConfig {
        minSdkVersion 15
        targetSdkVersion 22
        versionCode Integer.valueOf(customVersionCode)
        versionName project.version
        applicationId "im.actor"
    }

    signingConfigs {
        release
    }

    buildTypes {

        // Java types for BuildConfig
        def STRING = "String"
        def VERSION_TITLE = "VERSION_TITLE"

        release {
            buildConfigField STRING, VERSION_TITLE, "\"" + project.version + " (Release)\""
            signingConfig signingConfigs.release
            applicationIdSuffix ".cloud"
        }

        free {
            buildConfigField STRING, VERSION_TITLE, "\"" + project.version + " (Free)\""
            signingConfig signingConfigs.release
            applicationIdSuffix ".free"
        }

        debug {
            buildConfigField STRING, VERSION_TITLE, "\"Debug Version (${getDate()})\""
            applicationIdSuffix ".debug"
        }
    }

    // Setting themes
    sourceSets {

        main {
            res.srcDirs = ['src/main/res', 'src/themes/main', 'src/material-icons']
        }

        debug {
            res.srcDirs = ['src/themes/dev']
        }
    }

    // Signing configuration

    boolean isSigningLoaded = false
    if (project.rootProject.file('keystore.properties').exists()) {
        Properties properties = new Properties()
        properties.load(project.rootProject.file('keystore.properties').newDataInputStream())
        if (!properties.getProperty('androidStore', '').equals('')) {
            def androidStore = properties.getProperty('androidStore')
            def androidStorePass = properties.getProperty('androidStorePass')
            def androidAliasPass = properties.getProperty('androidAliasPass')
            def androidAlias = properties.getProperty('androidAlias')

            android.signingConfigs.release.storeFile = file(androidStore)
            android.signingConfigs.release.storePassword = androidStorePass
            android.signingConfigs.release.keyAlias = androidAlias
            android.signingConfigs.release.keyPassword = androidAliasPass

            isSigningLoaded = true
        }
    }
    if (!isSigningLoaded) {
        buildTypes.release.signingConfig = null
        buildTypes.free.signingConfig = null
    }

    // Some technical configuration

    packagingOptions {
        exclude 'LICENSE.txt'
    }

    dexOptions {
        incremental true
        preDexLibraries false
        javaMaxHeapSize "4g"
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_6
        targetCompatibility JavaVersion.VERSION_1_6
    }

    lintOptions {
        abortOnError false
    }
}
dependencies {

    compile project(':core-android')

    // UI
    compile 'com.droidkit:progress:0.5'
    compile 'com.soundcloud.android:android-crop:0.9.10@aar'
    compile 'com.facebook.fresco:fresco:0.1.0'
    compile 'com.facebook.rebound:rebound:0.3.7'
    compile('com.github.chrisbanes.photoview:library:1.2.3') {
        exclude module: 'support-v13'
    }
    compile 'com.getbase:floatingactionbutton:1.5.1'
    compile 'com.afollestad:material-dialogs:0.7.3.1'
    compile 'org.pegdown:pegdown:1.5.0'

    // Phone parser
    compile files('libs/libphonenumber-5.9.jar')

    // Android Support
    compile 'com.android.support:support-v4:22.2.0'
    compile 'com.android.support:support-v13:22.1.1'
    compile 'com.android.support:appcompat-v7:22.2.0'
    compile 'com.android.support:palette-v7:22.1.1'
    compile 'com.android.support:recyclerview-v7:22.1.1'

    // Integration
    compile 'com.mixpanel.android:mixpanel-android:4.5.3'
    compile 'com.splunk.mint:mint:4.0.8'
    compile files('libs/HockeySDK-3.5.0.jar')
}

task dist(dependsOn: ['assembleRelease', 'assembleFree']) {
    doFirst {
        println "##teamcity[buildNumber '${project.version}']"
    }
}

def getDate() {
    def date = new Date()
    def formattedDate = date.format('dd/MM/yy HH:mm:ss')
    return formattedDate
}