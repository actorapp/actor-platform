package im.actor.core.api.rpc;
/*
 *  Generated by the Actor API Scheme generator.  DO NOT EDIT!
 */

import im.actor.runtime.bser.*;
import im.actor.core.network.parser.*;

import org.jetbrains.annotations.NotNull;

import java.io.IOException;

import im.actor.core.api.*;

public class RequestMessageReceived extends Request<ResponseVoid> {

    public static final int HEADER = 0x37;
    public static RequestMessageReceived fromBytes(byte[] data) throws IOException {
        return Bser.parse(new RequestMessageReceived(), data);
    }

    private OutPeer peer;
    private long date;

    public RequestMessageReceived(@NotNull OutPeer peer, long date) {
        this.peer = peer;
        this.date = date;
    }

    public RequestMessageReceived() {

    }

    @NotNull
    public OutPeer getPeer() {
        return this.peer;
    }

    public long getDate() {
        return this.date;
    }

    @Override
    public void parse(BserValues values) throws IOException {
        this.peer = values.getObj(1, new OutPeer());
        this.date = values.getLong(3);
    }

    @Override
    public void serialize(BserWriter writer) throws IOException {
        if (this.peer == null) {
            throw new IOException();
        }
        writer.writeObject(1, this.peer);
        writer.writeLong(3, this.date);
    }

    @Override
    public String toString() {
        String res = "rpc MessageReceived{";
        res += "peer=" + this.peer;
        res += ", date=" + this.date;
        res += "}";
        return res;
    }

    @Override
    public int getHeaderKey() {
        return HEADER;
    }
}
