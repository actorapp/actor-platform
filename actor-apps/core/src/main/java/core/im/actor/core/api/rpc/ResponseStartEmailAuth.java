package im.actor.core.api.rpc;
/*
 *  Generated by the Actor API Scheme generator.  DO NOT EDIT!
 */

import im.actor.runtime.bser.*;
import im.actor.core.network.parser.*;

import org.jetbrains.annotations.NotNull;

import java.io.IOException;

import im.actor.core.api.*;

public class ResponseStartEmailAuth extends Response {

    public static final int HEADER = 0xba;
    public static ResponseStartEmailAuth fromBytes(byte[] data) throws IOException {
        return Bser.parse(new ResponseStartEmailAuth(), data);
    }

    private String transactionHash;
    private boolean isRegistered;
    private EmailActivationType activationType;

    public ResponseStartEmailAuth(@NotNull String transactionHash, boolean isRegistered, @NotNull EmailActivationType activationType) {
        this.transactionHash = transactionHash;
        this.isRegistered = isRegistered;
        this.activationType = activationType;
    }

    public ResponseStartEmailAuth() {

    }

    @NotNull
    public String getTransactionHash() {
        return this.transactionHash;
    }

    public boolean isRegistered() {
        return this.isRegistered;
    }

    @NotNull
    public EmailActivationType getActivationType() {
        return this.activationType;
    }

    @Override
    public void parse(BserValues values) throws IOException {
        this.transactionHash = values.getString(1);
        this.isRegistered = values.getBool(2);
        this.activationType = EmailActivationType.parse(values.getInt(3));
    }

    @Override
    public void serialize(BserWriter writer) throws IOException {
        if (this.transactionHash == null) {
            throw new IOException();
        }
        writer.writeString(1, this.transactionHash);
        writer.writeBool(2, this.isRegistered);
        if (this.activationType == null) {
            throw new IOException();
        }
        writer.writeInt(3, this.activationType.getValue());
    }

    @Override
    public String toString() {
        String res = "tuple StartEmailAuth{";
        res += "}";
        return res;
    }

    @Override
    public int getHeaderKey() {
        return HEADER;
    }
}
