package im.actor.core.api.rpc;
/*
 *  Generated by the Actor API Scheme generator.  DO NOT EDIT!
 */

import im.actor.runtime.bser.*;
import im.actor.core.network.parser.*;

import org.jetbrains.annotations.NotNull;

import java.io.IOException;
import java.util.List;
import java.util.ArrayList;
import im.actor.core.api.*;

public class ResponseMakeUserAdmin extends Response {

    public static final int HEADER = 0xd7;
    public static ResponseMakeUserAdmin fromBytes(byte[] data) throws IOException {
        return Bser.parse(new ResponseMakeUserAdmin(), data);
    }

    private List<Member> members;
    private int seq;
    private byte[] state;

    public ResponseMakeUserAdmin(@NotNull List<Member> members, int seq, @NotNull byte[] state) {
        this.members = members;
        this.seq = seq;
        this.state = state;
    }

    public ResponseMakeUserAdmin() {

    }

    @NotNull
    public List<Member> getMembers() {
        return this.members;
    }

    public int getSeq() {
        return this.seq;
    }

    @NotNull
    public byte[] getState() {
        return this.state;
    }

    @Override
    public void parse(BserValues values) throws IOException {
        List<Member> _members = new ArrayList<Member>();
        for (int i = 0; i < values.getRepeatedCount(1); i ++) {
            _members.add(new Member());
        }
        this.members = values.getRepeatedObj(1, _members);
        this.seq = values.getInt(2);
        this.state = values.getBytes(3);
    }

    @Override
    public void serialize(BserWriter writer) throws IOException {
        writer.writeRepeatedObj(1, this.members);
        writer.writeInt(2, this.seq);
        if (this.state == null) {
            throw new IOException();
        }
        writer.writeBytes(3, this.state);
    }

    @Override
    public String toString() {
        String res = "tuple MakeUserAdmin{";
        res += "}";
        return res;
    }

    @Override
    public int getHeaderKey() {
        return HEADER;
    }
}
