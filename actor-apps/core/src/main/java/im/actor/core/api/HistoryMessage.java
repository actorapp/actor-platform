package im.actor.core.api;
/*
 *  Generated by the Actor API Scheme generator.  DO NOT EDIT!
 */

import im.actor.runtime.bser.*;

import org.jetbrains.annotations.Nullable;
import org.jetbrains.annotations.NotNull;

import java.io.IOException;

public class HistoryMessage extends BserObject {

    private int senderUid;
    private long rid;
    private long date;
    private ApiMessage message;
    private ApiMessageState state;

    public HistoryMessage(int senderUid, long rid, long date, @NotNull ApiMessage message, @Nullable ApiMessageState state) {
        this.senderUid = senderUid;
        this.rid = rid;
        this.date = date;
        this.message = message;
        this.state = state;
    }

    public HistoryMessage() {

    }

    public int getSenderUid() {
        return this.senderUid;
    }

    public long getRid() {
        return this.rid;
    }

    public long getDate() {
        return this.date;
    }

    @NotNull
    public ApiMessage getMessage() {
        return this.message;
    }

    @Nullable
    public ApiMessageState getState() {
        return this.state;
    }

    @Override
    public void parse(BserValues values) throws IOException {
        this.senderUid = values.getInt(1);
        this.rid = values.getLong(2);
        this.date = values.getLong(3);
        this.message = ApiMessage.fromBytes(values.getBytes(5));
        int val_state = values.getInt(6, 0);
        if (val_state != 0) {
            this.state = ApiMessageState.parse(val_state);
        }
    }

    @Override
    public void serialize(BserWriter writer) throws IOException {
        writer.writeInt(1, this.senderUid);
        writer.writeLong(2, this.rid);
        writer.writeLong(3, this.date);
        if (this.message == null) {
            throw new IOException();
        }

        writer.writeBytes(5, this.message.buildContainer());
        if (this.state != null) {
            writer.writeInt(6, this.state.getValue());
        }
    }

    @Override
    public String toString() {
        String res = "struct HistoryMessage{";
        res += "senderUid=" + this.senderUid;
        res += ", rid=" + this.rid;
        res += ", date=" + this.date;
        res += ", message=" + this.message;
        res += "}";
        return res;
    }

}
