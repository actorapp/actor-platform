package im.actor.core.api.rpc;
/*
 *  Generated by the Actor API Scheme generator.  DO NOT EDIT!
 */

import im.actor.runtime.bser.*;
import im.actor.runtime.collections.*;
import static im.actor.runtime.bser.Utils.*;
import im.actor.core.network.parser.*;
import org.jetbrains.annotations.Nullable;
import org.jetbrains.annotations.NotNull;
import com.google.j2objc.annotations.ObjectiveCName;
import java.io.IOException;
import java.util.List;
import java.util.ArrayList;
import im.actor.core.api.*;

public class ResponseGetFileUploadUrl extends Response {

    public static final int HEADER = 0x79;
    public static ResponseGetFileUploadUrl fromBytes(byte[] data) throws IOException {
        return Bser.parse(new ResponseGetFileUploadUrl(), data);
    }

    private String url;
    private byte[] uploadKey;

    public ResponseGetFileUploadUrl(@NotNull String url, @NotNull byte[] uploadKey) {
        this.url = url;
        this.uploadKey = uploadKey;
    }

    public ResponseGetFileUploadUrl() {

    }

    @NotNull
    public String getUrl() {
        return this.url;
    }

    @NotNull
    public byte[] getUploadKey() {
        return this.uploadKey;
    }

    @Override
    public void parse(BserValues values) throws IOException {
        this.url = values.getString(1);
        this.uploadKey = values.getBytes(2);
    }

    @Override
    public void serialize(BserWriter writer) throws IOException {
        if (this.url == null) {
            throw new IOException();
        }
        writer.writeString(1, this.url);
        if (this.uploadKey == null) {
            throw new IOException();
        }
        writer.writeBytes(2, this.uploadKey);
    }

    @Override
    public String toString() {
        String res = "tuple GetFileUploadUrl{";
        res += "}";
        return res;
    }

    @Override
    public int getHeaderKey() {
        return HEADER;
    }
}
