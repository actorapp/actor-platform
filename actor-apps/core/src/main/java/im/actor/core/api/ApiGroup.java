package im.actor.core.api;
/*
 *  Generated by the Actor API Scheme generator.  DO NOT EDIT!
 */

import im.actor.runtime.bser.*;
import im.actor.runtime.collections.*;
import static im.actor.runtime.bser.Utils.*;
import im.actor.core.network.parser.*;
import org.jetbrains.annotations.Nullable;
import org.jetbrains.annotations.NotNull;
import com.google.j2objc.annotations.ObjectiveCName;
import java.io.IOException;
import java.util.List;
import java.util.ArrayList;

public class ApiGroup extends BserObject {

    private int id;
    private long accessHash;
    private String title;
    private ApiAvatar avatar;
    private boolean isMember;
    private int creatorUid;
    private List<ApiMember> members;
    private long createDate;
    private Boolean disableEdit;
    private Boolean disableInviteView;
    private Boolean disableInviteRevoke;
    private Boolean disableIntegrationView;
    private Boolean disableIntegrationsRevoke;
    private Boolean isAdmin;
    private String theme;
    private String about;
    private Boolean isHidden;
    private List<ApiExtension> extensions;

    public ApiGroup(int id, long accessHash, @NotNull String title, @Nullable ApiAvatar avatar, boolean isMember, int creatorUid, @NotNull List<ApiMember> members, long createDate, @Nullable Boolean disableEdit, @Nullable Boolean disableInviteView, @Nullable Boolean disableInviteRevoke, @Nullable Boolean disableIntegrationView, @Nullable Boolean disableIntegrationsRevoke, @Nullable Boolean isAdmin, @Nullable String theme, @Nullable String about, @Nullable Boolean isHidden, @NotNull List<ApiExtension> extensions) {
        this.id = id;
        this.accessHash = accessHash;
        this.title = title;
        this.avatar = avatar;
        this.isMember = isMember;
        this.creatorUid = creatorUid;
        this.members = members;
        this.createDate = createDate;
        this.disableEdit = disableEdit;
        this.disableInviteView = disableInviteView;
        this.disableInviteRevoke = disableInviteRevoke;
        this.disableIntegrationView = disableIntegrationView;
        this.disableIntegrationsRevoke = disableIntegrationsRevoke;
        this.isAdmin = isAdmin;
        this.theme = theme;
        this.about = about;
        this.isHidden = isHidden;
        this.extensions = extensions;
    }

    public ApiGroup() {

    }

    public int getId() {
        return this.id;
    }

    public long getAccessHash() {
        return this.accessHash;
    }

    @NotNull
    public String getTitle() {
        return this.title;
    }

    @Nullable
    public ApiAvatar getAvatar() {
        return this.avatar;
    }

    public boolean isMember() {
        return this.isMember;
    }

    public int getCreatorUid() {
        return this.creatorUid;
    }

    @NotNull
    public List<ApiMember> getMembers() {
        return this.members;
    }

    public long getCreateDate() {
        return this.createDate;
    }

    @Nullable
    public Boolean disableEdit() {
        return this.disableEdit;
    }

    @Nullable
    public Boolean disableInviteView() {
        return this.disableInviteView;
    }

    @Nullable
    public Boolean disableInviteRevoke() {
        return this.disableInviteRevoke;
    }

    @Nullable
    public Boolean disableIntegrationView() {
        return this.disableIntegrationView;
    }

    @Nullable
    public Boolean disableIntegrationsRevoke() {
        return this.disableIntegrationsRevoke;
    }

    @Nullable
    public Boolean isAdmin() {
        return this.isAdmin;
    }

    @Nullable
    public String getTheme() {
        return this.theme;
    }

    @Nullable
    public String getAbout() {
        return this.about;
    }

    @Nullable
    public Boolean isHidden() {
        return this.isHidden;
    }

    @NotNull
    public List<ApiExtension> getExtensions() {
        return this.extensions;
    }

    @Override
    public void parse(BserValues values) throws IOException {
        this.id = values.getInt(1);
        this.accessHash = values.getLong(2);
        this.title = values.getString(3);
        this.avatar = values.optObj(4, new ApiAvatar());
        this.isMember = values.getBool(6);
        this.creatorUid = values.getInt(8);
        List<ApiMember> _members = new ArrayList<ApiMember>();
        for (int i = 0; i < values.getRepeatedCount(9); i ++) {
            _members.add(new ApiMember());
        }
        this.members = values.getRepeatedObj(9, _members);
        this.createDate = values.getLong(10);
        this.disableEdit = values.optBool(11);
        this.disableInviteView = values.optBool(12);
        this.disableInviteRevoke = values.optBool(13);
        this.disableIntegrationView = values.optBool(14);
        this.disableIntegrationsRevoke = values.optBool(15);
        this.isAdmin = values.optBool(16);
        this.theme = values.optString(17);
        this.about = values.optString(18);
        this.isHidden = values.optBool(20);
        List<ApiExtension> _extensions = new ArrayList<ApiExtension>();
        for (int i = 0; i < values.getRepeatedCount(21); i ++) {
            _extensions.add(new ApiExtension());
        }
        this.extensions = values.getRepeatedObj(21, _extensions);
        if (values.hasRemaining()) {
            setUnmappedObjects(values.buildRemaining());
        }
    }

    @Override
    public void serialize(BserWriter writer) throws IOException {
        writer.writeInt(1, this.id);
        writer.writeLong(2, this.accessHash);
        if (this.title == null) {
            throw new IOException();
        }
        writer.writeString(3, this.title);
        if (this.avatar != null) {
            writer.writeObject(4, this.avatar);
        }
        writer.writeBool(6, this.isMember);
        writer.writeInt(8, this.creatorUid);
        writer.writeRepeatedObj(9, this.members);
        writer.writeLong(10, this.createDate);
        if (this.disableEdit != null) {
            writer.writeBool(11, this.disableEdit);
        }
        if (this.disableInviteView != null) {
            writer.writeBool(12, this.disableInviteView);
        }
        if (this.disableInviteRevoke != null) {
            writer.writeBool(13, this.disableInviteRevoke);
        }
        if (this.disableIntegrationView != null) {
            writer.writeBool(14, this.disableIntegrationView);
        }
        if (this.disableIntegrationsRevoke != null) {
            writer.writeBool(15, this.disableIntegrationsRevoke);
        }
        if (this.isAdmin != null) {
            writer.writeBool(16, this.isAdmin);
        }
        if (this.theme != null) {
            writer.writeString(17, this.theme);
        }
        if (this.about != null) {
            writer.writeString(18, this.about);
        }
        if (this.isHidden != null) {
            writer.writeBool(20, this.isHidden);
        }
        writer.writeRepeatedObj(21, this.extensions);
        if (this.getUnmappedObjects() != null) {
            SparseArray<Object> unmapped = this.getUnmappedObjects();
            for (int i = 0; i < unmapped.size(); i++) {
                int key = unmapped.keyAt(i);
                writer.writeUnmapped(key, unmapped.get(key));
            }
        }
    }

    @Override
    public String toString() {
        String res = "struct Group{";
        res += "id=" + this.id;
        res += ", avatar=" + (this.avatar != null ? "set":"empty");
        res += ", isMember=" + this.isMember;
        res += ", members=" + this.members.size();
        res += ", createDate=" + this.createDate;
        res += ", disableEdit=" + this.disableEdit;
        res += ", disableInviteView=" + this.disableInviteView;
        res += ", disableIntegrationView=" + this.disableIntegrationView;
        res += ", extensions=" + this.extensions;
        res += "}";
        return res;
    }

}
