package im.actor.core.api;
/*
 *  Generated by the Actor API Scheme generator.  DO NOT EDIT!
 */

import im.actor.runtime.bser.*;
import im.actor.runtime.collections.*;
import static im.actor.runtime.bser.Utils.*;
import im.actor.core.network.parser.*;
import org.jetbrains.annotations.Nullable;
import org.jetbrains.annotations.NotNull;
import com.google.j2objc.annotations.ObjectiveCName;
import java.io.IOException;
import java.util.List;
import java.util.ArrayList;

public class ApiInterest extends BserObject {

    private int id;
    private String title;
    private boolean isSelected;
    private List<ApiInterest> childInterests;

    public ApiInterest(int id, @NotNull String title, boolean isSelected, @NotNull List<ApiInterest> childInterests) {
        this.id = id;
        this.title = title;
        this.isSelected = isSelected;
        this.childInterests = childInterests;
    }

    public ApiInterest() {

    }

    public int getId() {
        return this.id;
    }

    @NotNull
    public String getTitle() {
        return this.title;
    }

    public boolean isSelected() {
        return this.isSelected;
    }

    @NotNull
    public List<ApiInterest> getChildInterests() {
        return this.childInterests;
    }

    @Override
    public void parse(BserValues values) throws IOException {
        this.id = values.getInt(1);
        this.title = values.getString(2);
        this.isSelected = values.getBool(4);
        List<ApiInterest> _childInterests = new ArrayList<ApiInterest>();
        for (int i = 0; i < values.getRepeatedCount(3); i ++) {
            _childInterests.add(new ApiInterest());
        }
        this.childInterests = values.getRepeatedObj(3, _childInterests);
    }

    @Override
    public void serialize(BserWriter writer) throws IOException {
        writer.writeInt(1, this.id);
        if (this.title == null) {
            throw new IOException();
        }
        writer.writeString(2, this.title);
        writer.writeBool(4, this.isSelected);
        writer.writeRepeatedObj(3, this.childInterests);
    }

    @Override
    public String toString() {
        String res = "struct Interest{";
        res += "id=" + this.id;
        res += ", title=" + this.title;
        res += ", childInterests=" + this.childInterests;
        res += "}";
        return res;
    }

}
