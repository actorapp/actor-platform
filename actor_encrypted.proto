//////////////////////////////////////////////////////
// End-To-End messages
//////////////////////////////////////////////////////
//Basic conainer for End-To-End message is PlainPackage.
//If messageType in PlainPackage == 1 than contents of body is PlainMessage.
//PlainMessage is a conversation message.
//PlainMessage contans messageType:
//  messageType == 0x01 => body is TextMessage
//  messageType == 0x02 => body is FileMessage
//  messageType == 0x03 => body is ServiceMessage
// 
//TextMessage has extension
//  extType == 0x01 => extension is MarkdownMessage
// 
//FileMessage has extensions
//  extType == 0x01 => extension is PhotoExtension
//  extType == 0x02 => extension is VideoExtension
//  extType == 0x03 => extension is AudioExtension

message PlainPackage {
    required int32 messsageType = 1;
    required bytes body = 2;
    required int64 crc32 = 3;
}

message PlainMessage {
    required int64 guid = 1;
    required int32 messageType = 2;
    required bytes body = 3;
}

message TextMessage {
    required string text = 1;
    required int32 extType = 2;
    optional bytes extension = 3;
}

message FileMessage {
    required string name = 1;
    required string mimeType = 2;
    required PlainFileLocation fileLocation = 3;
    optional FastThumb fastThumb = 4;
    required int32 extType = 5;
    optional bytes extension = 6;
}

enum EncryptionType {
    NONE = 0;
    AES = 1;
    AES_THEN_MAC = 2;
}

message PlainFileLocation {
    required int64 fileId = 1;
    required int64 accessHash = 2;
    required int32 fileSize = 3;
    required EncryptionType encryptionType = 4;
    required int32 encryptedFileSize = 5;
    required bytes encryptionKey = 6;
}

message FastThumb {
    required int32 w = 1;
    required int32 h = 2;
    required bytes preview = 4;
}

message ServiceMessage {
    required string text = 1;
    required int32 extType = 2;
    optional bytes extension = 3;
}

message MarkdownMessage {
    required string markdown = 1;
}

message PhotoExtension {
    required int32 w = 1;
    required int32 h = 2;
}

message VideoExtension {
    required int32 w = 1;
    required int32 h = 2;
    required int32 duration = 3;
}

message AudioExtension {
    required int32 duration = 3;
}

