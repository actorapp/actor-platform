package im.actor.model.api.rpc;
/*
 *  Generated by the Actor API Scheme generator.  DO NOT EDIT!
 */

import im.actor.model.droidkit.bser.Bser;
import im.actor.model.droidkit.bser.BserParser;
import im.actor.model.droidkit.bser.BserObject;
import im.actor.model.droidkit.bser.BserValues;
import im.actor.model.droidkit.bser.BserWriter;
import im.actor.model.droidkit.bser.DataInput;
import im.actor.model.droidkit.bser.DataOutput;
import im.actor.model.droidkit.bser.util.SparseArray;
import org.jetbrains.annotations.Nullable;
import org.jetbrains.annotations.NotNull;
import com.google.j2objc.annotations.ObjectiveCName;
import static im.actor.model.droidkit.bser.Utils.*;
import java.io.IOException;
import im.actor.model.network.parser.*;
import java.util.List;
import java.util.ArrayList;
import im.actor.model.api.*;

public class RequestGetFileUploadPartUrl extends Request<ResponseGetFileUploadPartUrl> {

    public static final int HEADER = 0x8e;
    public static RequestGetFileUploadPartUrl fromBytes(byte[] data) throws IOException {
        return Bser.parse(new RequestGetFileUploadPartUrl(), data);
    }

    private int partNumber;
    private int partSize;
    private byte[] uploadKey;

    public RequestGetFileUploadPartUrl(int partNumber, int partSize, @NotNull byte[] uploadKey) {
        this.partNumber = partNumber;
        this.partSize = partSize;
        this.uploadKey = uploadKey;
    }

    public RequestGetFileUploadPartUrl() {

    }

    public int getPartNumber() {
        return this.partNumber;
    }

    public int getPartSize() {
        return this.partSize;
    }

    @NotNull
    public byte[] getUploadKey() {
        return this.uploadKey;
    }

    @Override
    public void parse(BserValues values) throws IOException {
        this.partNumber = values.getInt(1);
        this.partSize = values.getInt(2);
        this.uploadKey = values.getBytes(3);
    }

    @Override
    public void serialize(BserWriter writer) throws IOException {
        writer.writeInt(1, this.partNumber);
        writer.writeInt(2, this.partSize);
        if (this.uploadKey == null) {
            throw new IOException();
        }
        writer.writeBytes(3, this.uploadKey);
    }

    @Override
    public String toString() {
        String res = "rpc GetFileUploadPartUrl{";
        res += "uploadKey=" + byteArrayToStringCompact(this.uploadKey);
        res += "}";
        return res;
    }

    @Override
    public int getHeaderKey() {
        return HEADER;
    }
}
