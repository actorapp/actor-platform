package im.actor.apiLanguage.structure;

/*Generated by MPS */

import java.util.List;
import jetbrains.mps.internal.collections.runtime.ListSequence;
import jetbrains.mps.internal.collections.runtime.backports.LinkedList;

public enum ParameterCategory {
  hidden("hidden", "hidden"),
  full("full", "full"),
  compact("compact", "compact"),
  danger("danger", "danger");

  private String myName;
  public String getName() {
    return this.myName;
  }
  public String getValueAsString() {
    return this.myValue;
  }
  public static List<ParameterCategory> getConstants() {
    List<ParameterCategory> list = ListSequence.fromList(new LinkedList<ParameterCategory>());
    ListSequence.fromList(list).addElement(ParameterCategory.hidden);
    ListSequence.fromList(list).addElement(ParameterCategory.full);
    ListSequence.fromList(list).addElement(ParameterCategory.compact);
    ListSequence.fromList(list).addElement(ParameterCategory.danger);
    return list;
  }
  public static ParameterCategory getDefault() {
    return ParameterCategory.hidden;
  }
  public static ParameterCategory parseValue(String value) {
    if (value == null) {
      return ParameterCategory.getDefault();
    }
    if (value.equals(ParameterCategory.hidden.getValueAsString())) {
      return ParameterCategory.hidden;
    }
    if (value.equals(ParameterCategory.full.getValueAsString())) {
      return ParameterCategory.full;
    }
    if (value.equals(ParameterCategory.compact.getValueAsString())) {
      return ParameterCategory.compact;
    }
    if (value.equals(ParameterCategory.danger.getValueAsString())) {
      return ParameterCategory.danger;
    }
    return ParameterCategory.getDefault();
  }
  private String myValue;
  ParameterCategory(String name, String value) {
    this.myName = name;
    this.myValue = value;
  }
  public String getValue() {
    return this.myValue;
  }
}
